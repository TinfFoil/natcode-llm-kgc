text: Using these ideas together , the resulting tagger gives a 97.24 % accuracy on the Penn Treebank WSJ , an error reduction of 4.4 % on the best previous single automatically learned tagging result .
result: triple_list: [["accuracy", "Evaluate_for", "Penn Treebank WSJ"], ["accuracy", "Compare", "single automatically learned tagging result"]]
pred: [('accuracy', 'Evaluate_for', 'Penn Treebank WSJ'), ('accuracy', 'Compare', 'single automatically learned tagging result')]
trues: [['accuracy', 'Evaluate_for', 'tagger'], ['Penn Treebank WSJ', 'Evaluate_for', 'tagger'], ['error', 'Evaluate_for', 'tagger']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.0, 0.0, 0]
text: We discuss several applications of the result to the problem of distributional approximation of probabilistic context-free grammars by means of probabilistic finite automata .
result: triple_list: [["probabilistic context-free grammars", "Used_for", "distributional approximation"], ["probabilistic finite automata", "Used_for", "distributional approximation"]]
pred: [('probabilistic context-free grammars', 'Used_for', 'distributional approximation'), ('probabilistic finite automata', 'Used_for', 'distributional approximation')]
trues: [['distributional approximation', 'Feature_of', 'probabilistic context-free grammars'], ['probabilistic finite automata', 'Used_for', 'distributional approximation']]
metrics_sample: [0.5, 0.5, 0.5]
metrics_current: [0.25, 0.2, 0.22222222222222224]
text: Unlike existing interest point detectors , which measure pixel-wise differences in image intensity , our detectors incorporate histogram-based representations , and thus can find image regions that present a distinct distribution in the neighborhood .
result: triple_list: [["pixel-wise differences in image intensity", "measure", "interest point detectors"], ["histogram-based representations", "feature_of", "detectors"], ["histogram-based representations", "feature_of", "image regions"]]
pred: [('pixel-wise differences in image intensity', 'measure', 'interest point detectors'), ('histogram-based representations', 'feature_of', 'detectors'), ('histogram-based representations', 'feature_of', 'image regions')]
trues: [['pixel-wise differences in image intensity', 'Evaluate_for', 'interest point detectors'], ['histogram-based representations', 'Part_of', 'detectors']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.14285714285714285, 0.14285714285714285, 0.14285714285714285]
text: We present a novel approach for automatically acquiring English topic signatures .
result: The candidate relations for this text are:
Used_for
The candidate entities for this text are:
approach
English topic signatures
pred: []
trues: [['approach', 'Used_for', 'automatically acquiring English topic signatures']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.14285714285714285, 0.125, 0.13333333333333333]
text: Recent progress in computer vision has been driven by high-capacity models trained on large datasets .
result: The candidate relations for this text are:
Used_for
The candidate entities for this text are:
large datasets
high-capacity models
pred: []
trues: [['high-capacity models', 'Used_for', 'computer vision'], ['large datasets', 'Used_for', 'high-capacity models']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.14285714285714285, 0.1, 0.11764705882352941]
text: We have built and will demonstrate an application of this approach called LCS-Marine .
result: triple_list: [["LCS-Marine", "Hyponym_of", "approach"]]
pred: [('LCS-Marine', 'Hyponym_of', 'approach')]
trues: [['approach', 'Used_for', 'LCS-Marine']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.125, 0.09090909090909091, 0.10526315789473685]
text: We conclude that previous approaches have neglected to evaluate systems in the context of their use , e.g. solving a task requiring data retrieval .
result: The candidate relations for this text are:
Used_for
The candidate entities for this text are:
approaches
systems
pred: []
trues: [['approaches', 'Evaluate_for', 'systems'], ['systems', 'Used_for', 'task'], ['data retrieval', 'Part_of', 'task']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.125, 0.07142857142857142, 0.09090909090909091]
text: We consider the problem of computing the Kullback-Leibler distance , also called the relative entropy , between a probabilistic context-free grammar and a probabilistic finite automaton .
result: triple_list: [["Kullback-Leibler distance", "Evaluate_for", "probabilistic context-free grammar"]]
pred: [('Kullback-Leibler distance', 'Evaluate_for', 'probabilistic context-free grammar')]
trues: [['probabilistic context-free grammar', 'Compare', 'probabilistic finite automaton']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.1111111111111111, 0.06666666666666667, 0.08333333333333334]
text: Using this approach , we extract parallel data from large Chinese , Arabic , and English non-parallel newspaper corpora .
result: The candidate relations for this text are:
Used_for
The candidate entities for this text are:
large Chinese, Arabic, and English non-parallel newspaper corpora
approach
pred: []
trues: [['approach', 'Used_for', 'parallel data'], ['parallel data', 'Part_of', 'Chinese , Arabic , and English non-parallel newspaper corpora']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.1111111111111111, 0.058823529411764705, 0.07692307692307691]
text: The seven categories of the scheme are based on rhetorical moves of argumentation .
result: The candidate relations for this text are:
Used_for
The candidate entities for this text are:
rhetorical moves of argumentation
scheme
pred: []
trues: [['rhetorical moves of argumentation', 'Used_for', 'scheme']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.1111111111111111, 0.05555555555555555, 0.07407407407407407]
text: A general procedure for the estimation and quantization of these cycloidal motion parameters for arbitrary handwriting is presented .
result: triple_list: [["cycloidal motion parameters", "estimation", "arbitrary handwriting"]]
pred: [('cycloidal motion parameters', 'estimation', 'arbitrary handwriting')]
trues: [['cycloidal motion parameters', 'Used_for', 'arbitrary handwriting']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.1, 0.05263157894736842, 0.06896551724137931]
text: In this paper , a novel framework for machine transliteration/backtransliteration that allows us to carry out direct orthographical mapping ( DOM ) between two different languages is presented .
result: triple_list: [["framework", "Used_for", "machine transliteration/backtransliteration"], ["direct orthographical mapping ( DOM )", "Used_for", "machine transliteration/backtransliteration"]]
pred: [('framework', 'Used_for', 'machine transliteration/backtransliteration'), ('direct orthographical mapping ( DOM )', 'Used_for', 'machine transliteration/backtransliteration')]
trues: [['framework', 'Used_for', 'machine transliteration/backtransliteration'], ['machine transliteration/backtransliteration', 'Used_for', 'direct orthographical mapping ( DOM )']]
metrics_sample: [0.5, 0.5, 0.5]
metrics_current: [0.16666666666666666, 0.09523809523809523, 0.12121212121212123]
text: It works by calculating eigenvectors of an adjacency graph 's Laplacian to recover a submanifold of data from a high dimensionality space and then performing cluster number estimation on the eigenvectors .
result: triple_list: [["It", "used_for", "eigenvectors of an adjacency graph's Laplacian"], ["eigenvectors of an adjacency graph's Laplacian", "used_for", "cluster number estimation"]]
pred: [('It', 'used_for', "eigenvectors of an adjacency graph's Laplacian"), ("eigenvectors of an adjacency graph's Laplacian", 'used_for', 'cluster number estimation')]
trues: [['It', 'Used_for', 'submanifold'], ['eigenvectors', 'Used_for', 'It'], ["adjacency graph 's Laplacian", 'Feature_of', 'eigenvectors'], ['high dimensionality space', 'Used_for', 'submanifold'], ['cluster number estimation', 'Used_for', 'It'], ['cluster number estimation', 'Used_for', 'eigenvectors']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.14285714285714285, 0.07407407407407407, 0.0975609756097561]
text: This poster paper describes a full scale two-level morphological description ( Karttunen , 1983 ; Koskenniemi , 1983 ) of Turkish word structures .
result: triple_list: [["Turkish word structures", "feature_of", "two-level morphological description"]]
pred: [('Turkish word structures', 'feature_of', 'two-level morphological description')]
trues: [['full scale two-level morphological description', 'Used_for', 'Turkish word structures']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.13333333333333333, 0.07142857142857142, 0.09302325581395349]
text: This paper proposes a generic mathematical formalism for the combination of various structures : strings , trees , dags , graphs , and products of them .
result: triple_list: [["strings", "Hyponym_of", "structures"], ["trees", "Hyponym_of", "structures"], ["dags", "Hyponym_of", "structures"], ["graphs", "Hyponym_of", "structures"], ["them", "Conjunction", "graphs"]]
pred: [('strings', 'Hyponym_of', 'structures'), ('trees', 'Hyponym_of', 'structures'), ('dags', 'Hyponym_of', 'structures'), ('graphs', 'Hyponym_of', 'structures'), ('them', 'Conjunction', 'graphs')]
trues: [['strings', 'Hyponym_of', 'structures'], ['strings', 'Conjunction', 'trees'], ['trees', 'Hyponym_of', 'structures'], ['trees', 'Conjunction', 'dags'], ['dags', 'Hyponym_of', 'structures'], ['dags', 'Conjunction', 'graphs'], ['graphs', 'Hyponym_of', 'structures']]
metrics_sample: [0.8, 0.5714285714285714, 0.6666666666666666]
metrics_current: [0.3, 0.17142857142857143, 0.21818181818181817]
text: Sentence boundary detection in speech is important for enriching speech recognition output , making it easier for humans to read and downstream modules to process .
result: The candidate relations for this text are:
Used_for
Used_for
The candidate entities for this text are:
speech recognition
Sentence boundary detection
it
downstream modules
pred: []
trues: [['Sentence boundary detection', 'Used_for', 'speech recognition output'], ['speech', 'Used_for', 'Sentence boundary detection']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.3, 0.16216216216216217, 0.2105263157894737]
text: Evaluation on the ACE 2003 corpus shows that the convolution kernel over parse trees can achieve comparable performance with the previous best-reported feature-based methods on the 24 ACE relation subtypes .
result: triple_list: [["ACE 2003 corpus", "Evaluate_for", "convolution kernel over parse trees"]]
pred: [('ACE 2003 corpus', 'Evaluate_for', 'convolution kernel over parse trees')]
trues: [['ACE 2003 corpus', 'Evaluate_for', 'convolution kernel over parse trees'], ['feature-based methods', 'Compare', 'convolution kernel over parse trees']]
metrics_sample: [1.0, 0.5, 0.6666666666666666]
metrics_current: [0.3333333333333333, 0.1794871794871795, 0.23333333333333334]
text: We believe that these evaluation techniques will provide information about both the human language learning process , the translation process and the development of machine translation systems .
result: triple_list: [["evaluation techniques", "Used_for", "human language learning process"], ["evaluation techniques", "Used_for", "translation process"], ["evaluation techniques", "Used_for", "machine translation systems"]]
pred: [('evaluation techniques', 'Used_for', 'human language learning process'), ('evaluation techniques', 'Used_for', 'translation process'), ('evaluation techniques', 'Used_for', 'machine translation systems')]
trues: [['evaluation techniques', 'Used_for', 'human language learning process'], ['evaluation techniques', 'Used_for', 'translation process'], ['evaluation techniques', 'Used_for', 'machine translation systems'], ['human language learning process', 'Conjunction', 'translation process'], ['translation process', 'Conjunction', 'machine translation systems']]
metrics_sample: [1.0, 0.6, 0.7499999999999999]
metrics_current: [0.4166666666666667, 0.22727272727272727, 0.29411764705882354]
text: We describe a hierarchy of loss functions that incorporate different levels of linguistic information from word strings , word-to-word alignments from an MT system , and syntactic structure from parse-trees of source and target language sentences .
result: The candidate relations for this text are:
Used_for
Used_for
Conjunction
Used_for
Conjunction
Used_for
The candidate entities for this text are:
hierarchy of loss functions
linguistic information
hierarchy of loss functions
word strings
word strings
word-to-word alignments
word-to-word alignments
MT system
MT system
syntactic structure
syntactic structure
parse-trees
pred: []
trues: [['linguistic information', 'Used_for', 'loss functions'], ['word-to-word alignments', 'Used_for', 'loss functions'], ['word-to-word alignments', 'Part_of', 'MT system'], ['syntactic structure', 'Used_for', 'loss functions'], ['parse-trees', 'Part_of', 'syntactic structure']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.4166666666666667, 0.20408163265306123, 0.273972602739726]
text: From this point of view , selecting suitable positive ( i.e. intra-class ) training samples within a local range is critical for training the CNN embedding , especially when the data has large intra-class variations .
result: triple_list: [["positive ( i.e. intra-class ) training samples", "Conjunction", "CNN embedding"]]
pred: [('positive ( i.e. intra-class ) training samples', 'Conjunction', 'CNN embedding')]
trues: [['intra-class variations', 'Feature_of', 'data']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.4, 0.2, 0.26666666666666666]
text: The key idea of our approach is to use different view points for reasoning about contradictions and consistencies between multiple depth maps generated with the same stereo algorithm .
result: triple_list: [["view points", "Used_for", "reasoning about contradictions and consistencies between multiple depth maps"]]
pred: [('view points', 'Used_for', 'reasoning about contradictions and consistencies between multiple depth maps')]
trues: [['view points', 'Used_for', 'approach']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.38461538461538464, 0.19607843137254902, 0.25974025974025977]
text: The integrated learning system has been experimentally validated in simulated construction and ooce domains .
result: triple_list: [["simulated construction and ooce domains", "Evaluate_for", "integrated learning system"]]
pred: [('simulated construction and ooce domains', 'Evaluate_for', 'integrated learning system')]
trues: [['simulated construction', 'Evaluate_for', 'integrated learning system'], ['simulated construction', 'Conjunction', 'ooce domains'], ['ooce domains', 'Evaluate_for', 'integrated learning system']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.37037037037037035, 0.18518518518518517, 0.24691358024691354]
text: Experiments using the SemCor and Senseval-3 data sets demonstrate that our ensembles yield significantly better results when compared with state-of-the-art .
result: The candidate relations for this text are:
Evaluate_for
Evaluate_for
Compare
The candidate entities for this text are:
SemCor
ensembles
Senseval-3 data sets
ensembles
ensembles
state-of-the-art
pred: []
trues: [['SemCor and Senseval-3 data sets', 'Evaluate_for', 'ensembles'], ['SemCor and Senseval-3 data sets', 'Evaluate_for', 'state-of-the-art']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.37037037037037035, 0.17857142857142858, 0.24096385542168672]
text: Many of the resources used are derived from data created by human beings out of an NLP context , especially regarding MT and reference translations .
result: The candidate relations for this text are:
Used_for
Used_for
Used_for
The candidate entities for this text are:
resources
NLP context
data
NLP context
MT
resources
reference translations
resources
pred: []
trues: [['MT', 'Hyponym_of', 'NLP'], ['MT', 'Conjunction', 'reference translations'], ['reference translations', 'Hyponym_of', 'NLP']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.37037037037037035, 0.1694915254237288, 0.2325581395348837]
text: We present a new part-of-speech tagger that demonstrates the following ideas : ( i ) explicit use of both preceding and following tag contexts via a dependency network representation , ( ii ) broad use of lexical features , including jointly conditioning on multiple consecutive words , ( iii ) effective use of priors in conditional loglinear models , and ( iv ) fine-grained modeling of unknown word features .
result: triple_list: [["preceding and following tag contexts", "Used_for", "part-of-speech tagger"], ["preceding and following tag contexts", "Used_for", "dependency network representation"], ["preceding and following tag contexts", "Conjunction", "dependency network representation"], ["preceding and following tag contexts", "Used_for", "part-of-speech tagger"], ["lexical features", "Used_for", "part-of-speech tagger"], ["jointly conditioning on multiple consecutive words", "Hyponym_of", "lexical features"], ["jointly conditioning on multiple consecutive words", "Used_for", "part-of-speech tagger"], ["priors", "Used_for", "conditional loglinear models"], ["priors", "Used_for", "part-of-speech tagger"], ["unknown word features", "Used_for", "fine-grained modeling"], ["unknown word features", "Conjunction", "fine-grained modeling"]]
pred: [('preceding and following tag contexts', 'Used_for', 'part-of-speech tagger'), ('preceding and following tag contexts', 'Used_for', 'dependency network representation'), ('preceding and following tag contexts', 'Conjunction', 'dependency network representation'), ('preceding and following tag contexts', 'Used_for', 'part-of-speech tagger'), ('lexical features', 'Used_for', 'part-of-speech tagger'), ('jointly conditioning on multiple consecutive words', 'Hyponym_of', 'lexical features'), ('jointly conditioning on multiple consecutive words', 'Used_for', 'part-of-speech tagger'), ('priors', 'Used_for', 'conditional loglinear models'), ('priors', 'Used_for', 'part-of-speech tagger'), ('unknown word features', 'Used_for', 'fine-grained modeling'), ('unknown word features', 'Conjunction', 'fine-grained modeling')]
trues: [['tag contexts', 'Used_for', 'part-of-speech tagger'], ['dependency network representation', 'Used_for', 'tag contexts'], ['lexical features', 'Used_for', 'part-of-speech tagger'], ['priors in conditional loglinear models', 'Used_for', 'part-of-speech tagger'], ['fine-grained modeling of unknown word features', 'Used_for', 'part-of-speech tagger']]
metrics_sample: [0.1, 0.2, 0.13333333333333333]
metrics_current: [0.2972972972972973, 0.171875, 0.21782178217821785]
text: A critical step in encoding sound for neuronal processing occurs when the analog pressure wave is coded into discrete nerve-action potentials .
result: triple_list: [["analog pressure wave", "Used_for", "nerve-action potentials"]]
pred: [('analog pressure wave', 'Used_for', 'nerve-action potentials')]
trues: [['encoding sound', 'Used_for', 'neuronal processing'], ['discrete nerve-action potentials', 'Used_for', 'analog pressure wave']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.2894736842105263, 0.16666666666666666, 0.21153846153846154]
text: Our method takes advantage of the different way in which word senses are lexicalised in English and Chinese , and also exploits the large amount of Chinese text available in corpora and on the Web .
result: triple_list: [["English", "Compare", "Chinese"], ["English", "Used_for", "method"], ["Chinese", "Used_for", "method"], ["Chinese", "Used_for", "method"]]
pred: [('English', 'Compare', 'Chinese'), ('English', 'Used_for', 'method'), ('Chinese', 'Used_for', 'method'), ('Chinese', 'Used_for', 'method')]
trues: [['Chinese text', 'Part_of', 'corpora'], ['Chinese text', 'Part_of', 'Web'], ['corpora', 'Conjunction', 'Web']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.2682926829268293, 0.15942028985507245, 0.19999999999999998]
text: Our approach to the Multi-lingual Evaluation Task ( MET ) for Japanese text is to consider the given task as a morphological analysis problem in Japanese .
result: The candidate relations for this text are:
Used_for
Hyponym_of
The candidate entities for this text are:
approach
Multi-lingual Evaluation Task ( MET ) for Japanese text
morphological analysis problem
Japanese
pred: []
trues: [['approach', 'Used_for', 'Multi-lingual Evaluation Task ( MET )'], ['Multi-lingual Evaluation Task ( MET )', 'Used_for', 'Japanese text'], ['morphological analysis problem', 'Used_for', 'task'], ['Japanese', 'Used_for', 'morphological analysis problem']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.2682926829268293, 0.1506849315068493, 0.19298245614035087]
text: In the second half of the paper , we report a laboratory study using the Wizard of Oz technique to identify NL requirements for carrying out this task .
result: The candidate relations for this text are:
Used_for
The candidate entities for this text are:
Wizard of Oz technique
NL requirements
pred: []
trues: [['Wizard of Oz technique', 'Used_for', 'NL requirements'], ['Wizard of Oz technique', 'Used_for', 'task']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.2682926829268293, 0.14666666666666667, 0.18965517241379312]
text: The new criterion -- meaning-entailing substitutability -- fits the needs of semantic-oriented NLP applications and can be evaluated directly ( independent of an application ) at a good level of human agreement .
result: triple_list: [["meaning-entailing substitutability", "criterion", "semantic-oriented NLP applications"]]
pred: [('meaning-entailing substitutability', 'criterion', 'semantic-oriented NLP applications')]
trues: [['meaning-entailing substitutability', 'Used_for', 'semantic-oriented NLP applications'], ['human agreement', 'Evaluate_for', 'meaning-entailing substitutability']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.2619047619047619, 0.14285714285714285, 0.18487394957983194]
text: Our study reveals that the syntactic structure features embedded in a parse tree are very effective for relation extraction and these features can be well captured by the convolution tree kernel .
result: triple_list: [["syntactic structure features", "Used_for", "relation extraction"], ["parse tree", "Feature_of", "syntactic structure features"], ["convolution tree kernel", "Used_for", "syntactic structure features"]]
pred: [('syntactic structure features', 'Used_for', 'relation extraction'), ('parse tree', 'Feature_of', 'syntactic structure features'), ('convolution tree kernel', 'Used_for', 'syntactic structure features')]
trues: [['syntactic structure features', 'Feature_of', 'parse tree'], ['syntactic structure features', 'Used_for', 'relation extraction'], ['convolution tree kernel', 'Used_for', 'features']]
metrics_sample: [0.3333333333333333, 0.3333333333333333, 0.3333333333333333]
metrics_current: [0.26666666666666666, 0.15, 0.19200000000000003]
text: To a large extent , these statistics reflect semantic constraints and thus are used to disambiguate anaphora references and syntactic ambiguities .
result: triple_list: [["semantic constraints", "Used_for", "anaphora references and syntactic ambiguities"]]
pred: [('semantic constraints', 'Used_for', 'anaphora references and syntactic ambiguities')]
trues: [['semantic constraints', 'Used_for', 'anaphora references'], ['semantic constraints', 'Used_for', 'syntactic ambiguities'], ['anaphora references', 'Conjunction', 'syntactic ambiguities']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.2608695652173913, 0.14457831325301204, 0.18604651162790697]
text: Among other experiments , we demonstrate the potential of our approach by boosting the performance of three learned confidence measures on the KITTI2012 dataset by simply training them on a vast amount of automatically generated training data rather than a limited amount of laser ground truth data .
result: triple_list: [["KITTI2012 dataset", "Evaluate_for", "confidence measures"], ["laser ground truth data", "Used_for", "confidence measures"], ["them", "Used_for", "confidence measures"]]
pred: [('KITTI2012 dataset', 'Evaluate_for', 'confidence measures'), ('laser ground truth data', 'Used_for', 'confidence measures'), ('them', 'Used_for', 'confidence measures')]
trues: [['approach', 'Used_for', 'learned confidence measures'], ['KITTI2012 dataset', 'Evaluate_for', 'learned confidence measures'], ['automatically generated training data', 'Used_for', 'them'], ['laser ground truth data', 'Compare', 'automatically generated training data']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.24489795918367346, 0.13793103448275862, 0.17647058823529413]
text: Memo-functions also facilitate a simple way to construct a very compact representation of the parse forest .
result: triple_list: [["Memo-functions", "Used_for", "compact representation of the parse forest"]]
pred: [('Memo-functions', 'Used_for', 'compact representation of the parse forest')]
trues: [['Memo-functions', 'Used_for', 'parse forest']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.24, 0.13636363636363635, 0.17391304347826086]
text: In addition to the high accuracy of the model , the use of smoothing in an unlexicalized parser allows us to better examine the interplay between smoothing and parsing results .
result: triple_list: [["model", "Evaluate_for", "smoothing"], ["smoothing", "Conjunction", "parsing"]]
pred: [('model', 'Evaluate_for', 'smoothing'), ('smoothing', 'Conjunction', 'parsing')]
trues: [['accuracy', 'Evaluate_for', 'model'], ['smoothing', 'Used_for', 'unlexicalized parser']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.23076923076923078, 0.13333333333333333, 0.16901408450704225]
text: The surface realizations of morphological constructions are constrained and modified by a number of phonetic rules such as vowel harmony .
result: triple_list: [["phonetic rules", "Conjunction", "vowel harmony"]]
pred: [('phonetic rules', 'Conjunction', 'vowel harmony')]
trues: [['phonetic rules', 'Used_for', 'surface realizations of morphological constructions'], ['vowel harmony', 'Hyponym_of', 'phonetic rules']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.22641509433962265, 0.13043478260869565, 0.16551724137931034]
text: We have applied it to real scenes that include transparent objects and recovered the shapes of the objects with high accuracy .
result: triple_list: [["it", "Used_for", "real scenes that include transparent objects"]]
pred: [('it', 'Used_for', 'real scenes that include transparent objects')]
trues: [['it', 'Used_for', 'real scenes'], ['it', 'Used_for', 'shapes of the objects'], ['transparent objects', 'Part_of', 'real scenes'], ['accuracy', 'Evaluate_for', 'shapes of the objects']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.2222222222222222, 0.125, 0.16]
text: In spite of over two decades of intense research , illumination and pose invariance remain prohibitively challenging aspects of face recognition for most practical applications .
result: The candidate relations for this text are:
Feature_of
The candidate entities for this text are:
illumination and pose invariance
face recognition
pred: []
trues: [['illumination', 'Conjunction', 'pose invariance'], ['illumination', 'Part_of', 'face recognition'], ['pose invariance', 'Part_of', 'face recognition']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.2222222222222222, 0.12121212121212122, 0.1568627450980392]
text: The system is trained on 181,000 expert games and shows excellent prediction performance as indicated by its ability to perfectly predict the moves made by professional Go players in 34 % of test positions .
result: triple_list: [["system", "trained_on", "expert games"], ["it", "Used_for", "prediction"], ["it", "Used_for", "Go players"]]
pred: [('system', 'trained_on', 'expert games'), ('it', 'Used_for', 'prediction'), ('it', 'Used_for', 'Go players')]
trues: [['expert games', 'Used_for', 'system']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.21052631578947367, 0.12, 0.15286624203821655]
text: This paper highlights a particular class of miscommunication -- reference problems -- by describing a case study and techniques for avoiding failures of reference .
result: The candidate relations for this text are:
Feature_of
The candidate entities for this text are:
reference problems
miscommunication
pred: []
trues: [['reference problems', 'Hyponym_of', 'miscommunication'], ['techniques', 'Used_for', 'failures of reference']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.21052631578947367, 0.11764705882352941, 0.1509433962264151]
text: We use gray-level band-pass white noise patterns that increase robustness to indirect lighting and scene discontinuities .
result: triple_list: [["gray-level band-pass white noise patterns", "Used_for", "robustness"]]
pred: [('gray-level band-pass white noise patterns', 'Used_for', 'robustness')]
trues: [['robustness', 'Evaluate_for', 'gray-level band-pass white noise patterns'], ['indirect lighting', 'Feature_of', 'robustness'], ['indirect lighting', 'Conjunction', 'scene discontinuities'], ['scene discontinuities', 'Feature_of', 'robustness']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.20689655172413793, 0.11320754716981132, 0.14634146341463414]
text: We argue that it is necessary to draw a line between generalizable semantic principles and domain-specific semantic information .
result: The candidate relations for this text are:
Conjunction
The candidate entities for this text are:
generalizable semantic principles
domain-specific semantic information
pred: []
trues: [['generalizable semantic principles', 'Compare', 'domain-specific semantic information']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.20689655172413793, 0.11214953271028037, 0.14545454545454545]
text: This distribution has numerous applications in computer Go , including serving as an efficient stand-alone Go player .
result: The candidate relations for this text are:
Used_for
Used_for
The candidate entities for this text are:
distribution
computer Go
distribution
stand-alone Go player
pred: []
trues: [['distribution', 'Used_for', 'computer Go']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.20689655172413793, 0.1111111111111111, 0.14457831325301204]
text: We integrate a spoken language understanding system with intelligent mobile agents that mediate between users and information sources .
result: The candidate relations for this text are:
Part_of
The candidate entities for this text are:
spoke language understanding system
intelligent mobile agents
pred: []
trues: [['intelligent mobile agents', 'Part_of', 'spoken language understanding system']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.20689655172413793, 0.11009174311926606, 0.14371257485029942]
text: Based on this , MINPRAN uses random sampling to search for the t and the number of inliers to the t that are least likely to have occurred randomly .
result: triple_list: [["random sampling", "Used_for", "MINPRAN"]]
pred: [('random sampling', 'Used_for', 'MINPRAN')]
trues: [['random sampling', 'Used_for', 'MINPRAN']]
metrics_sample: [1.0, 1.0, 1.0]
metrics_current: [0.22033898305084745, 0.11818181818181818, 0.15384615384615383]
text: This paper describes a novel system for acquiring adjectival subcategorization frames ( scfs ) and associated frequency information from English corpus data .
result: triple_list: [["system", "Used_for", "adjectival subcategorization frames ( scfs ) and associated frequency information"]]
pred: [('system', 'Used_for', 'adjectival subcategorization frames ( scfs ) and associated frequency information')]
trues: [['system', 'Used_for', 'acquiring adjectival subcategorization frames ( scfs )']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.21666666666666667, 0.11711711711711711, 0.15204678362573099]
text: The model is evaluated on English and Czech newspaper texts , and is then validated on French broadcast news transcriptions .
result: triple_list: [["English and Czech newspaper texts", "evaluate_for", "model"], ["French broadcast news transcriptions", "evaluate_for", "model"]]
pred: [('English and Czech newspaper texts', 'evaluate_for', 'model'), ('French broadcast news transcriptions', 'evaluate_for', 'model')]
trues: [['English and Czech newspaper texts', 'Evaluate_for', 'model'], ['French broadcast news transcriptions', 'Evaluate_for', 'model']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.20967741935483872, 0.11504424778761062, 0.14857142857142858]
text: Under this framework , a joint source-channel transliteration model , also called n-gram transliteration model ( n-gram TM ) , is further proposed to model the transliteration process .
result: triple_list: [["joint source-channel transliteration model", "Hyponym_of", "n-gram transliteration model ( n-gram TM )"]]
pred: [('joint source-channel transliteration model', 'Hyponym_of', 'n-gram transliteration model ( n-gram TM )')]
trues: [['framework', 'Used_for', 'joint source-channel transliteration model'], ['n-gram transliteration model ( n-gram TM )', 'Used_for', 'transliteration process']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.20634920634920634, 0.11304347826086956, 0.14606741573033705]
text: In this paper , we evaluate the use of a conditional random field ( CRF ) for this task and relate results with this model to our prior work .
result: The candidate relations for this text are:
Used_for
The candidate entities for this text are:
conditional random field ( CRF )
task
pred: []
trues: [['conditional random field ( CRF )', 'Used_for', 'task']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.20634920634920634, 0.11206896551724138, 0.14525139664804468]
text: The psycholinguistic literature provides evidence for syntactic priming , i.e. , the tendency to repeat structures .
result: The candidate relations for this text are:
Feature_of
The candidate entities for this text are:
syntactic priming
psycholinguistic literature
pred: []
trues: [['psycholinguistic literature', 'Used_for', 'syntactic priming']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.20634920634920634, 0.1111111111111111, 0.14444444444444443]
text: Our study reveals that the proposed method not only reduces an extensive system development effort but also improves the transliteration accuracy significantly .
result: triple_list: [["method", "Used_for", "transliteration accuracy"]]
pred: [('method', 'Used_for', 'transliteration accuracy')]
trues: [['transliteration accuracy', 'Evaluate_for', 'method']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.203125, 0.11016949152542373, 0.14285714285714285]
text: A new algorithm is proposed for novel view generation in one-to-one teleconferencing applications .
result: The candidate relations for this text are:
Used_for
The candidate entities for this text are:
algorithm
one-to-one teleconferencing applications
pred: []
trues: [['algorithm', 'Used_for', 'novel view generation'], ['novel view generation', 'Used_for', 'one-to-one teleconferencing applications']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.203125, 0.10833333333333334, 0.14130434782608697]
text: Thus , the limitations of the automatic metrics used within MT are also discussed in this regard .
result: triple_list: [["automatic metrics", "Used_for", "MT"]]
pred: [('automatic metrics', 'Used_for', 'MT')]
trues: [['automatic metrics', 'Evaluate_for', 'MT']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.2, 0.10743801652892562, 0.13978494623655915]
text: The proposed approach does not require a separate segmentation stage and is applicable to cluttered scenes .
result: The candidate relations for this text are:
Used_for
The candidate entities for this text are:
approach
cluttered scenes
pred: []
trues: [['approach', 'Used_for', 'cluttered scenes']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.2, 0.10655737704918032, 0.1390374331550802]
text: This model mimics the way in which images are processed in the visual pathway , rendering a feasible alternative for the implementation of early vision applications in standard technologies .
result: triple_list: [["model", "Used_for", "early vision applications"]]
pred: [('model', 'Used_for', 'early vision applications')]
trues: [['visual pathway', 'Used_for', 'images']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.19696969696969696, 0.10569105691056911, 0.13756613756613756]
text: This paper outlines Plume as it currently exists and describes our detailed design for extending Plume to handle passives , relative clauses , and interrogatives in a general manner .
result: triple_list: [["Plume", "feature_of", "it"]]
pred: [('Plume', 'feature_of', 'it')]
trues: [['Plume', 'Used_for', 'passives'], ['Plume', 'Used_for', 'relative clauses'], ['Plume', 'Used_for', 'interrogatives'], ['passives', 'Conjunction', 'relative clauses'], ['relative clauses', 'Conjunction', 'interrogatives']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.19402985074626866, 0.1015625, 0.13333333333333333]
text: We evaluate the proposed methods through several transliteration/backtransliteration experiments for English/Chinese and English/Japanese language pairs .
result: triple_list: [["English/Chinese", "Conjunction", "English/Japanese"], ["English/Chinese", "Hyponym_of", "transliteration/backtransliteration experiments"], ["English/Japanese", "Hyponym_of", "transliteration/backtransliteration experiments"]]
pred: [('English/Chinese', 'Conjunction', 'English/Japanese'), ('English/Chinese', 'Hyponym_of', 'transliteration/backtransliteration experiments'), ('English/Japanese', 'Hyponym_of', 'transliteration/backtransliteration experiments')]
trues: [['transliteration/backtransliteration', 'Evaluate_for', 'methods'], ['transliteration/backtransliteration', 'Used_for', 'English/Chinese and English/Japanese language pairs']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.18571428571428572, 0.1, 0.13]
text: We propose a novel step toward the unsupervised seg-mentation of whole objects by combining '' hints '' of partial scene segmentation offered by multiple soft , binary mattes .
result: triple_list: [["soft, binary mattes", "Used_for", "unsupervised seg-mentation of whole objects"]]
pred: [('soft, binary mattes', 'Used_for', 'unsupervised seg-mentation of whole objects')]
trues: [['partial scene segmentation', 'Used_for', 'unsupervised seg-mentation of whole objects'], ['soft , binary mattes', 'Used_for', 'partial scene segmentation']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.18309859154929578, 0.09848484848484848, 0.12807881773399013]
text: We further propose a parameter training algorithm for the present model based on a decision tree-based context clustering .
result: The candidate relations for this text are:
Used_for
The candidate entities for this text are:
decision tree-based context clustering
parameter training algorithm
pred: []
trues: [['parameter training algorithm', 'Used_for', 'model'], ['decision tree-based context clustering', 'Used_for', 'parameter training algorithm']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.18309859154929578, 0.09701492537313433, 0.12682926829268293]
text: While current approaches are developed by only considering the low rank plus sparse structure , in many applications , side information of row and/or column entities may also be given , and it is still unclear to what extent could such information help robust PCA .
result: triple_list: [["low rank plus sparse structure", "Used_for", "approaches"], ["row and/or column entities", "Used_for", "PCA"], ["row and/or column entities", "Used_for", "robust PCA"]]
pred: [('low rank plus sparse structure', 'Used_for', 'approaches'), ('row and/or column entities', 'Used_for', 'PCA'), ('row and/or column entities', 'Used_for', 'robust PCA')]
trues: [['low rank plus sparse structure', 'Used_for', 'approaches'], ['information', 'Used_for', 'robust PCA']]
metrics_sample: [0.3333333333333333, 0.5, 0.4]
metrics_current: [0.1891891891891892, 0.10294117647058823, 0.1333333333333333]
text: In this paper , we present an unlexicalized parser for German which employs smoothing and suffix analysis to achieve a labelled bracket F-score of 76.2 , higher than previously reported results on the NEGRA corpus .
result: triple_list: [["unlexicalized parser", "Used_for", "German"], ["smoothing", "Used_for", "unlexicalized parser"], ["smoothing", "Conjunction", "suffix analysis"], ["suffix analysis", "Used_for", "unlexicalized parser"], ["labelled bracket F-score", "Evaluate_for", "NEGRA corpus"]]
pred: [('unlexicalized parser', 'Used_for', 'German'), ('smoothing', 'Used_for', 'unlexicalized parser'), ('smoothing', 'Conjunction', 'suffix analysis'), ('suffix analysis', 'Used_for', 'unlexicalized parser'), ('labelled bracket F-score', 'Evaluate_for', 'NEGRA corpus')]
trues: [['unlexicalized parser', 'Used_for', 'German'], ['smoothing', 'Used_for', 'unlexicalized parser'], ['smoothing', 'Conjunction', 'suffix analysis'], ['suffix analysis', 'Used_for', 'unlexicalized parser'], ['labelled bracket F-score', 'Evaluate_for', 'unlexicalized parser'], ['NEGRA corpus', 'Evaluate_for', 'unlexicalized parser']]
metrics_sample: [0.8, 0.6666666666666666, 0.7272727272727272]
metrics_current: [0.22784810126582278, 0.1267605633802817, 0.16289592760180996]
text: By employing a joint classification and regression optimization objective , this network is capable of automatically localizing the start and end points of actions more accurately .
result: triple_list: [["classification and regression optimization objective", "Used_for", "network"]]
pred: [('classification and regression optimization objective', 'Used_for', 'network')]
trues: [['joint classification and regression optimization objective', 'Used_for', 'network']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.225, 0.1258741258741259, 0.16143497757847533]
text: In comparison with previous works , in this paper it is assumed that the signals are not i.i.d. in each epoch , but obey a first-order autoregressive model .
result: triple_list: [["signals", "feature_of", "autoregressive model"]]
pred: [('signals', 'feature_of', 'autoregressive model')]
trues: [['first-order autoregressive model', 'Used_for', 'signals']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.2222222222222222, 0.125, 0.16]
text: We propose a convex problem to incorporate side information in robust PCA and show that the low rank matrix can be exactly recovered via the proposed method under certain conditions .
result: triple_list: [["convex problem", "Used_for", "robust PCA"], ["low rank matrix", "Used_for", "method"]]
pred: [('convex problem', 'Used_for', 'robust PCA'), ('low rank matrix', 'Used_for', 'method')]
trues: [['convex problem', 'Used_for', 'side information'], ['side information', 'Part_of', 'robust PCA'], ['method', 'Used_for', 'low rank matrix']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.21686746987951808, 0.12244897959183673, 0.15652173913043477]
text: The experiments show that the system is able to detect scf types with 70 % precision and 66 % recall rate .
result: triple_list: [["system", "used_for", "scf types"]]
pred: [('system', 'used_for', 'scf types')]
trues: [['precision', 'Evaluate_for', 'system'], ['precision', 'Conjunction', 'recall'], ['recall', 'Evaluate_for', 'system']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.21428571428571427, 0.12, 0.15384615384615383]
text: The resulting logical expression is then transformed by a planning algorithm into efficient Prolog , cf. query optimisation in a relational database .
result: triple_list: [["logical expression", "Used_for", "planning algorithm"], ["Prolog", "Used_for", "relational database"]]
pred: [('logical expression', 'Used_for', 'planning algorithm'), ('Prolog', 'Used_for', 'relational database')]
trues: [['planning algorithm', 'Used_for', 'logical expression'], ['relational database', 'Used_for', 'query optimisation']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.20930232558139536, 0.11842105263157894, 0.15126050420168066]
text: Bayesian inference then samples the rules , disambiguating and combining them to create complex tree structures that maximize a discriminative model 's posterior on a target unlabeled corpus .
result: triple_list: [["Bayesian inference", "used_for", "rules"], ["rules", "used_for", "discriminative model"], ["unlabeled corpus", "used_for", "discriminative model"]]
pred: [('Bayesian inference', 'used_for', 'rules'), ('rules', 'used_for', 'discriminative model'), ('unlabeled corpus', 'used_for', 'discriminative model')]
trues: [['Bayesian inference', 'Used_for', 'rules'], ['them', 'Used_for', 'complex tree structures'], ['complex tree structures', 'Used_for', "discriminative model 's posterior"], ['unlabeled corpus', 'Used_for', "discriminative model 's posterior"]]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.20224719101123595, 0.11538461538461539, 0.1469387755102041]
text: The modified graph is then sent to the UNL-L0 deconverter and the result shown .
result: triple_list: [["graph", "Used_for", "UNL-L0 deconverter"]]
pred: [('graph', 'Used_for', 'UNL-L0 deconverter')]
trues: [['graph', 'Used_for', 'UNL-L0 deconverter']]
metrics_sample: [1.0, 1.0, 1.0]
metrics_current: [0.2111111111111111, 0.12101910828025478, 0.15384615384615383]
text: Using the IEMOCAP database , discrete ( categorical ) and continuous ( attribute ) emotional assessments evaluated by the actors and na ¨ ıve listeners are compared .
result: The candidate relations for this text are:
Evaluate_for
Evaluate_for
The candidate entities for this text are:
IEMOCAP database
discrete ( categorical ) and continuous ( attribute ) emotional assessments
actors
discrete ( categorical ) and continuous ( attribute ) emotional assessments
pred: []
trues: [['IEMOCAP database', 'Used_for', 'discrete ( categorical ) and continuous ( attribute ) emotional assessments']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.2111111111111111, 0.12025316455696203, 0.1532258064516129]
text: Multi-layer perceptrons ( MLPs ) performed much better than standard Gaussian mixture models ( GMMs ) for both our ANF-based and ON-based auditory features .
result: triple_list: [["Multi-layer perceptrons ( MLPs )", "Compare", "Gaussian mixture models ( GMMs )"], ["ANF-based and ON-based auditory features", "Used_for", "Gaussian mixture models ( GMMs )"]]
pred: [('Multi-layer perceptrons ( MLPs )', 'Compare', 'Gaussian mixture models ( GMMs )'), ('ANF-based and ON-based auditory features', 'Used_for', 'Gaussian mixture models ( GMMs )')]
trues: [['Multi-layer perceptrons ( MLPs )', 'Compare', 'Gaussian mixture models ( GMMs )'], ['Multi-layer perceptrons ( MLPs )', 'Used_for', 'ANF-based and ON-based auditory features'], ['Gaussian mixture models ( GMMs )', 'Used_for', 'ANF-based and ON-based auditory features']]
metrics_sample: [0.5, 0.3333333333333333, 0.4]
metrics_current: [0.21739130434782608, 0.12422360248447205, 0.15810276679841898]
text: At the core of the externally digital architecture is a high-density , low-power analog array performing binary-binary partial matrix-vector multiplication .
result: triple_list: [["high-density, low-power analog array", "performing", "binary-binary partial matrix-vector multiplication"]]
pred: [('high-density, low-power analog array', 'performing', 'binary-binary partial matrix-vector multiplication')]
trues: [['high-density , low-power analog array', 'Part_of', 'externally digital architecture'], ['binary-binary partial matrix-vector multiplication', 'Used_for', 'high-density , low-power analog array']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.21505376344086022, 0.12269938650306748, 0.15625]
text: Machine transliteration/back-transliteration plays an important role in many multilingual speech and language applications .
result: The candidate relations for this text are:
Used_for
The candidate entities for this text are:
Machine transliteration/back-transliteration
multilingual speech and language applications
pred: []
trues: [['Machine transliteration/back-transliteration', 'Used_for', 'multilingual speech and language applications']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.21505376344086022, 0.12195121951219512, 0.15564202334630348]
text: In the case of natural speech signals , the method is shown to have separation accuracy better than the state-of-the-art methods .
result: triple_list: [["natural speech signals", "Used_for", "method"]]
pred: [('natural speech signals', 'Used_for', 'method')]
trues: [['method', 'Used_for', 'natural speech signals'], ['method', 'Compare', 'methods'], ['separation accuracy', 'Evaluate_for', 'method'], ['separation accuracy', 'Evaluate_for', 'methods'], ['methods', 'Used_for', 'natural speech signals']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.2127659574468085, 0.11834319526627218, 0.1520912547528517]
text: Furthermore , this paper presents a novel algorithm for the temporal maintenance of a background model to enhance the rendering of occlusions and reduce temporal artefacts ( flicker ) ; and a cost aggregation algorithm that acts directly on our three-dimensional matching cost space .
result: triple_list: [["algorithm", "Used_for", "temporal maintenance of a background model"], ["temporal maintenance of a background model", "Used_for", "rendering of occlusions"], ["cost aggregation algorithm", "Used_for", "three-dimensional matching cost space"]]
pred: [('algorithm', 'Used_for', 'temporal maintenance of a background model'), ('temporal maintenance of a background model', 'Used_for', 'rendering of occlusions'), ('cost aggregation algorithm', 'Used_for', 'three-dimensional matching cost space')]
trues: [['algorithm', 'Used_for', 'temporal maintenance of a background model'], ['algorithm', 'Used_for', 'rendering of occlusions'], ['algorithm', 'Used_for', 'temporal artefacts ( flicker )'], ['cost aggregation algorithm', 'Conjunction', 'algorithm'], ['cost aggregation algorithm', 'Used_for', 'three-dimensional matching cost space']]
metrics_sample: [0.6666666666666666, 0.4, 0.5]
metrics_current: [0.2268041237113402, 0.12643678160919541, 0.16236162361623616]
text: Extended CF grammars ( grammars with regular expressions at the right hand side ) can be parsed with a simple modification of the LR-parser for normal CF grammars .
result: triple_list: [["regular expressions", "Conjunction", "CF grammars"]]
pred: [('regular expressions', 'Conjunction', 'CF grammars')]
trues: [['regular expressions', 'Feature_of', 'grammars'], ['LR-parser', 'Used_for', 'Extended CF grammars'], ['LR-parser', 'Used_for', 'CF grammars']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.22448979591836735, 0.12429378531073447, 0.16]
text: To associate a sequence of the Fujisaki-model parameters with a text input based on statistical learning , this paper proposes extending this model to a context-dependent one .
result: The candidate relations for this text are:
Used_for
The candidate entities for this text are:
Fujisaki-model parameters
statistical learning
pred: []
trues: [['text input', 'Used_for', 'Fujisaki-model parameters'], ['statistical learning', 'Used_for', 'Fujisaki-model parameters']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.22448979591836735, 0.12290502793296089, 0.15884476534296027]
text: We test our algorithm on the detection task and the viewpoint classification task by using '' car '' category from both the Savarese et al. 2007 and PASCAL VOC 2006 datasets .
result: triple_list: [["car", "used_for", "detection task"], ["car", "used_for", "viewpoint classification task"], ["Savarese et al. 2007 and PASCAL VOC 2006 datasets", "used_for", "viewpoint classification task"]]
pred: [('car', 'used_for', 'detection task'), ('car', 'used_for', 'viewpoint classification task'), ('Savarese et al. 2007 and PASCAL VOC 2006 datasets', 'used_for', 'viewpoint classification task')]
trues: [['algorithm', 'Used_for', 'detection task'], ['algorithm', 'Used_for', 'viewpoint classification task'], ['detection task', 'Conjunction', 'viewpoint classification task'], ['PASCAL VOC 2006 datasets', 'Evaluate_for', 'algorithm']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.21782178217821782, 0.12021857923497267, 0.15492957746478872]
text: Building on previous work at Carnegie-Mellon University e.g. [ 4 , 5 , 8 ] , Plume 's approach to parsing is based on semantic caseframe instantiation .
result: triple_list: [["Carnegie-Mellon University", "Used_for", "Plume's approach to parsing"]]
pred: [('Carnegie-Mellon University', 'Used_for', "Plume's approach to parsing")]
trues: [["Plume 's approach", 'Used_for', 'parsing'], ['semantic caseframe instantiation', 'Used_for', "Plume 's approach"]]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.21568627450980393, 0.11891891891891893, 0.15331010452961674]
text: Our results show that MBR decoding can be used to tune statistical MT performance for specific loss functions .
result: The candidate relations for this text are:
Used_for
The candidate entities for this text are:
MBR decoding
statistical MT
pred: []
trues: [['MBR decoding', 'Used_for', 'statistical MT'], ['MBR decoding', 'Used_for', 'loss functions']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.21568627450980393, 0.11764705882352941, 0.1522491349480969]
text: Unfortunately , creating large datasets with pixel-level labels has been extremely costly due to the amount of human effort required .
result: The candidate relations for this text are:
Feature_of
The candidate entities for this text are:
pixel-level labels
datasets
pred: []
trues: [['pixel-level labels', 'Feature_of', 'large datasets']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.21568627450980393, 0.11702127659574468, 0.15172413793103448]
text: The approach is validated with real image data , and with experimental results from a CID/DRAM analog array prototype in 0.5 cents m CMOS .
result: triple_list: [["real image data", "Used_for", "approach"], ["CID/DRAM analog array prototype", "Used_for", "approach"], ["CID/DRAM analog array prototype", "Used_for", "0.5 cents m CMOS"]]
pred: [('real image data', 'Used_for', 'approach'), ('CID/DRAM analog array prototype', 'Used_for', 'approach'), ('CID/DRAM analog array prototype', 'Used_for', '0.5 cents m CMOS')]
trues: [['real image data', 'Evaluate_for', 'approach']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.20952380952380953, 0.1164021164021164, 0.14965986394557823]
text: In this paper , we propose a new method for the modeling and subtraction of such scenes .
result: The candidate relations for this text are:
Used_for
The candidate entities for this text are:
method
modeling
pred: []
trues: [['method', 'Used_for', 'modeling and subtraction of such scenes']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.20952380952380953, 0.11578947368421053, 0.14915254237288134]
text: We demonstrate that for certain field structured extraction tasks , such as classified advertisements and bibliographic citations , small amounts of prior knowledge can be used to learn effective models in a primarily unsupervised fashion .
result: triple_list: [["classified advertisements", "Hyponym_of", "field structured extraction tasks"], ["bibliographic citations", "Hyponym_of", "field structured extraction tasks"], ["prior knowledge", "Used_for", "models"]]
pred: [('classified advertisements', 'Hyponym_of', 'field structured extraction tasks'), ('bibliographic citations', 'Hyponym_of', 'field structured extraction tasks'), ('prior knowledge', 'Used_for', 'models')]
trues: [['classified advertisements', 'Hyponym_of', 'field structured extraction tasks'], ['classified advertisements', 'Conjunction', 'bibliographic citations'], ['bibliographic citations', 'Hyponym_of', 'field structured extraction tasks'], ['prior knowledge', 'Used_for', 'field structured extraction tasks']]
metrics_sample: [0.6666666666666666, 0.5, 0.5714285714285715]
metrics_current: [0.2222222222222222, 0.12371134020618557, 0.15894039735099338]
text: Experiment results on ACE corpora show that this spectral clustering based approach outperforms the other clustering methods .
result: triple_list: [["spectral clustering based approach", "Compare", "clustering methods"]]
pred: [('spectral clustering based approach', 'Compare', 'clustering methods')]
trues: [['ACE corpora', 'Evaluate_for', 'spectral clustering based approach'], ['ACE corpora', 'Evaluate_for', 'clustering methods'], ['spectral clustering based approach', 'Compare', 'clustering methods']]
metrics_sample: [1.0, 0.3333333333333333, 0.5]
metrics_current: [0.22935779816513763, 0.12690355329949238, 0.16339869281045752]
text: An experimental evaluation of summarization quality shows a close correlation between the automatic parse-based evaluation and a manual evaluation of generated strings .
result: triple_list: [["automatic parse-based evaluation", "Conjunction", "manual evaluation of generated strings"]]
pred: [('automatic parse-based evaluation', 'Conjunction', 'manual evaluation of generated strings')]
trues: [['summarization quality', 'Evaluate_for', 'automatic parse-based evaluation'], ['automatic parse-based evaluation', 'Compare', 'manual evaluation']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.22727272727272727, 0.12562814070351758, 0.16181229773462782]
text: We then derive a scalable stochastic gradient descent algorithm for the resulting learning problem .
result: triple_list: [["stochastic gradient descent algorithm", "Used_for", "learning problem"]]
pred: [('stochastic gradient descent algorithm', 'Used_for', 'learning problem')]
trues: [['stochastic gradient descent algorithm', 'Used_for', 'learning problem']]
metrics_sample: [1.0, 1.0, 1.0]
metrics_current: [0.23423423423423423, 0.13, 0.16720257234726688]
text: In this paper we present a new UV procedure with two major features : a ) Confidence tests are applied to decoded string hypotheses obtained from using word and garbage models that represent OOV words and noises .
result: triple_list: [["UV procedure", "feature_of", "decoded string hypotheses"]]
pred: [('UV procedure', 'feature_of', 'decoded string hypotheses')]
trues: [['Confidence tests', 'Used_for', 'decoded string hypotheses'], ['noises', 'Conjunction', 'OOV words']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.23214285714285715, 0.12871287128712872, 0.16560509554140126]
text: It also shows that our method significantly outperforms the previous two dependency tree kernels on the 5 ACE relation major types .
result: triple_list: [["method", "Compare", "dependency tree kernels"]]
pred: [('method', 'Compare', 'dependency tree kernels')]
trues: [['method', 'Compare', 'dependency tree kernels']]
metrics_sample: [1.0, 1.0, 1.0]
metrics_current: [0.23893805309734514, 0.1330049261083744, 0.1708860759493671]
text: Our core motivation is that minimizing a weighted rank loss is a natural criterion for many problems in computer vision such as person re-identification .
result: triple_list: [["rank loss", "Used_for", "computer vision"]]
pred: [('rank loss', 'Used_for', 'computer vision')]
trues: [['weighted rank loss', 'Used_for', 'computer vision'], ['weighted rank loss', 'Used_for', 'person re-identification'], ['person re-identification', 'Hyponym_of', 'computer vision']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.23684210526315788, 0.13106796116504854, 0.16874999999999998]
text: Structural or numerical constraints can then be added locally to the reconstruction process through a constrained optimization scheme .
result: The candidate relations for this text are:
Used_for
The candidate entities for this text are:
constrained optimization scheme
Structural or numerical constraints
pred: []
trues: [['Structural or numerical constraints', 'Used_for', 'reconstruction process'], ['constrained optimization scheme', 'Used_for', 'Structural or numerical constraints']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.23684210526315788, 0.12980769230769232, 0.16770186335403728]
text: While sentence extraction as an approach to summarization has been shown to work in documents of certain genres , because of the conversational nature of email communication where utterances are made in relation to one made previously , sentence extraction may not capture the necessary segments of dialogue that would make a summary coherent .
result: triple_list: [["sentence extraction", "approach", "summarization"], ["genres", "feature_of", "documents"], ["conversational nature", "feature_of", "email communication"], ["segments of dialogue", "Used_for", "summary"], ["segments of dialogue", "Used_for", "coherent"]]
pred: [('sentence extraction', 'approach', 'summarization'), ('genres', 'feature_of', 'documents'), ('conversational nature', 'feature_of', 'email communication'), ('segments of dialogue', 'Used_for', 'summary'), ('segments of dialogue', 'Used_for', 'coherent')]
trues: [['sentence extraction', 'Used_for', 'summarization']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.226890756302521, 0.1291866028708134, 0.16463414634146342]
text: Both classifiers perform the best when conversational context and utterance features are combined with speaker 's gaze information .
result: The candidate relations for this text are:
Used_for
Conjunction
Used_for
The candidate entities for this text are:
classifiers
conversational context and utterance features
speaker's gaze information
classifiers
speaker's gaze information
conversational context and utterance features
pred: []
trues: [['conversational context', 'Used_for', 'classifiers'], ['conversational context', 'Conjunction', 'utterance features'], ['utterance features', 'Used_for', 'classifiers'], ["speaker 's gaze information", 'Used_for', 'classifiers'], ["speaker 's gaze information", 'Conjunction', 'utterance features']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.226890756302521, 0.1261682242990654, 0.16216216216216217]
text: Learned confidence measures gain increasing importance for outlier removal and quality improvement in stereo vision .
result: triple_list: [["Learned confidence measures", "Used_for", "outlier removal and quality improvement in stereo vision"]]
pred: [('Learned confidence measures', 'Used_for', 'outlier removal and quality improvement in stereo vision')]
trues: [['Learned confidence measures', 'Used_for', 'outlier removal'], ['Learned confidence measures', 'Used_for', 'quality improvement'], ['outlier removal', 'Conjunction', 'quality improvement'], ['outlier removal', 'Part_of', 'stereo vision'], ['quality improvement', 'Part_of', 'stereo vision']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.225, 0.1232876712328767, 0.1592920353982301]
text: The combined approach is formulated in the framework of Bayesian statistics to account for the robust-ness requirement in image understanding .
result: triple_list: [["Bayesian statistics", "Used_for", "image understanding"]]
pred: [('Bayesian statistics', 'Used_for', 'image understanding')]
trues: [['approach', 'Used_for', 'robust-ness requirement in image understanding'], ['Bayesian statistics', 'Used_for', 'approach']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.2231404958677686, 0.12217194570135746, 0.15789473684210525]
text: We validate this new method on nine standard person re-identification datasets including two large scale Market-1501 and CUHK03 datasets and show that we improve upon the current state-of-the-art methods on all of them .
result: triple_list: [["person re-identification datasets", "Evaluate_for", "method"], ["Market-1501 and CUHK03 datasets", "Hyponym_of", "person re-identification datasets"]]
pred: [('person re-identification datasets', 'Evaluate_for', 'method'), ('Market-1501 and CUHK03 datasets', 'Hyponym_of', 'person re-identification datasets')]
trues: [['person re-identification datasets', 'Evaluate_for', 'method'], ['scale Market-1501', 'Hyponym_of', 'person re-identification datasets'], ['CUHK03 datasets', 'Hyponym_of', 'person re-identification datasets'], ['CUHK03 datasets', 'Conjunction', 'scale Market-1501']]
metrics_sample: [0.5, 0.25, 0.3333333333333333]
metrics_current: [0.22764227642276422, 0.12444444444444444, 0.16091954022988506]
text: One remarkable feature of this model is that it has allowed us to derive an efficient algorithm based on powerful statistical methods for estimating the Fujisaki-model parameters from raw F0 contours .
result: triple_list: [["it", "feature_of", "model"]]
pred: [('it', 'feature_of', 'model')]
trues: [['remarkable feature', 'Feature_of', 'model'], ['algorithm', 'Used_for', 'Fujisaki-model parameters'], ['statistical methods', 'Used_for', 'algorithm'], ['raw F0 contours', 'Used_for', 'Fujisaki-model parameters']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.22580645161290322, 0.1222707423580786, 0.15864022662889518]
text: It is particularly valuable to empirical MT research .
result: The candidate relations for this text are:
Evaluate_for
The candidate entities for this text are:
It
empirical MT research
pred: []
trues: [['It', 'Used_for', 'empirical MT research']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.22580645161290322, 0.12173913043478261, 0.15819209039548024]
text: Here , we leverage a logistic stick-breaking representation and recent innovations in Pólya-gamma augmentation to reformu-late the multinomial distribution in terms of latent variables with jointly Gaussian likelihoods , enabling us to take advantage of a host of Bayesian inference techniques for Gaussian models with minimal overhead .
result: triple_list: [["logistic stick-breaking representation", "Used_for", "multinomial distribution"], ["Pólya-gamma augmentation", "Used_for", "multinomial distribution"], ["latent variables", "Used_for", "Gaussian models"], ["Bayesian inference techniques", "Used_for", "Gaussian models"]]
pred: [('logistic stick-breaking representation', 'Used_for', 'multinomial distribution'), ('Pólya-gamma augmentation', 'Used_for', 'multinomial distribution'), ('latent variables', 'Used_for', 'Gaussian models'), ('Bayesian inference techniques', 'Used_for', 'Gaussian models')]
trues: [['logistic stick-breaking representation', 'Used_for', 'multinomial distribution'], ['Pólya-gamma augmentation', 'Used_for', 'multinomial distribution'], ['latent variables', 'Part_of', 'multinomial distribution'], ['jointly Gaussian likelihoods', 'Feature_of', 'latent variables'], ['Bayesian inference techniques', 'Used_for', 'Gaussian models'], ['minimal overhead', 'Feature_of', 'Gaussian models']]
metrics_sample: [0.75, 0.5, 0.6]
metrics_current: [0.2421875, 0.13135593220338984, 0.17032967032967034]
text: Although the study of clustering is centered around an intuitively compelling goal , it has been very difficult to develop a unified framework for reasoning about it at a technical level , and profoundly diverse approaches to clustering abound in the research community .
result: triple_list: [["clustering", "it", "unified framework"]]
pred: [('clustering', 'it', 'unified framework')]
trues: [['unified framework', 'Used_for', 'reasoning']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.24031007751937986, 0.1308016877637131, 0.16939890710382513]
text: Indeed , automatic evaluations need high-quality data that allow the comparison of both automatic and human translations .
result: triple_list: [["data", "Used_for", "automatic and human translations"]]
pred: [('data', 'Used_for', 'automatic and human translations')]
trues: [['high-quality data', 'Evaluate_for', 'automatic evaluations']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.23846153846153847, 0.13025210084033614, 0.16847826086956522]
text: The results show that the features in terms of which we formulate our heuristic principles have significant predictive power , and that rules that closely resemble our Horn clauses can be learnt automatically from these features .
result: triple_list: [["features", "Used_for", "Horn clauses"], ["features", "Used_for", "rules"]]
pred: [('features', 'Used_for', 'Horn clauses'), ('features', 'Used_for', 'rules')]
trues: [['features', 'Feature_of', 'heuristic principles']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.23484848484848486, 0.1297071129707113, 0.16711590296495957]
text: While previous approaches relied on geometric , appearance , or correlation-based information for establishing correspondences between static cameras , they each have well-known limitations and are not extendable to wide-area settings with PTZ cameras .
result: The candidate relations for this text are:
Used_for
Used_for
The candidate entities for this text are:
geometric, appearance, or correlation-based information
approaches
PTZ cameras
they
pred: []
trues: [['geometric , appearance , or correlation-based information', 'Used_for', 'approaches']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.23484848484848486, 0.12916666666666668, 0.16666666666666669]
text: In contrast , object pose estimation using these approaches has received relatively less attention .
result: The candidate relations for this text are:
Used_for
The candidate entities for this text are:
approaches
object pose estimation
pred: []
trues: [['approaches', 'Used_for', 'object pose estimation']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.23484848484848486, 0.12863070539419086, 0.16621983914209115]
text: Towards deep analysis of compositional classes of paraphrases , we have examined a class-oriented framework for collecting paraphrase examples , in which sentential paraphrases are collected for each paraphrase class separately by means of automatic candidate generation and manual judgement .
result: The candidate relations for this text are:
Used_for
Used_for
Part_of
Used_for
The candidate entities for this text are:
class-oriented framework
compositional classes of paraphrases
class-oriented framework
paraphrase examples
paraphrase class
sentential paraphrases
automatic candidate generation
class-oriented framework
pred: []
trues: [['class-oriented framework', 'Used_for', 'compositional classes of paraphrases'], ['class-oriented framework', 'Used_for', 'paraphrase examples'], ['automatic candidate generation', 'Used_for', 'sentential paraphrases'], ['automatic candidate generation', 'Conjunction', 'manual judgement'], ['manual judgement', 'Used_for', 'sentential paraphrases']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.23484848484848486, 0.12601626016260162, 0.164021164021164]
text: In this theory , discourse structure is composed of three separate but interrelated components : the structure of the sequence of utterances ( called the linguistic structure ) , a structure of purposes ( called the intentional structure ) , and the state of focus of attention ( called the attentional state ) .
result: triple_list: [["structure of the sequence of utterances", "part_of", "discourse structure"], ["linguistic structure", "part_of", "discourse structure"], ["structure of purposes", "part_of", "discourse structure"], ["intentional structure", "part_of", "discourse structure"], ["state of focus of attention", "part_of", "discourse structure"], ["attentional state", "part_of", "discourse structure"]]
pred: [('structure of the sequence of utterances', 'part_of', 'discourse structure'), ('linguistic structure', 'part_of', 'discourse structure'), ('structure of purposes', 'part_of', 'discourse structure'), ('intentional structure', 'part_of', 'discourse structure'), ('state of focus of attention', 'part_of', 'discourse structure'), ('attentional state', 'part_of', 'discourse structure')]
trues: [['components', 'Part_of', 'discourse structure'], ['linguistic structure', 'Part_of', 'components'], ['linguistic structure', 'Conjunction', 'intentional structure'], ['intentional structure', 'Part_of', 'components'], ['intentional structure', 'Conjunction', 'attentional state'], ['attentional state', 'Part_of', 'components']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.2246376811594203, 0.12301587301587301, 0.15897435897435896]
text: We present a novel method for discovering parallel sentences in comparable , non-parallel corpora .
result: triple_list: [["parallel sentences", "Used_for", "non-parallel corpora"]]
pred: [('parallel sentences', 'Used_for', 'non-parallel corpora')]
trues: [['method', 'Used_for', 'discovering parallel sentences'], ['comparable , non-parallel corpora', 'Used_for', 'discovering parallel sentences']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.22302158273381295, 0.1220472440944882, 0.15776081424936386]
text: Experiments on the PASCAL VOC 2006 dataset show an acceleration of more than 50 % by our method compared to standard cascade evaluation .
result: triple_list: [["PASCAL VOC 2006 dataset", "Evaluate_for", "method"]]
pred: [('PASCAL VOC 2006 dataset', 'Evaluate_for', 'method')]
trues: [['PASCAL VOC 2006 dataset', 'Evaluate_for', 'method'], ['PASCAL VOC 2006 dataset', 'Evaluate_for', 'cascade evaluation'], ['cascade evaluation', 'Compare', 'method']]
metrics_sample: [1.0, 0.3333333333333333, 0.5]
metrics_current: [0.22857142857142856, 0.1245136186770428, 0.1612090680100756]
text: The goal is to sample a small set of records over which evaluating aggregate queries can be done both efficiently and accurately .
result: triple_list: [["records", "Evaluate_for", "aggregate queries"]]
pred: [('records', 'Evaluate_for', 'aggregate queries')]
trues: [['aggregate queries', 'Evaluate_for', 'records']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.22695035460992907, 0.12403100775193798, 0.16040100250626568]
text: The purpose of this research is to test the efficacy of applying automated evaluation techniques , originally devised for the evaluation of human language learners , to the output of machine translation ( MT ) systems .
result: triple_list: [["automated evaluation techniques", "Used_for", "human language learners"], ["automated evaluation techniques", "Used_for", "machine translation ( MT ) systems"]]
pred: [('automated evaluation techniques', 'Used_for', 'human language learners'), ('automated evaluation techniques', 'Used_for', 'machine translation ( MT ) systems')]
trues: [['automated evaluation techniques', 'Used_for', 'evaluation of human language learners']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.22377622377622378, 0.12355212355212356, 0.15920398009950248]
text: In this situation , the general method is to segment the raw corpus automatically using a word list , correct the output sentences by hand , and build a model from the segmented corpus .
result: triple_list: [["raw corpus", "used_for", "segmented corpus"], ["word list", "used_for", "raw corpus"], ["segmented corpus", "used_for", "model"]]
pred: [('raw corpus', 'used_for', 'segmented corpus'), ('word list', 'used_for', 'raw corpus'), ('segmented corpus', 'used_for', 'model')]
trues: [['method', 'Used_for', 'raw corpus'], ['word list', 'Used_for', 'method'], ['segmented corpus', 'Used_for', 'model']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.2191780821917808, 0.12213740458015267, 0.1568627450980392]
text: The perception of transparent objects from images is known to be a very hard problem in vision .
result: The candidate relations for this text are:
Feature_of
The candidate entities for this text are:
images
perception of transparent objects
pred: []
trues: [['images', 'Used_for', 'perception of transparent objects']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.2191780821917808, 0.12167300380228137, 0.15647921760391198]
text: Another problem with determiners is their inherent ambiguity .
result: triple_list: [["determiners", "hyponym_of", "ambiguity"]]
pred: [('determiners', 'hyponym_of', 'ambiguity')]
trues: [['ambiguity', 'Feature_of', 'determiners']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.21768707482993196, 0.12121212121212122, 0.1557177615571776]
text: In this paper we propose a logical formalism , which , among other things , is suitable for representing determiners without forcing a particular interpretation when their meaning is still not clear .
result: triple_list: [["logical formalism", "used_for", "representing determiners"]]
pred: [('logical formalism', 'used_for', 'representing determiners')]
trues: [['logical formalism', 'Used_for', 'determiners']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.21621621621621623, 0.12075471698113208, 0.1549636803874092]
text: Coedition of a natural language text and its representation in some interlingual form seems the best and simplest way to share text revision across languages .
result: triple_list: [["natural language text", "Conjunction", "interlingual form"]]
pred: [('natural language text', 'Conjunction', 'interlingual form')]
trues: [['Coedition', 'Used_for', 'text revision'], ['natural language text', 'Used_for', 'Coedition']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.21476510067114093, 0.1198501872659176, 0.15384615384615385]
text: The two main contributions of this paper are : i ) a new type of three-plane graph for dense-stereo dynamic-programming , that encourages correct occlusion labeling ; ii ) a compact geometric derivation for novel-view synthesis by direct projection of the minimum-cost surface .
result: triple_list: [["three-plane graph", "Used_for", "dense-stereo dynamic-programming"], ["three-plane graph", "Used_for", "occlusion labeling"], ["three-plane graph", "Conjunction", "geometric derivation"], ["geometric derivation", "Used_for", "novel-view synthesis"], ["geometric derivation", "Used_for", "direct projection of the minimum-cost surface"]]
pred: [('three-plane graph', 'Used_for', 'dense-stereo dynamic-programming'), ('three-plane graph', 'Used_for', 'occlusion labeling'), ('three-plane graph', 'Conjunction', 'geometric derivation'), ('geometric derivation', 'Used_for', 'novel-view synthesis'), ('geometric derivation', 'Used_for', 'direct projection of the minimum-cost surface')]
trues: [['three-plane graph', 'Used_for', 'dense-stereo dynamic-programming'], ['dense-stereo dynamic-programming', 'Used_for', 'occlusion labeling'], ['compact geometric derivation', 'Used_for', 'novel-view synthesis'], ['direct projection of the minimum-cost surface', 'Used_for', 'compact geometric derivation']]
metrics_sample: [0.2, 0.25, 0.22222222222222224]
metrics_current: [0.21428571428571427, 0.12177121771217712, 0.15529411764705883]
text: A method for producing such phrases from a word-aligned corpora is proposed .
result: The candidate relations for this text are:
Used_for
The candidate entities for this text are:
method
phrases
pred: []
trues: [['method', 'Used_for', 'phrases'], ['word-aligned corpora', 'Evaluate_for', 'method']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.21428571428571427, 0.12087912087912088, 0.15456674473067916]
text: We explored possible ways to obtain a compact lexicon , consistent with CCG principles , from a treebank which is an order of magnitude smaller than Penn WSJ .
result: triple_list: [["treebank", "Used_for", "Penn WSJ."] ["treebank", "Used_for", "CCG principles"]
pred: [('treebank', 'Used_for', 'Penn WSJ.'), ('treebank', 'Used_for', 'CCG principles')]
trues: [['compact lexicon', 'Part_of', 'treebank'], ['treebank', 'Compare', 'Penn WSJ']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.21153846153846154, 0.12, 0.1531322505800464]
text: We show that the trainable sentence planner performs better than the rule-based systems and the baselines , and as well as the hand-crafted system .
result: triple_list: [["trainable sentence planner", "Compare", "rule-based systems"], ["trainable sentence planner", "Compare", "baselines"], ["trainable sentence planner", "Compare", "hand-crafted system"]]
pred: [('trainable sentence planner', 'Compare', 'rule-based systems'), ('trainable sentence planner', 'Compare', 'baselines'), ('trainable sentence planner', 'Compare', 'hand-crafted system')]
trues: [['trainable sentence planner', 'Compare', 'rule-based systems'], ['trainable sentence planner', 'Compare', 'baselines'], ['trainable sentence planner', 'Compare', 'hand-crafted system'], ['rule-based systems', 'Conjunction', 'baselines'], ['baselines', 'Conjunction', 'hand-crafted system']]
metrics_sample: [1.0, 0.6, 0.7499999999999999]
metrics_current: [0.22641509433962265, 0.12857142857142856, 0.16400911161731208]
text: This paper considers the problem of reconstructing the motion of a 3D articulated tree from 2D point correspondences subject to some temporal prior .
result: The candidate relations for this text are:
Used_for
Used_for
The candidate entities for this text are:
2D point correspondences
reconstructing
temporal prior
reconstructing
pred: []
trues: [['2D point correspondences', 'Used_for', 'reconstructing the motion of a 3D articulated tree']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.22641509433962265, 0.12811387900355872, 0.16363636363636366]
text: This paper deals with the problem of generating the fundamental frequency ( F0 ) contour of speech from a text input for text-to-speech synthesis .
result: The candidate relations for this text are:
Used_for
The candidate entities for this text are:
text input
text-to-speech synthesis
pred: []
trues: [['fundamental frequency ( F0 ) contour of speech', 'Used_for', 'text-to-speech synthesis'], ['text input', 'Used_for', 'fundamental frequency ( F0 ) contour of speech']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.22641509433962265, 0.127208480565371, 0.16289592760180996]
text: For example , nucleotides in a DNA sequence , children 's names in a given state and year , and text documents are all commonly modeled with multinomial distributions .
result: triple_list: [["nucleotides in a DNA sequence", "feature_of", "multinomial distributions"], ["children's names in a given state and year", "feature_of", "multinomial distributions"], ["text documents", "feature_of", "multinomial distributions"]]
pred: [('nucleotides in a DNA sequence', 'feature_of', 'multinomial distributions'), ("children's names in a given state and year", 'feature_of', 'multinomial distributions'), ('text documents', 'feature_of', 'multinomial distributions')]
trues: [['multinomial distributions', 'Used_for', 'nucleotides in a DNA sequence'], ['multinomial distributions', 'Used_for', 'text documents']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.2222222222222222, 0.12631578947368421, 0.16107382550335572]
text: Online action detection goes one step further and is more challenging , which identifies the action type and localizes the action positions on the fly from the untrimmed stream .
result: The candidate relations for this text are:
Used_for
The candidate entities for this text are:
untrimmed stream
action positions
pred: []
trues: [['Online action detection', 'Used_for', 'action type'], ['Online action detection', 'Used_for', 'action positions'], ['action type', 'Conjunction', 'action positions'], ['untrimmed stream', 'Used_for', 'Online action detection']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.2222222222222222, 0.1245674740484429, 0.15964523281596452]
text: With relevant approach , we identify important contents by PageRank algorithm on the event map constructed from documents .
result: The candidate relations for this text are:
Used_for
Used_for
The candidate entities for this text are:
PageRank algorithm
important contents
event map
important contents
pred: []
trues: [['PageRank algorithm', 'Used_for', 'relevant approach'], ['event map', 'Used_for', 'PageRank algorithm'], ['documents', 'Used_for', 'event map']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.2222222222222222, 0.1232876712328767, 0.15859030837004406]
text: Language resource quality is crucial in NLP .
result: The candidate relations for this text are:
Evaluate_for
The candidate entities for this text are:
Language resource quality
NLP
pred: []
trues: [['Language resource quality', 'Feature_of', 'NLP']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.2222222222222222, 0.12286689419795221, 0.15824175824175823]
text: While Plume is well adapted to simple declarative and imperative utterances , it handles passives , relative clauses and interrogatives in an ad hoc manner leading to patchy syntactic coverage .
result: triple_list: [["Plume", "Used_for", "declarative and imperative utterances"], ["Plume", "Used_for", "passives"], ["Plume", "Used_for", "relative clauses"], ["Plume", "Used_for", "interrogatives"]]
pred: [('Plume', 'Used_for', 'declarative and imperative utterances'), ('Plume', 'Used_for', 'passives'), ('Plume', 'Used_for', 'relative clauses'), ('Plume', 'Used_for', 'interrogatives')]
trues: [['Plume', 'Used_for', 'declarative and imperative utterances'], ['it', 'Used_for', 'passives'], ['it', 'Used_for', 'relative clauses'], ['it', 'Used_for', 'interrogatives'], ['passives', 'Conjunction', 'relative clauses'], ['relative clauses', 'Conjunction', 'interrogatives']]
metrics_sample: [0.25, 0.16666666666666666, 0.2]
metrics_current: [0.22289156626506024, 0.12374581939799331, 0.15913978494623654]
text: We present a scanning method that recovers dense sub-pixel camera-projector correspondence without requiring any photometric calibration nor preliminary knowledge of their relative geometry .
result: triple_list: [["scanning method", "Used_for", "dense sub-pixel camera-projector correspondence"], ["photometric calibration", "Used_for", "scanning method"], ["photometric calibration", "Conjunction", "relative geometry"], ["relative geometry", "Used_for", "scanning method"]]
pred: [('scanning method', 'Used_for', 'dense sub-pixel camera-projector correspondence'), ('photometric calibration', 'Used_for', 'scanning method'), ('photometric calibration', 'Conjunction', 'relative geometry'), ('relative geometry', 'Used_for', 'scanning method')]
trues: [['scanning method', 'Used_for', 'dense sub-pixel camera-projector correspondence']]
metrics_sample: [0.25, 1.0, 0.4]
metrics_current: [0.2235294117647059, 0.12666666666666668, 0.16170212765957448]
text: We show how features that are imaged through a transparent object behave differently from those that are rigidly attached to the scene .
result: triple_list: [["features", "Conjunction", "those that are rigidly attached to the scene"]]
pred: [('features', 'Conjunction', 'those that are rigidly attached to the scene')]
trues: [['those', 'Compare', 'features']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.2222222222222222, 0.12624584717607973, 0.16101694915254236]
text: A model-based approach to on-line cursive handwriting analysis and recognition is presented and evaluated .
result: The candidate relations for this text are:
Used_for
The candidate entities for this text are:
model-based approach
on-line cursive handwriting analysis and recognition
pred: []
trues: [['model-based approach', 'Used_for', 'on-line cursive handwriting analysis and recognition']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.2222222222222222, 0.12582781456953643, 0.16067653276955604]
text: This allows us to use our method to act not only as a faster procedure for cascade evaluation , but also as a tool to perform efficient branch-and-bound object detection with nonlinear quality functions , in particular kernel-ized support vector machines .
result: triple_list: [["method", "used_for", "faster procedure for cascade evaluation"], ["method", "used_for", "branch-and-bound object detection"]]
pred: [('method', 'used_for', 'faster procedure for cascade evaluation'), ('method', 'used_for', 'branch-and-bound object detection')]
trues: [['method', 'Used_for', 'cascade evaluation'], ['method', 'Used_for', 'branch-and-bound object detection'], ['nonlinear quality functions', 'Used_for', 'branch-and-bound object detection'], ['kernel-ized support vector machines', 'Hyponym_of', 'nonlinear quality functions']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.21965317919075145, 0.12418300653594772, 0.15866388308977036]
text: We propose a novel probabilistic framework for learning visual models of 3D object categories by combining appearance information and geometric constraints .
result: The candidate relations for this text are:
Used_for
Used_for
The candidate entities for this text are:
probabilistic framework
visual models of 3D object categories
appearance information
probabilistic framework
pred: []
trues: [['probabilistic framework', 'Used_for', 'visual models of 3D object categories'], ['appearance information', 'Used_for', 'probabilistic framework'], ['appearance information', 'Conjunction', 'geometric constraints'], ['geometric constraints', 'Used_for', 'probabilistic framework']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.21965317919075145, 0.12258064516129032, 0.15734989648033126]
text: The proposed detectors are able to capture large-scale structures and distinctive textured patterns , and exhibit strong invariance to rotation , illumination variation , and blur .
result: triple_list: [["detectors", "used_for", "large-scale structures and distinctive textured patterns"], ["rotation", "invariance", "detectors"], ["illumination variation", "invariance", "detectors"], ["blur", "invariance", "detectors"]]
pred: [('detectors', 'used_for', 'large-scale structures and distinctive textured patterns'), ('rotation', 'invariance', 'detectors'), ('illumination variation', 'invariance', 'detectors'), ('blur', 'invariance', 'detectors')]
trues: [['detectors', 'Used_for', 'large-scale structures'], ['detectors', 'Used_for', 'distinctive textured patterns'], ['detectors', 'Used_for', 'rotation'], ['detectors', 'Used_for', 'illumination variation'], ['detectors', 'Used_for', 'blur'], ['large-scale structures', 'Conjunction', 'distinctive textured patterns'], ['rotation', 'Conjunction', 'illumination variation'], ['illumination variation', 'Conjunction', 'blur']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.21468926553672316, 0.11949685534591195, 0.15353535353535352]
text: Our numerical hybrid local and global mode-seeking tracker is validated on challenging airborne videos with heavy occlusion and large camera motions .
result: triple_list: [["airborne videos", "Evaluate_for", "hybrid local and global mode-seeking tracker"]]
pred: [('airborne videos', 'Evaluate_for', 'hybrid local and global mode-seeking tracker')]
trues: [['airborne videos', 'Evaluate_for', 'numerical hybrid local and global mode-seeking tracker'], ['heavy occlusion', 'Feature_of', 'airborne videos'], ['heavy occlusion', 'Conjunction', 'camera motions'], ['camera motions', 'Feature_of', 'airborne videos']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.21348314606741572, 0.11801242236024845, 0.15200000000000002]
text: Motivated by this semantic criterion we analyze the empirical quality of distributional word feature vectors and its impact on word similarity results , proposing an objective measure for evaluating feature vector quality .
result: triple_list: [["distributional word feature vectors", "used_for", "word similarity results"], ["objective measure", "used_for", "evaluating feature vector quality"]]
pred: [('distributional word feature vectors', 'used_for', 'word similarity results'), ('objective measure', 'used_for', 'evaluating feature vector quality')]
trues: [['semantic criterion', 'Evaluate_for', 'distributional word feature vectors'], ['distributional word feature vectors', 'Used_for', 'word similarity'], ['measure', 'Evaluate_for', 'feature vector quality']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.2111111111111111, 0.11692307692307692, 0.1504950495049505]
text: In this paper , we discuss language model adaptation methods given a word list and a raw corpus .
result: The candidate relations for this text are:
Used_for
Used_for
The candidate entities for this text are:
word list
language model adaptation
raw corpus
language model adaptation
pred: []
trues: [['word list', 'Used_for', 'language model adaptation methods'], ['word list', 'Conjunction', 'raw corpus'], ['raw corpus', 'Used_for', 'language model adaptation methods']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.2111111111111111, 0.11585365853658537, 0.1496062992125984]
text: We compare our results to state of the art methods such as mi-cro phase shifting and modulated phase shifting .
result: triple_list: [["micro phase shifting", "Compare", "modulated phase shifting"]]
pred: [('micro phase shifting', 'Compare', 'modulated phase shifting')]
trues: [['mi-cro phase shifting', 'Hyponym_of', 'state of the art methods'], ['mi-cro phase shifting', 'Conjunction', 'modulated phase shifting'], ['modulated phase shifting', 'Hyponym_of', 'state of the art methods']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.20994475138121546, 0.1148036253776435, 0.1484375]
text: We then use the predicates of such clauses to create a set of domain independent features to annotate an input dataset , and run two different machine learning algorithms : SLIPPER , a rule-based learning algorithm , and TiMBL , a memory-based system .
result: triple_list: [["predicates", "Used_for", "clauses"], ["predicates", "Used_for", "domain independent features"], ["SLIPPER", "Hyponym_of", "rule-based learning algorithm"], ["SLIPPER", "Conjunction", "TiMBL"], ["TiMBL", "Hyponym_of", "memory-based system"]]
pred: [('predicates', 'Used_for', 'clauses'), ('predicates', 'Used_for', 'domain independent features'), ('SLIPPER', 'Hyponym_of', 'rule-based learning algorithm'), ('SLIPPER', 'Conjunction', 'TiMBL'), ('TiMBL', 'Hyponym_of', 'memory-based system')]
trues: [['SLIPPER', 'Hyponym_of', 'rule-based learning algorithm'], ['rule-based learning algorithm', 'Part_of', 'machine learning algorithms'], ['rule-based learning algorithm', 'Compare', 'memory-based system'], ['TiMBL', 'Hyponym_of', 'memory-based system'], ['memory-based system', 'Part_of', 'machine learning algorithms']]
metrics_sample: [0.4, 0.4, 0.4000000000000001]
metrics_current: [0.21505376344086022, 0.11904761904761904, 0.1532567049808429]
text: First , it uses several kinds of dictionaries to segment and tag Japanese character strings .
result: The candidate relations for this text are:
Used_for
Used_for
The candidate entities for this text are:
dictionaries
segment
dictionaries
tag
pred: []
trues: [['dictionaries', 'Used_for', 'it'], ['dictionaries', 'Used_for', 'Japanese character strings']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.21505376344086022, 0.11834319526627218, 0.15267175572519084]
text: We analyzed eye gaze , head nods and attentional focus in the context of a direction-giving task .
result: The candidate relations for this text are:
Part_of
Hyponym_of
The candidate entities for this text are:
eye gaze
eye gaze
head nods
eye gaze
pred: []
trues: [['eye gaze', 'Conjunction', 'head nods'], ['eye gaze', 'Part_of', 'direction-giving task'], ['head nods', 'Conjunction', 'attentional focus'], ['head nods', 'Part_of', 'direction-giving task'], ['attentional focus', 'Part_of', 'direction-giving task']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.21505376344086022, 0.11661807580174927, 0.15122873345935728]
text: In this paper , we present an approach to rapidly creating pixel-accurate semantic label maps for images extracted from modern computer games .
result: triple_list: [["semantic label maps", "used_for", "images"]]
pred: [('semantic label maps', 'used_for', 'images')]
trues: [['approach', 'Used_for', 'pixel-accurate semantic label maps'], ['pixel-accurate semantic label maps', 'Used_for', 'images'], ['images', 'Part_of', 'modern computer games']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.21390374331550802, 0.11560693641618497, 0.15009380863039398]
text: The description has been implemented using the PC-KIMMO environment ( Antworth , 1990 ) and is based on a root word lexicon of about 23,000 roots words .
result: triple_list: [["PC-KIMMO environment", "Used_for", "description"], ["root word lexicon", "Used_for", "description"]]
pred: [('PC-KIMMO environment', 'Used_for', 'description'), ('root word lexicon', 'Used_for', 'description')]
trues: [['PC-KIMMO environment', 'Used_for', 'description'], ['root word lexicon', 'Used_for', 'description']]
metrics_sample: [1.0, 1.0, 1.0]
metrics_current: [0.2222222222222222, 0.1206896551724138, 0.1564245810055866]
text: We describe how to estimate these indicators and how to integrate them into a retrieval approach based on language models .
result: triple_list: [["indicators", "used_for", "retrieval approach based on language models"]]
pred: [('indicators', 'used_for', 'retrieval approach based on language models')]
trues: [['them', 'Part_of', 'retrieval approach'], ['language models', 'Used_for', 'them']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.22105263157894736, 0.12, 0.15555555555555553]
text: In particular , our guarantee suggests that a substantial amount of low rank matrices , which can not be recovered by standard robust PCA , become re-coverable by our proposed method .
result: triple_list: [["low rank matrices", "recoverable", "robust PCA"], ["low rank matrices", "re-coverable", "method"]]
pred: [('low rank matrices', 'recoverable', 'robust PCA'), ('low rank matrices', 're-coverable', 'method')]
trues: [['method', 'Used_for', 'low rank matrices']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.21875, 0.11965811965811966, 0.15469613259668508]
text: We propose a novel metric learning formulation called Weighted Approximate Rank Component Analysis ( WARCA ) .
result: The candidate relations for this text are:
Hyponym_of
The candidate entities for this text are:
Weighted Approximate Rank Component Analysis ( WARCA )
metric learning formulation
pred: []
trues: [['Weighted Approximate Rank Component Analysis ( WARCA )', 'Hyponym_of', 'metric learning formulation']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.21875, 0.11931818181818182, 0.15441176470588236]
text: We investigate several voting - and arbiter-based combination strategies over a diverse pool of unsupervised WSD systems .
result: The candidate relations for this text are:
Used_for
The candidate entities for this text are:
voting - and arbiter-based combination strategies
unsupervised WSD systems
pred: []
trues: [['voting - and arbiter-based combination strategies', 'Used_for', 'unsupervised WSD systems']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.21875, 0.11898016997167139, 0.15412844036697249]
text: A statistical translation model is also presented that deals such phrases , as well as a training method based on the maximization of translation accuracy , as measured with the NIST evaluation metric .
result: The candidate relations for this text are:
Used_for
Used_for
Used_for
The candidate entities for this text are:
statistical translation model
phrases
training method
translation accuracy
maximization of translation accuracy
NIST evaluation metric
pred: []
trues: [['statistical translation model', 'Used_for', 'phrases'], ['maximization of translation accuracy', 'Used_for', 'training method'], ['NIST evaluation metric', 'Evaluate_for', 'statistical translation model']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.21875, 0.11797752808988764, 0.15328467153284672]
text: In order to build robust automatic abstracting systems , there is a need for better training resources than are currently available .
result: The candidate relations for this text are:
Used_for
The candidate entities for this text are:
training resources
automatic abstracting systems
pred: []
trues: [['training resources', 'Used_for', 'automatic abstracting systems']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.21875, 0.11764705882352941, 0.1530054644808743]
text: Our experiments on real data sets show that the resulting detector is more robust to the choice of training examples , and substantially improves both linear and kernel SVM when trained on 10 positive and 10 negative examples .
result: triple_list: [["real data sets", "Evaluate_for", "detector"], ["detector", "Used_for", "linear and kernel SVM"]]
pred: [('real data sets', 'Evaluate_for', 'detector'), ('detector', 'Used_for', 'linear and kernel SVM')]
trues: [['real data sets', 'Evaluate_for', 'detector'], ['detector', 'Compare', 'linear and kernel SVM']]
metrics_sample: [0.5, 0.5, 0.5]
metrics_current: [0.22164948453608246, 0.11977715877437325, 0.15551537070524413]
text: It would also be effective as a move selector and move sorter for game tree search and as a training tool for Go players .
result: triple_list: [["It", "Used_for", "move selector and move sorter for game tree search"], ["It", "Used_for", "Go players"]]
pred: [('It', 'Used_for', 'move selector and move sorter for game tree search'), ('It', 'Used_for', 'Go players')]
trues: [['It', 'Used_for', 'move selector'], ['It', 'Used_for', 'move sorter'], ['It', 'Used_for', 'training tool'], ['move selector', 'Conjunction', 'move sorter'], ['move selector', 'Used_for', 'game tree search'], ['move sorter', 'Used_for', 'game tree search'], ['training tool', 'Used_for', 'Go players']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.2193877551020408, 0.11748633879781421, 0.15302491103202848]
text: We further demonstrate synthesis from a freely translating virtual camera .
result: The candidate relations for this text are:
Used_for
The candidate entities for this text are:
freely translating virtual camera
synthesis
pred: []
trues: [['translating virtual camera', 'Used_for', 'synthesis']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.2193877551020408, 0.11716621253405994, 0.152753108348135]
text: FERRET utilizes a novel approach to Q/A known as predictive questioning which attempts to identify the questions ( and answers ) that users need by analyzing how a user interacts with a system while gathering information related to a particular scenario .
result: The candidate relations for this text are:
Used_for
Used_for
The candidate entities for this text are:
predictive questioning
FERRET
predictive questioning
questions ( and answers )
pred: []
trues: [['approach', 'Used_for', 'FERRET'], ['approach', 'Used_for', 'Q/A']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.2193877551020408, 0.11653116531165311, 0.15221238938053097]
text: We propose a novel approach to associate objects across multiple PTZ cameras that can be used to perform camera handoff in wide-area surveillance scenarios .
result: triple_list: [["PTZ cameras", "used_for", "camera handoff"]]
pred: [('PTZ cameras', 'used_for', 'camera handoff')]
trues: [['approach', 'Used_for', 'camera handoff in wide-area surveillance scenarios']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.2182741116751269, 0.11621621621621622, 0.15167548500881833]
text: This paper examines the benefits of system combination for unsupervised WSD .
result: The candidate relations for this text are:
Used_for
The candidate entities for this text are:
system combination
unsupervised WSD
pred: []
trues: [['system combination', 'Used_for', 'unsupervised WSD']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.2182741116751269, 0.11590296495956873, 0.15140845070422534]
text: We apply cluster analysis on the sampled parameter space to redetect the object and renew the local tracker .
result: triple_list: [["cluster analysis", "Used_for", "object"], ["cluster analysis", "Used_for", "local tracker"]]
pred: [('cluster analysis', 'Used_for', 'object'), ('cluster analysis', 'Used_for', 'local tracker')]
trues: [['cluster analysis', 'Used_for', 'sampled parameter space'], ['cluster analysis', 'Used_for', 'local tracker']]
metrics_sample: [0.5, 0.5, 0.5]
metrics_current: [0.22110552763819097, 0.11796246648793565, 0.15384615384615383]
text: MINPRAN 's properties are connrmed experimentally on synthetic data and compare favorably to least median of squares .
result: triple_list: [["MINPRAN's", "compare", "least median of squares"]]
pred: [("MINPRAN's", 'compare', 'least median of squares')]
trues: [['synthetic data', 'Evaluate_for', 'MINPRAN'], ['least median of squares', 'Compare', 'MINPRAN']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.22, 0.11733333333333333, 0.1530434782608696]
text: Labeled data is replaced by a few hand-crafted rules that encode basic syntactic knowledge .
result: The candidate relations for this text are:
Used_for
The candidate entities for this text are:
hand-crafted rules
syntactic knowledge
pred: []
trues: [['hand-crafted rules', 'Used_for', 'syntactic knowledge']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.22, 0.11702127659574468, 0.1527777777777778]
text: A new tool for linguistic annotation of scfs in corpus data is also introduced which can considerably alleviate the process of obtaining training and test data for subcategorization acquisition .
result: triple_list: [["tool", "Used_for", "linguistic annotation of scfs in corpus data"]]
pred: [('tool', 'Used_for', 'linguistic annotation of scfs in corpus data')]
trues: [['tool', 'Used_for', 'linguistic annotation of scfs'], ['training and test data', 'Used_for', 'subcategorization acquisition']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.21890547263681592, 0.1164021164021164, 0.15198618307426598]
text: Our experiments clearly indicate the potential of this dynamic representation for complete cursive handwriting recognition .
result: triple_list: [["dynamic representation", "Used_for", "complete cursive handwriting recognition"]]
pred: [('dynamic representation', 'Used_for', 'complete cursive handwriting recognition')]
trues: [['dynamic representation', 'Used_for', 'cursive handwriting recognition']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.21782178217821782, 0.11609498680738786, 0.1514629948364888]
text: We evaluated the topic signatures on a WSD task , where we trained a second-order vector cooccurrence algorithm on standard WSD datasets , with promising results .
result: triple_list: [["topic signatures", "Used_for", "WSD task"], ["WSD task", "Used_for", "second-order vector cooccurrence algorithm"], ["second-order vector cooccurrence algorithm", "Used_for", "WSD task"]]
pred: [('topic signatures', 'Used_for', 'WSD task'), ('WSD task', 'Used_for', 'second-order vector cooccurrence algorithm'), ('second-order vector cooccurrence algorithm', 'Used_for', 'WSD task')]
trues: [['WSD task', 'Evaluate_for', 'topic signatures'], ['WSD datasets', 'Used_for', 'second-order vector cooccurrence algorithm']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.2146341463414634, 0.11548556430446194, 0.1501706484641638]
text: We report experiments conducted on a multilingual corpus to estimate the number of analogies among the sentences that it contains .
result: The candidate relations for this text are:
Evaluate_for
The candidate entities for this text are:
multilingual corpus
analogies
pred: []
trues: [['multilingual corpus', 'Evaluate_for', 'analogies']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.2146341463414634, 0.11518324607329843, 0.14991482112436116]
text: We also derive an efficient non-linear extension of WARCA by using the kernel trick .
result: The candidate relations for this text are:
Used_for
The candidate entities for this text are:
kernel trick
non-linear extension of WARCA
pred: []
trues: [['kernel trick', 'Used_for', 'non-linear extension of WARCA']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.2146341463414634, 0.11488250652741515, 0.14965986394557826]
text: The results of the experiment show that in most of the cases the cooccurrence statistics indeed reflect the semantic constraints and thus provide a basis for a useful disambiguation tool .
result: triple_list: [["cooccurrence statistics", "Used_for", "disambiguation tool"]]
pred: [('cooccurrence statistics', 'Used_for', 'disambiguation tool')]
trues: [['cooccurrence statistics', 'Used_for', 'disambiguation tool']]
metrics_sample: [1.0, 1.0, 1.0]
metrics_current: [0.21844660194174756, 0.1171875, 0.15254237288135591]
text: We present a strong detector based on combining a set of weak detectors .
result: The candidate relations for this text are:
Used_for
The candidate entities for this text are:
detector
weak detectors
pred: []
trues: [['detectors', 'Used_for', 'detector']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.21844660194174756, 0.11688311688311688, 0.15228426395939085]
text: Utterance Verification ( UV ) is a critical function of an Automatic Speech Recognition ( ASR ) System working on real applications where spontaneous speech , out-of-vocabulary ( OOV ) words and acoustic noises are present .
result: The candidate relations for this text are:
Part_of
Conjunction
Part_of
Conjunction
Part_of
The candidate entities for this text are:
Utterance Verification ( UV )
Automatic Speech Recognition ( ASR ) System
spontaneous speech
Utterance Verification ( UV )
spontaneous speech
out-of-vocabulary ( OOV ) words
out-of-vocabulary ( OOV ) words
Utterance Verification ( UV )
out-of-vocabulary ( OOV ) words
acoustic noises
pred: []
trues: [['Utterance Verification ( UV )', 'Hyponym_of', 'Automatic Speech Recognition ( ASR ) System']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.21844660194174756, 0.11658031088082901, 0.15202702702702703]
text: Experimental results from a real telephone application on a natural number recognition task show an 50 % reduction in recognition errors with a moderate 12 % rejection rate of correct utterances and a low 1.5 % rate of false acceptance .
result: triple_list: [["telephone application", "Used_for", "natural number recognition task"], ["recognition errors", "Evaluate_for", "telephone application"], ["moderate 12 % rejection rate of correct utterances", "Conjunction", "low 1.5 % rate of false acceptance"]]
pred: [('telephone application', 'Used_for', 'natural number recognition task'), ('recognition errors', 'Evaluate_for', 'telephone application'), ('moderate 12 % rejection rate of correct utterances', 'Conjunction', 'low 1.5 % rate of false acceptance')]
trues: [['natural number recognition task', 'Feature_of', 'telephone application'], ['recognition errors', 'Evaluate_for', 'natural number recognition task']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.215311004784689, 0.11597938144329897, 0.1507537688442211]
text: Branch and bound strategies have previously attempted to curb this complexity whilst maintaining global optimality .
result: triple_list: [["Branch and bound strategies", "Used_for", "global optimality"]]
pred: [('Branch and bound strategies', 'Used_for', 'global optimality')]
trues: [['Branch and bound strategies', 'Used_for', 'complexity'], ['global optimality', 'Feature_of', 'Branch and bound strategies']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.21428571428571427, 0.11538461538461539, 0.15]
text: When the scene exhibits a persistent dynamic behavior in time , such an assumption is violated and detection performance deteriorates .
result: The candidate relations for this text are:
Feature_of
The candidate entities for this text are:
persistent dynamic behavior
scene
pred: []
trues: [['persistent dynamic behavior', 'Feature_of', 'scene']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.21428571428571427, 0.11508951406649616, 0.14975041597337768]
text: On the internal side , liaisons are established between elements of the text and the graph by using broadly available resources such as a LO-English or better a L0-UNL dictionary , a morphosyntactic parser of L0 , and a canonical graph2tree transformation .
result: triple_list: [["LO-English or L0-UNL dictionary", "Used_for", "liaisons"], ["LO-English or L0-UNL dictionary", "Used_for", "morphosyntactic parser of L0"], ["morphosyntactic parser of L0", "Used_for", "liaisons"], ["morphosyntactic parser of L0", "Used_for", "canonical graph2tree transformation"]]
pred: [('LO-English or L0-UNL dictionary', 'Used_for', 'liaisons'), ('LO-English or L0-UNL dictionary', 'Used_for', 'morphosyntactic parser of L0'), ('morphosyntactic parser of L0', 'Used_for', 'liaisons'), ('morphosyntactic parser of L0', 'Used_for', 'canonical graph2tree transformation')]
trues: [['resources', 'Used_for', 'liaisons'], ['LO-English or better a L0-UNL dictionary', 'Hyponym_of', 'resources'], ['LO-English or better a L0-UNL dictionary', 'Conjunction', 'morphosyntactic parser of L0'], ['morphosyntactic parser of L0', 'Hyponym_of', 'resources'], ['morphosyntactic parser of L0', 'Conjunction', 'canonical graph2tree transformation'], ['canonical graph2tree transformation', 'Hyponym_of', 'resources']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.2102803738317757, 0.11335012594458438, 0.14729950900163666]
text: We show that combining anisotropic meshing with a non-quadratic approach to regularization enables us to obtain satisfactory reconstruction results using triangulations with few vertices .
result: triple_list: [["anisotropic meshing", "Used_for", "non-quadratic approach to regularization"], ["triangulations", "Used_for", "reconstruction results"]]
pred: [('anisotropic meshing', 'Used_for', 'non-quadratic approach to regularization'), ('triangulations', 'Used_for', 'reconstruction results')]
trues: [['anisotropic meshing', 'Conjunction', 'non-quadratic approach'], ['anisotropic meshing', 'Used_for', 'reconstruction'], ['non-quadratic approach', 'Used_for', 'regularization'], ['non-quadratic approach', 'Used_for', 'reconstruction'], ['triangulations', 'Used_for', 'reconstruction']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.20833333333333334, 0.11194029850746269, 0.14563106796116504]
text: We evaluate several proposals for constraining them , basing our assessment on computational tractability and explanatory adequacy .
result: The candidate relations for this text are:
Evaluate_for
The candidate entities for this text are:
computational tractability
them
pred: []
trues: [['computational tractability and explanatory adequacy', 'Evaluate_for', 'them']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.20833333333333334, 0.11166253101736973, 0.14539579967689822]
text: Listen-Communicate-Show ( LCS ) is a new paradigm for human interaction with data sources .
result: triple_list: [["Listen-Communicate-Show ( LCS )", "Hyponym_of", "paradigm"]]
pred: [('Listen-Communicate-Show ( LCS )', 'Hyponym_of', 'paradigm')]
trues: [['Listen-Communicate-Show ( LCS )', 'Used_for', 'human interaction with data sources']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.2073732718894009, 0.11138613861386139, 0.14492753623188406]
text: During normal tracking conditions when the object is visible from frame to frame , local optimization is used to track the local mode of the similarity measure in a parameter space of translation , rotation and scale .
result: triple_list: [["translation", "Conjunction", "rotation"], ["translation", "Conjunction", "scale"], ["rotation", "Conjunction", "scale"]]
pred: [('translation', 'Conjunction', 'rotation'), ('translation', 'Conjunction', 'scale'), ('rotation', 'Conjunction', 'scale')]
trues: [['local optimization', 'Used_for', 'local mode of the similarity measure'], ['parameter space of translation , rotation and scale', 'Used_for', 'local mode of the similarity measure']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.20454545454545456, 0.11083743842364532, 0.14376996805111822]
text: This probably occurs because each model has different strengths and weaknesses for modeling the knowledge sources .
result: triple_list: [["model", "used_for", "knowledge sources"]]
pred: [('model', 'used_for', 'knowledge sources')]
trues: [['model', 'Used_for', 'knowledge sources']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.20361990950226244, 0.11056511056511056, 0.143312101910828]
text: We describe a fully automatic recognition system based on the proposed method and an extensive evaluation on 171 individuals and over 1300 video sequences with extreme illumination , pose and head motion variation .
result: triple_list: [["fully automatic recognition system", "used_for", "method"], ["extreme illumination, pose and head motion variation", "feature_of", "video sequences"]]
pred: [('fully automatic recognition system', 'used_for', 'method'), ('extreme illumination, pose and head motion variation', 'feature_of', 'video sequences')]
trues: [['method', 'Used_for', 'fully automatic recognition system'], ['video sequences', 'Evaluate_for', 'fully automatic recognition system'], ['illumination', 'Feature_of', 'video sequences'], ['illumination', 'Conjunction', 'pose'], ['pose', 'Feature_of', 'video sequences'], ['pose', 'Conjunction', 'head motion variation'], ['head motion variation', 'Feature_of', 'video sequences']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.20179372197309417, 0.10869565217391304, 0.141287284144427]
text: In the Object Recognition task , there exists a di-chotomy between the categorization of objects and estimating object pose , where the former necessitates a view-invariant representation , while the latter requires a representation capable of capturing pose information over different categories of objects .
result: The candidate relations for this text are:
Used_for
The candidate entities for this text are:
categorization of objects
Object Recognition task
pred: []
trues: [['categorization of objects', 'Part_of', 'Object Recognition task'], ['categorization of objects', 'Conjunction', 'estimating object pose'], ['estimating object pose', 'Part_of', 'Object Recognition task'], ['view-invariant representation', 'Used_for', 'former'], ['representation', 'Used_for', 'latter'], ['representation', 'Used_for', 'pose information']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.20179372197309417, 0.10714285714285714, 0.13996889580093314]
text: Finally , we show how the estimation of the tensors from point correspondences is achieved through factorization , and discuss the estimation from line correspondences .
result: triple_list: [["tensors", "estimation", "point correspondences"], ["factorization", "used_for", "estimation"], ["line correspondences", "used_for", "estimation"]]
pred: [('tensors', 'estimation', 'point correspondences'), ('factorization', 'used_for', 'estimation'), ('line correspondences', 'used_for', 'estimation')]
trues: [['point correspondences', 'Used_for', 'estimation of the tensors'], ['factorization', 'Used_for', 'tensors'], ['line correspondences', 'Used_for', 'estimation']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.19911504424778761, 0.10638297872340426, 0.13867488443759632]
text: Our goal is to learn a Mahalanobis distance by minimizing a loss defined on the weighted sum of the precision at different ranks .
result: triple_list: [["Mahalanobis distance", "used_for", "loss"]]
pred: [('Mahalanobis distance', 'used_for', 'loss')]
trues: [['loss', 'Used_for', 'Mahalanobis distance'], ['weighted sum', 'Feature_of', 'precision']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.19823788546255505, 0.10588235294117647, 0.1380368098159509]
text: Training instances are generated from experience and observation , and a variant of GOLEM is used to learn action models from these instances .
result: The candidate relations for this text are:
Used_for
Used_for
The candidate entities for this text are:
experience and observation
Training instances
GOLEM
action models
pred: []
trues: [['GOLEM', 'Used_for', 'action models']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.19823788546255505, 0.1056338028169014, 0.13782542113323124]
text: We show that there is a closed-form ( analytical ) solution for one part of the Kullback-Leibler distance , viz the cross-entropy .
result: triple_list: [["Kullback-Leibler distance", "part_of", "cross-entropy"]]
pred: [('Kullback-Leibler distance', 'part_of', 'cross-entropy')]
trues: [['closed-form ( analytical ) solution', 'Used_for', 'Kullback-Leibler distance'], ['closed-form ( analytical ) solution', 'Used_for', 'cross-entropy'], ['cross-entropy', 'Part_of', 'Kullback-Leibler distance']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.19736842105263158, 0.1048951048951049, 0.136986301369863]
text: Thus the ASR system is designed to deal with what we refer to as Word Spotting and Noise Spotting capabilities .
result: triple_list: [["ASR system", "Used_for", "Word Spotting and Noise Spotting capabilities"]]
pred: [('ASR system', 'Used_for', 'Word Spotting and Noise Spotting capabilities')]
trues: [['ASR system', 'Used_for', 'Word Spotting'], ['ASR system', 'Used_for', 'Noise Spotting capabilities']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.1965065502183406, 0.10440835266821345, 0.13636363636363638]
text: Related work applies MINPRAN to complex range and intensity data 23 ] .
result: triple_list: [["MINPRAN", "Used_for", "complex range and intensity data"]]
pred: [('MINPRAN', 'Used_for', 'complex range and intensity data')]
trues: [['MINPRAN', 'Used_for', 'complex range'], ['MINPRAN', 'Used_for', 'intensity data']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.1956521739130435, 0.10392609699769054, 0.13574660633484165]
text: This paper solves a specialized regression problem to obtain sampling probabilities for records in databases .
result: triple_list: [["regression problem", "Used_for", "sampling probabilities"]]
pred: [('regression problem', 'Used_for', 'sampling probabilities')]
trues: [['specialized regression problem', 'Used_for', 'sampling probabilities'], ['sampling probabilities', 'Used_for', 'records'], ['records', 'Part_of', 'databases']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.19480519480519481, 0.10321100917431193, 0.13493253373313344]
text: As a Monte Carlo approach , ASA stochastically samples the parameter space , in contrast to local deterministic search .
result: triple_list: [["ASA", "Monte Carlo approach", "parameter space"], ["ASA", "Used_for", "parameter space"]]
pred: [('ASA', 'Monte Carlo approach', 'parameter space'), ('ASA', 'Used_for', 'parameter space')]
trues: [['ASA', 'Hyponym_of', 'Monte Carlo approach'], ['ASA', 'Compare', 'local deterministic search']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.19313304721030042, 0.10273972602739725, 0.13412816691505217]
text: Furthermore , we propose the use of standard parser evaluation methods for automatically evaluating the summarization quality of sentence condensation systems .
result: triple_list: [["parser evaluation methods", "Used_for", "summarization quality of sentence condensation systems"]]
pred: [('parser evaluation methods', 'Used_for', 'summarization quality of sentence condensation systems')]
trues: [['parser evaluation methods', 'Evaluate_for', 'summarization quality'], ['summarization quality', 'Evaluate_for', 'sentence condensation systems']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.19230769230769232, 0.10227272727272728, 0.1335311572700297]
text: This model was shown to be more appropriate for blind separation of natural speech signals .
result: triple_list: [["model", "Used_for", "blind separation of natural speech signals"]]
pred: [('model', 'Used_for', 'blind separation of natural speech signals')]
trues: [['model', 'Used_for', 'blind separation of natural speech signals .']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.19148936170212766, 0.10204081632653061, 0.13313609467455623]
text: Full digital resolution is maintained even with low-resolution analog-to-digital conversion , owing to random statistics in the analog summation of binary products .
result: triple_list: [["digital resolution", "Feature_of", "analog-to-digital conversion"]]
pred: [('digital resolution', 'Feature_of', 'analog-to-digital conversion')]
trues: [['random statistics', 'Part_of', 'analog summation of binary products']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.1906779661016949, 0.10180995475113122, 0.1327433628318584]
text: The system incorporates a decision-tree classifier for 30 scf types which tests for the presence of grammatical relations ( grs ) in the output of a robust statistical parser .
result: The candidate relations for this text are:
Part_of
Used_for
The candidate entities for this text are:
decision-tree classifier
system
decision-tree classifier
grammatical relations ( grs )
pred: []
trues: [['decision-tree classifier', 'Part_of', 'system'], ['decision-tree classifier', 'Used_for', 'grammatical relations ( grs )']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.1906779661016949, 0.10135135135135136, 0.13235294117647056]
text: Our morphological analyzer has done all the necessary work for the recognition and classification of proper names , numerical and temporal expressions , i.e. Named Entity ( NE ) items in the Japanese text .
result: triple_list: [["morphological analyzer", "used_for", "recognition and classification of proper names, numerical and temporal expressions, i.e. Named Entity ( NE ) items in the Japanese text."]]
pred: [('morphological analyzer', 'used_for', 'recognition and classification of proper names, numerical and temporal expressions, i.e. Named Entity ( NE ) items in the Japanese text.')]
trues: [['morphological analyzer', 'Used_for', 'recognition and classification of proper names , numerical and temporal expressions'], ['Named Entity ( NE ) items', 'Hyponym_of', 'proper names , numerical and temporal expressions'], ['Named Entity ( NE ) items', 'Part_of', 'Japanese text']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.189873417721519, 0.10067114093959731, 0.13157894736842107]
text: We show how this can efficiently be combined with random-projection based methods for 2 NN search , such as locality-sensitive hashing ( LSH ) or random projection trees .
result: triple_list: [["random-projection based methods", "Used_for", "2 NN search"], ["locality-sensitive hashing ( LSH )", "Conjunction", "random projection trees"], ["locality-sensitive hashing ( LSH )", "Used_for", "2 NN search"], ["random projection trees", "Used_for", "2 NN search"]]
pred: [('random-projection based methods', 'Used_for', '2 NN search'), ('locality-sensitive hashing ( LSH )', 'Conjunction', 'random projection trees'), ('locality-sensitive hashing ( LSH )', 'Used_for', '2 NN search'), ('random projection trees', 'Used_for', '2 NN search')]
trues: [['this', 'Conjunction', 'random-projection based methods'], ['random-projection based methods', 'Used_for', 'NN search'], ['locality-sensitive hashing ( LSH )', 'Hyponym_of', 'random-projection based methods'], ['locality-sensitive hashing ( LSH )', 'Conjunction', 'random projection trees'], ['random projection trees', 'Hyponym_of', 'random-projection based methods']]
metrics_sample: [0.25, 0.2, 0.22222222222222224]
metrics_current: [0.1908713692946058, 0.10176991150442478, 0.13275613275613277]
text: Our proposed approach builds on recent advances in spectral clustering , image matting , and boundary detection .
result: triple_list: [["spectral clustering", "Used_for", "approach"], ["image matting", "Used_for", "approach"], ["boundary detection", "Used_for", "approach"]]
pred: [('spectral clustering', 'Used_for', 'approach'), ('image matting', 'Used_for', 'approach'), ('boundary detection', 'Used_for', 'approach')]
trues: [['spectral clustering', 'Used_for', 'approach'], ['spectral clustering', 'Conjunction', 'image matting'], ['image matting', 'Used_for', 'approach'], ['image matting', 'Conjunction', 'boundary detection'], ['boundary detection', 'Used_for', 'approach']]
metrics_sample: [1.0, 0.6, 0.7499999999999999]
metrics_current: [0.20081967213114754, 0.10722100656455143, 0.13980028530670474]
text: Our combination methods rely on predominant senses which are derived automatically from raw text .
result: The candidate relations for this text are:
Used_for
The candidate entities for this text are:
raw text
predominant senses
pred: []
trues: [['predominant senses', 'Used_for', 'combination methods'], ['raw text', 'Used_for', 'predominant senses']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.20081967213114754, 0.10675381263616558, 0.13940256045519206]
text: In this work , we study how Convolutional Neural Networks ( CNN ) architectures can be adapted to the task of simultaneous object recognition and pose estimation .
result: triple_list: [["Convolutional Neural Networks ( CNN )", "used_for", "simultaneous object recognition and pose estimation"]]
pred: [('Convolutional Neural Networks ( CNN )', 'used_for', 'simultaneous object recognition and pose estimation')]
trues: [['Convolutional Neural Networks ( CNN ) architectures', 'Used_for', 'object recognition'], ['Convolutional Neural Networks ( CNN ) architectures', 'Used_for', 'pose estimation'], ['object recognition', 'Conjunction', 'pose estimation']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.2, 0.10606060606060606, 0.1386138613861386]
text: The system is implemented entirely in Prolog , a programming language based on logic .
result: triple_list: [["Prolog", "used_for", "system"]]
pred: [('Prolog', 'used_for', 'system')]
trues: [['Prolog', 'Used_for', 'system'], ['Prolog', 'Hyponym_of', 'programming language'], ['logic', 'Used_for', 'programming language']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.1991869918699187, 0.1053763440860215, 0.1378340365682138]
text: This reflects contemporary methods for unsupervised object discovery from groups of images , and it allows us to define intuitive evaluation met-rics for our sets of segmentations based on the accurate and parsimonious delineation of scene objects .
result: triple_list: [["unsupervised object discovery", "used_for", "methods"], ["unsupervised object discovery", "used_for", "segmentations"], ["evaluation met-rics", "used_for", "segmentations"]]
pred: [('unsupervised object discovery', 'used_for', 'methods'), ('unsupervised object discovery', 'used_for', 'segmentations'), ('evaluation met-rics', 'used_for', 'segmentations')]
trues: [['contemporary methods', 'Used_for', 'unsupervised object discovery']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.19678714859437751, 0.10515021459227468, 0.13706293706293707]
text: This paper presents the results of automatically inducing a Combinatory Categorial Grammar ( CCG ) lexicon from a Turkish dependency treebank .
result: The candidate relations for this text are:
Used_for
Used_for
The candidate entities for this text are:
Turkish dependency treebank
Combinatory Categorial Grammar ( CCG ) lexicon
Turkish dependency treebank
Combinatory Categorial Grammar ( CCG ) lexicon
pred: []
trues: [['Combinatory Categorial Grammar ( CCG ) lexicon', 'Part_of', 'Turkish dependency treebank']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.19678714859437751, 0.10492505353319058, 0.13687150837988826]
text: The experimental results show that the proposed histogram-based interest point detectors perform particularly well for the tasks of matching textured scenes under blur and illumination changes , in terms of repeatability and distinctiveness .
result: triple_list: [["histogram-based interest point detectors", "Used_for", "matching textured scenes under blur and illumination changes"], ["repeatability", "Conjunction", "distinctiveness"]]
pred: [('histogram-based interest point detectors', 'Used_for', 'matching textured scenes under blur and illumination changes'), ('repeatability', 'Conjunction', 'distinctiveness')]
trues: [['histogram-based interest point detectors', 'Used_for', 'matching textured scenes'], ['repeatability', 'Evaluate_for', 'histogram-based interest point detectors'], ['repeatability', 'Conjunction', 'distinctiveness'], ['distinctiveness', 'Evaluate_for', 'histogram-based interest point detectors']]
metrics_sample: [0.5, 0.25, 0.3333333333333333]
metrics_current: [0.199203187250996, 0.10615711252653928, 0.13850415512465372]
text: Computing power per area and power consumption is amongst the highest reported for a single chip .
result: triple_list: [["Computing power per area and power consumption", "Feature_of", "single chip"]]
pred: [('Computing power per area and power consumption', 'Feature_of', 'single chip')]
trues: [['Computing power per area', 'Conjunction', 'power consumption']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.1984126984126984, 0.1059322033898305, 0.13812154696132595]
text: Our technique gives a substantial improvement in paraphrase classification accuracy over all of the other models used in the experiments .
result: triple_list: [["technique", "Used_for", "paraphrase classification accuracy"]]
pred: [('technique', 'Used_for', 'paraphrase classification accuracy')]
trues: [['technique', 'Compare', 'models'], ['paraphrase classification accuracy', 'Evaluate_for', 'technique'], ['paraphrase classification accuracy', 'Evaluate_for', 'models']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.1976284584980237, 0.10526315789473684, 0.13736263736263737]
text: Human action recognition from well-segmented 3D skeleton data has been intensively studied and attracting an increasing attention .
result: triple_list: [["3D skeleton data", "Used_for", "Human action recognition"]]
pred: [('3D skeleton data', 'Used_for', 'Human action recognition')]
trues: [['well-segmented 3D skeleton data', 'Used_for', 'Human action recognition']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.1968503937007874, 0.10504201680672269, 0.13698630136986303]
text: We investigate and analyze the layers of various CNN models and extensively compare between them with the goal of discovering how the layers of distributed representations within CNNs represent object pose information and how this contradicts with object category representations .
result: triple_list: [["layers", "Part_of", "CNN models"], ["layers", "Used_for", "distributed representations"], ["distributed representations", "Used_for", "object pose information"], ["distributed representations", "Compare", "object category representations"]]
pred: [('layers', 'Part_of', 'CNN models'), ('layers', 'Used_for', 'distributed representations'), ('distributed representations', 'Used_for', 'object pose information'), ('distributed representations', 'Compare', 'object category representations')]
trues: [['layers', 'Part_of', 'CNN models'], ['layers of distributed representations', 'Part_of', 'CNNs'], ['layers of distributed representations', 'Used_for', 'object pose information'], ['this', 'Compare', 'object category representations']]
metrics_sample: [0.25, 0.25, 0.25]
metrics_current: [0.19767441860465115, 0.10625, 0.13821138211382114]
text: The goal of this work is the enrichment of human-machine interactions in a natural language environment .
result: The candidate relations for this text are:
Used_for
The candidate entities for this text are:
natural language environment
human-machine interactions
pred: []
trues: [['natural language environment', 'Feature_of', 'human-machine interactions']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.19767441860465115, 0.10602910602910603, 0.13802435723951287]
text: Our approach is among the first to propose a generative proba-bilistic framework for 3D object categorization .
result: triple_list: [["approach", "Used_for", "3D object categorization"]]
pred: [('approach', 'Used_for', '3D object categorization')]
trues: [['generative proba-bilistic framework', 'Used_for', '3D object categorization']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.1969111969111969, 0.10580912863070539, 0.13765182186234817]
text: b ) The UV procedure is based on three different confidence tests , two based on acoustic measures and one founded on linguistic information , applied in a hierarchical structure .
result: triple_list: [["acoustic measures", "used_for", "confidence tests"], ["linguistic information", "used_for", "confidence tests"], ["acoustic measures", "Conjunction", "linguistic information"]]
pred: [('acoustic measures', 'used_for', 'confidence tests'), ('linguistic information', 'used_for', 'confidence tests'), ('acoustic measures', 'Conjunction', 'linguistic information')]
trues: [['confidence tests', 'Used_for', 'UV procedure'], ['confidence tests', 'Used_for', 'hierarchical structure'], ['two', 'Hyponym_of', 'confidence tests'], ['acoustic measures', 'Used_for', 'two'], ['one', 'Hyponym_of', 'confidence tests'], ['linguistic information', 'Used_for', 'one']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.1946564885496183, 0.10450819672131148, 0.136]
text: This formalism is both elementary and powerful enough to strongly simulate many grammar formalisms , such as rewriting systems , dependency grammars , TAG , HPSG and LFG .
result: triple_list: [["formalism", "Hyponym_of", "grammar formalisms"], ["rewriting systems", "Hyponym_of", "grammar formalisms"], ["dependency grammars", "Hyponym_of", "grammar formalisms"], ["TAG", "Hyponym_of", "grammar formalisms"], ["HPSG", "Hyponym_of", "grammar formalisms"], ["LFG", "Hyponym_of", "grammar formalisms"]]
pred: [('formalism', 'Hyponym_of', 'grammar formalisms'), ('rewriting systems', 'Hyponym_of', 'grammar formalisms'), ('dependency grammars', 'Hyponym_of', 'grammar formalisms'), ('TAG', 'Hyponym_of', 'grammar formalisms'), ('HPSG', 'Hyponym_of', 'grammar formalisms'), ('LFG', 'Hyponym_of', 'grammar formalisms')]
trues: [['formalism', 'Used_for', 'grammar formalisms'], ['rewriting systems', 'Hyponym_of', 'grammar formalisms'], ['rewriting systems', 'Conjunction', 'dependency grammars'], ['dependency grammars', 'Hyponym_of', 'grammar formalisms'], ['dependency grammars', 'Conjunction', 'TAG'], ['TAG', 'Hyponym_of', 'grammar formalisms'], ['TAG', 'Conjunction', 'HPSG'], ['HPSG', 'Hyponym_of', 'grammar formalisms'], ['HPSG', 'Conjunction', 'LFG'], ['LFG', 'Hyponym_of', 'grammar formalisms']]
metrics_sample: [0.8333333333333334, 0.5, 0.625]
metrics_current: [0.208955223880597, 0.11244979919678715, 0.14621409921671016]
text: To improve topical blog post retrieval we incorporate textual credibility indicators in the retrieval process .
result: triple_list: [["textual credibility indicators", "Conjunction", "retrieval process"]]
pred: [('textual credibility indicators', 'Conjunction', 'retrieval process')]
trues: [['textual credibility indicators', 'Used_for', 'topical blog post retrieval'], ['textual credibility indicators', 'Part_of', 'retrieval process']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.20817843866171004, 0.112, 0.1456436931079324]
text: With the aid of a logic-based grammar formalism called extraposition grammars , Chat-80 translates English questions into the Prolog subset of logic .
result: The candidate relations for this text are:
Used_for
The candidate entities for this text are:
logic-based grammar formalism
Chat-80
pred: []
trues: [['extraposition grammars', 'Hyponym_of', 'logic-based grammar formalism'], ['extraposition grammars', 'Used_for', 'Chat-80']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.20817843866171004, 0.11155378486055777, 0.14526588845654992]
text: Therefore , the study presented in this paper may be useful in inspiring new designs of deep models for person re-identification .
result: triple_list: [["this paper", "Used_for", "deep models for person re-identification."]]
pred: [('this paper', 'Used_for', 'deep models for person re-identification.')]
trues: [['deep models', 'Used_for', 'person re-identification']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.2074074074074074, 0.11133200795228629, 0.14489003880983184]
text: This paper presents a machine learning approach to bare slice disambiguation in dialogue .
result: The candidate relations for this text are:
Used_for
The candidate entities for this text are:
machine learning approach
bare slice disambiguation in dialogue
pred: []
trues: [['machine learning approach', 'Used_for', 'bare slice disambiguation'], ['dialogue', 'Used_for', 'bare slice disambiguation']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.2074074074074074, 0.11089108910891089, 0.14451612903225805]
text: This phenomenon causes many image processing techniques to fail as they assume the presence of only one layer at each examined site e.g. motion estimation and object recognition .
result: The candidate relations for this text are:
Used_for
Used_for
Conjunction
Used_for
Conjunction
Used_for
Conjunction
Used_for
The candidate entities for this text are:
layer
image processing techniques
layer
motion estimation
motion estimation
image processing techniques
motion estimation
object recognition
object recognition
image processing techniques
object recognition
layer
pred: []
trues: [['motion estimation', 'Conjunction', 'object recognition']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.2074074074074074, 0.11067193675889328, 0.14432989690721648]
text: The subjects were given three minutes per extract to determine whether they believed the sample output to be an expert human translation or a machine translation .
result: triple_list: [["they", "Used_for", "machine translation"]]
pred: [('they', 'Used_for', 'machine translation')]
trues: [['expert human translation', 'Compare', 'machine translation']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.2066420664206642, 0.11045364891518737, 0.14395886889460155]
text: Specifically , by leveraging the merits of the deep Long Short-Term Memory ( LSTM ) subnetwork , the proposed model automatically captures the complex long-range temporal dynamics , which naturally avoids the typical sliding window design and thus ensures high computational efficiency .
result: triple_list: [["LSTM ( Long Short-Term Memory ) subnetwork", "merits", "model"], ["model", "used_for", "complex long-range temporal dynamics"]]
pred: [('LSTM ( Long Short-Term Memory ) subnetwork', 'merits', 'model'), ('model', 'used_for', 'complex long-range temporal dynamics')]
trues: [['deep Long Short-Term Memory ( LSTM ) subnetwork', 'Used_for', 'model'], ['long-range temporal dynamics', 'Feature_of', 'model']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.20512820512820512, 0.1100196463654224, 0.1432225063938619]
text: A separation method is proposed that is nearly statistically efficient ( approaching the corresponding Cramér-Rao lower bound ) , if the separated signals obey the assumed model .
result: triple_list: [["separation method", "Used_for", "separated signals"]]
pred: [('separation method', 'Used_for', 'separated signals')]
trues: [['Cramér-Rao lower bound )', 'Feature_of', 'separation method']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.20437956204379562, 0.10980392156862745, 0.14285714285714285]
text: The intentional structure captures the discourse-relevant purposes , expressed in each of the linguistic segments as well as relationships among them .
result: The candidate relations for this text are:
Used_for
Feature_of
The candidate entities for this text are:
intentional structure
discourse-relevant purposes
linguistic segments
discourse-relevant purposes
pred: []
trues: [['intentional structure', 'Used_for', 'discourse-relevant purposes']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.20437956204379562, 0.1095890410958904, 0.14267515923566879]
text: Specifically , we show how to incorporate a simple prior on the distribution of natural images into support vector machines .
result: The candidate relations for this text are:
Used_for
Part_of
The candidate entities for this text are:
prior
support vector machines
distribution of natural images
prior
pred: []
trues: [['prior on the distribution of natural images', 'Used_for', 'support vector machines']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.20437956204379562, 0.109375, 0.1424936386768448]
text: The problem of blind separation of underdetermined instantaneous mixtures of independent signals is addressed through a method relying on nonstationarity of the original signals .
result: triple_list: [["blind separation of underdetermined instantaneous mixtures of independent signals", "Used_for", "method"]]
pred: [('blind separation of underdetermined instantaneous mixtures of independent signals', 'Used_for', 'method')]
trues: [['method', 'Used_for', 'blind separation of underdetermined instantaneous mixtures of independent signals'], ['nonstationarity', 'Used_for', 'method']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.20363636363636364, 0.10894941634241245, 0.14195183776932824]
text: We provide a principled and provable solution for this problem ; it is parameterless and requires no data insights .
result: The candidate relations for this text are:
Used_for
The candidate entities for this text are:
it
problem
pred: []
trues: [['principled and provable solution', 'Used_for', 'problem']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.20363636363636364, 0.1087378640776699, 0.14177215189873416]
text: The fact that Turkish is an agglutinating free word order language presents a challenge for language theories .
result: The candidate relations for this text are:
Feature_of
The candidate entities for this text are:
free word order
agglutinating language
pred: []
trues: [['Turkish', 'Hyponym_of', 'agglutinating free word order language']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.20363636363636364, 0.10852713178294573, 0.1415929203539823]
text: These mattes are implied by a set of hypothesized object boundary fragments in the scene .
result: triple_list: [["mattes", "Used_for", "object boundary fragments"]]
pred: [('mattes', 'Used_for', 'object boundary fragments')]
trues: [['hypothesized object boundary fragments', 'Used_for', 'mattes']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.2028985507246377, 0.10831721470019343, 0.14123581336696092]
text: We provide a unified account of sentence-level and text-level anaphora within the framework of a dependency-based grammar model .
result: The candidate relations for this text are:
Used_for
Feature_of
The candidate entities for this text are:
dependency-based grammar model
sentence-level and text-level anaphora
sentence-level and text-level anaphora
dependency-based grammar model
pred: []
trues: [['dependency-based grammar model', 'Used_for', 'sentence-level and text-level anaphora']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.2028985507246377, 0.10810810810810811, 0.14105793450881612]
text: However , acquiring the necessary training data is typically a tedious and time consuming task that involves manual interaction , active sensing devices and/or synthetic scenes .
result: triple_list: [["training data", "used_for", "task"]]
pred: [('training data', 'used_for', 'task')]
trues: [['manual interaction', 'Used_for', 'task'], ['manual interaction', 'Conjunction', 'active sensing devices'], ['active sensing devices', 'Used_for', 'task'], ['active sensing devices', 'Conjunction', 'synthetic scenes'], ['synthetic scenes', 'Used_for', 'task']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.20216606498194944, 0.10707456978967496, 0.14]
text: In addition , we improve the learning by a metric weight constraint , so that the learned metric has a better generalization ability .
result: triple_list: [["metric weight constraint", "Used_for", "learning"]]
pred: [('metric weight constraint', 'Used_for', 'learning')]
trues: [['metric weight constraint', 'Used_for', 'learning'], ['generalization ability', 'Feature_of', 'learned metric']]
metrics_sample: [1.0, 0.5, 0.6666666666666666]
metrics_current: [0.20503597122302158, 0.10857142857142857, 0.1419676214196762]
text: In previous work , we have developed hidden Markov model ( HMM ) and maximum entropy ( Maxent ) classifiers that integrate textual and prosodic knowledge sources for detecting sentence boundaries .
result: The candidate relations for this text are:
Used_for
Used_for
Used_for
Used_for
Conjunction
Used_for
The candidate entities for this text are:
hidden Markov model ( HMM )
detecting sentence boundaries
hidden Markov model ( HMM ) and maximum entropy ( Maxent ) classifiers
textual and prosodic knowledge sources
textual and prosodic knowledge sources
detecting sentence boundaries
hidden Markov model ( HMM ) and maximum entropy ( Maxent ) classifiers
textual and prosodic knowledge sources
maximization of entropy
maximum entropy ( Maxent ) classifiers
pred: []
trues: [['hidden Markov model ( HMM ) and maximum entropy ( Maxent ) classifiers', 'Used_for', 'detecting sentence boundaries'], ['textual and prosodic knowledge sources', 'Used_for', 'hidden Markov model ( HMM ) and maximum entropy ( Maxent ) classifiers']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.20503597122302158, 0.10815939278937381, 0.14161490683229813]
text: The result is a discrete motor control representation of the continuous pen motion , via the quantized levels of the model parameters .
result: triple_list: [["quantized levels of the model parameters", "Used_for", "discrete motor control representation of the continuous pen motion"]]
pred: [('quantized levels of the model parameters', 'Used_for', 'discrete motor control representation of the continuous pen motion')]
trues: [['discrete motor control representation', 'Used_for', 'continuous pen motion']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.20430107526881722, 0.10795454545454546, 0.1412639405204461]
text: A random modulation scheme produces near-Bernoulli statistics even for highly correlated inputs .
result: triple_list: [["random modulation scheme", "Used_for", "Bernoulli statistics"]]
pred: [('random modulation scheme', 'Used_for', 'Bernoulli statistics')]
trues: [['random modulation scheme', 'Used_for', 'near-Bernoulli statistics'], ['highly correlated inputs', 'Used_for', 'random modulation scheme']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.20357142857142857, 0.10754716981132076, 0.14074074074074075]
text: Fast algorithms for nearest neighbor ( NN ) search have in large part focused on 2 distance .
result: The candidate relations for this text are:
Used_for
The candidate entities for this text are:
Fast algorithms
nearest neighbor ( NN ) search
pred: []
trues: [['Fast algorithms', 'Used_for', 'nearest neighbor ( NN ) search']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.20357142857142857, 0.10734463276836158, 0.1405672009864365]
text: We demonstrate our approach with multiple PTZ camera sequences in typical outdoor surveillance settings and show a comparison with state-of-the-art approaches .
result: triple_list: [["PTZ camera sequences", "Used_for", "outdoor surveillance settings"], ["PTZ camera sequences", "Compare", "approaches"]]
pred: [('PTZ camera sequences', 'Used_for', 'outdoor surveillance settings'), ('PTZ camera sequences', 'Compare', 'approaches')]
trues: [['approach', 'Used_for', 'outdoor surveillance settings'], ['approach', 'Compare', 'state-of-the-art approaches'], ['multiple PTZ camera sequences', 'Used_for', 'approach']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.20212765957446807, 0.10674157303370786, 0.13970588235294118]
text: Based on these results , we present an ECA that uses verbal and nonverbal grounding acts to update dialogue state .
result: The candidate relations for this text are:
Used_for
Used_for
The candidate entities for this text are:
verbal and nonverbal grounding acts
ECA
dialogue state
verbal and nonverbal grounding acts
pred: []
trues: [['verbal and nonverbal grounding acts', 'Used_for', 'ECA'], ['verbal and nonverbal grounding acts', 'Used_for', 'dialogue state']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.20212765957446807, 0.10634328358208955, 0.13936430317848408]
text: We present a novel model-based approach to recover the shapes and the poses of transparent objects from known motion .
result: The candidate relations for this text are:
Used_for
Used_for
The candidate entities for this text are:
model-based approach
shapes
model-based approach
poses of transparent objects
pred: []
trues: [['model-based approach', 'Used_for', 'shapes and the poses of transparent objects'], ['known motion', 'Used_for', 'shapes and the poses of transparent objects']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.20212765957446807, 0.10594795539033457, 0.13902439024390242]
text: This paper presents a phrase-based statistical machine translation method , based on non-contiguous phrases , i.e. phrases with gaps .
result: triple_list: [["phrase-based statistical machine translation method", "Used_for", "non-contiguous phrases"], ["non-contiguous phrases", "Used_for", "phrase-based statistical machine translation method"]]
pred: [('phrase-based statistical machine translation method', 'Used_for', 'non-contiguous phrases'), ('non-contiguous phrases', 'Used_for', 'phrase-based statistical machine translation method')]
trues: [['non-contiguous phrases', 'Used_for', 'phrase-based statistical machine translation method']]
metrics_sample: [0.5, 1.0, 0.6666666666666666]
metrics_current: [0.20422535211267606, 0.10760667903525047, 0.14094775212636695]
text: Owing to these variations , the pedestrian data is distributed as highly-curved manifolds in the feature space , despite the current convolutional neural networks ( CNN ) 's capability of feature extraction .
result: triple_list: [["pedestrian data", "feature_of", "feature space"]]
pred: [('pedestrian data', 'feature_of', 'feature space')]
trues: [['highly-curved manifolds', 'Used_for', 'pedestrian data'], ['feature space', 'Feature_of', 'highly-curved manifolds'], ['convolutional neural networks ( CNN )', 'Used_for', 'feature extraction']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.20350877192982456, 0.1070110701107011, 0.1402660217654172]
text: We show that various features based on the structure of email-threads can be used to improve upon lexical similarity of discourse segments for question-answer pairing .
result: triple_list: [["features", "Used_for", "question-answer pairing"]]
pred: [('features', 'Used_for', 'question-answer pairing')]
trues: [['features', 'Used_for', 'lexical similarity'], ['features', 'Used_for', 'question-answer pairing'], ['structure of email-threads', 'Used_for', 'features'], ['lexical similarity', 'Feature_of', 'discourse segments']]
metrics_sample: [1.0, 0.25, 0.4]
metrics_current: [0.2062937062937063, 0.10805860805860806, 0.1418269230769231]
text: This paper investigates the utility of applying standard MT evaluation methods ( BLEU , NIST , WER and PER ) to building classifiers to predict semantic equivalence and entailment .
result: triple_list: [["MT evaluation methods", "Used_for", "classifiers"], ["BLEU", "Conjunction", "NIST"], ["BLEU", "Conjunction", "WER"], ["NIST", "Conjunction", "WER"], ["NIST", "Conjunction", "PER"], ["WER", "Conjunction", "PER"], ["PER", "Used_for", "semantic equivalence"], ["PER", "Used_for", "entailment"]]
pred: [('MT evaluation methods', 'Used_for', 'classifiers'), ('BLEU', 'Conjunction', 'NIST'), ('BLEU', 'Conjunction', 'WER'), ('NIST', 'Conjunction', 'WER'), ('NIST', 'Conjunction', 'PER'), ('WER', 'Conjunction', 'PER'), ('PER', 'Used_for', 'semantic equivalence'), ('PER', 'Used_for', 'entailment')]
trues: [['MT evaluation methods', 'Used_for', 'classifiers'], ['BLEU', 'Hyponym_of', 'MT evaluation methods'], ['BLEU', 'Conjunction', 'NIST'], ['NIST', 'Hyponym_of', 'MT evaluation methods'], ['NIST', 'Conjunction', 'WER'], ['WER', 'Hyponym_of', 'MT evaluation methods'], ['WER', 'Conjunction', 'PER'], ['PER', 'Hyponym_of', 'MT evaluation methods'], ['classifiers', 'Used_for', 'semantic equivalence'], ['classifiers', 'Used_for', 'entailment'], ['semantic equivalence', 'Conjunction', 'entailment']]
metrics_sample: [0.5, 0.36363636363636365, 0.4210526315789474]
metrics_current: [0.21428571428571427, 0.11310592459605028, 0.14806110458284372]
text: Subpixel accuracy is achieved by considering several zero-crossings defined by the difference between pairs of unstructured patterns .
result: triple_list: [["zero-crossings", "Used_for", "Subpixel accuracy"]]
pred: [('zero-crossings', 'Used_for', 'Subpixel accuracy')]
trues: [['zero-crossings', 'Used_for', 'Subpixel accuracy']]
metrics_sample: [1.0, 1.0, 1.0]
metrics_current: [0.21694915254237288, 0.11469534050179211, 0.15005861664712777]
text: This paper presents a novel representation for three-dimensional objects in terms of affine-invariant image patches and their spatial relationships .
result: triple_list: [["affine-invariant image patches", "Used_for", "three-dimensional objects"]]
pred: [('affine-invariant image patches', 'Used_for', 'three-dimensional objects')]
trues: [['representation', 'Used_for', 'three-dimensional objects'], ['affine-invariant image patches', 'Feature_of', 'three-dimensional objects'], ['spatial relationships', 'Feature_of', 'affine-invariant image patches']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.21621621621621623, 0.1140819964349376, 0.14935822637106186]
text: Turkish is an agglutinative language with word structures formed by productive affixations of derivational and inflectional suffixes to root words .
result: triple_list: [["Turkish", "feature_of", "agglutinative language"]]
pred: [('Turkish', 'feature_of', 'agglutinative language')]
trues: [['Turkish', 'Hyponym_of', 'agglutinative language'], ['word structures', 'Feature_of', 'agglutinative language'], ['productive affixations of derivational and inflectional suffixes', 'Part_of', 'word structures']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.21548821548821548, 0.11347517730496454, 0.148664343786295]
text: This paper presents necessary and sufficient conditions for the use of demonstrative expressions in English and discusses implications for current discourse processing algorithms .
result: triple_list: [["demonstrative expressions", "used_for", "discourse processing algorithms"]]
pred: [('demonstrative expressions', 'used_for', 'discourse processing algorithms')]
trues: [['demonstrative expressions', 'Feature_of', 'English'], ['implications', 'Used_for', 'discourse processing algorithms']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.21476510067114093, 0.11307420494699646, 0.14814814814814814]
text: Joint matrix triangularization is often used for estimating the joint eigenstructure of a set M of matrices , with applications in signal processing and machine learning .
result: triple_list: [["Joint matrix triangularization", "Used_for", "joint eigenstructure of a set M of matrices"]]
pred: [('Joint matrix triangularization', 'Used_for', 'joint eigenstructure of a set M of matrices')]
trues: [['Joint matrix triangularization', 'Used_for', 'joint eigenstructure'], ['joint eigenstructure', 'Used_for', 'signal processing'], ['joint eigenstructure', 'Used_for', 'machine learning'], ['signal processing', 'Conjunction', 'machine learning']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.2140468227424749, 0.11228070175438597, 0.1472957422324511]
text: Recognition of proper nouns in Japanese text has been studied as a part of the more general problem of morphological analysis in Japanese text processing ( [ 1 ] [ 2 ] ) .
result: The candidate relations for this text are:
Part_of
Hyponym_of
The candidate entities for this text are:
Recognition of proper nouns
Japanese text processing
Japanese text processing
morphological analysis
pred: []
trues: [['Recognition of proper nouns', 'Part_of', 'morphological analysis'], ['proper nouns', 'Part_of', 'Japanese text'], ['morphological analysis', 'Used_for', 'Japanese text processing']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.2140468227424749, 0.11169284467713787, 0.14678899082568808]
text: Our method has two major components : a ) a pattern extraction scheme for efficiently harvesting patterns of given size and shape from expert game records and b ) a Bayesian learning algorithm ( in two variants ) that learns a distribution over the values of a move given a board position based on the local pattern context .
result: triple_list: [["pattern extraction scheme", "Used_for", "patterns of given size and shape"], ["pattern extraction scheme", "Used_for", "expert game records"], ["Bayesian learning algorithm", "Used_for", "distribution"], ["Bayesian learning algorithm", "Used_for", "move"], ["board position", "Used_for", "distribution"]]
pred: [('pattern extraction scheme', 'Used_for', 'patterns of given size and shape'), ('pattern extraction scheme', 'Used_for', 'expert game records'), ('Bayesian learning algorithm', 'Used_for', 'distribution'), ('Bayesian learning algorithm', 'Used_for', 'move'), ('board position', 'Used_for', 'distribution')]
trues: [['pattern extraction scheme', 'Part_of', 'method'], ['pattern extraction scheme', 'Conjunction', 'Bayesian learning algorithm'], ['Bayesian learning algorithm', 'Part_of', 'method']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.21052631578947367, 0.1111111111111111, 0.14545454545454545]
text: In this paper we specialize the projective unifocal , bifo-cal , and trifocal tensors to the affine case , and show how the tensors obtained relate to the registered tensors encountered in previous work .
result: triple_list: [["projective unifocal, bifo-cal, and trifocal tensors", "specialize", "affine case"]]
pred: [('projective unifocal, bifo-cal, and trifocal tensors', 'specialize', 'affine case')]
trues: [['projective unifocal , bifo-cal , and trifocal tensors', 'Used_for', 'affine case']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.2098360655737705, 0.11091854419410745, 0.14512471655328799]
text: In this model , on-line handwriting is considered as a modulation of a simple cycloidal pen motion , described by two coupled oscillations with a constant linear drift along the line of the writing .
result: triple_list: [["on-line handwriting", "modulation", "cycloidal pen motion"], ["cycloidal pen motion", "modulated_by", "on-line handwriting"]]
pred: [('on-line handwriting', 'modulation', 'cycloidal pen motion'), ('cycloidal pen motion', 'modulated_by', 'on-line handwriting')]
trues: [['model', 'Used_for', 'on-line handwriting'], ['on-line handwriting', 'Part_of', 'cycloidal pen motion']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.20846905537459284, 0.11053540587219343, 0.14446952595936793]
text: Kernel space embedding decouples the training and prediction costs from the data dimension and enables us to plug inarbitrary distance measures which are more natural for the features .
result: triple_list: [["Kernel space embedding", "Feature_of", "data dimension"]]
pred: [('Kernel space embedding', 'Feature_of', 'data dimension')]
trues: [['Kernel space embedding', 'Used_for', 'inarbitrary distance measures']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.2077922077922078, 0.1103448275862069, 0.14414414414414414]
text: Techniques for automatically training modules of a natural language generator have recently been proposed , but a fundamental concern is whether the quality of utterances produced with trainable components can compete with hand-crafted template-based or rule-based approaches .
result: triple_list: [["natural language generator", "part_of", "modules"], ["trainable components", "Compare", "hand-crafted template-based or rule-based approaches"]]
pred: [('natural language generator', 'part_of', 'modules'), ('trainable components', 'Compare', 'hand-crafted template-based or rule-based approaches')]
trues: [['Techniques', 'Used_for', 'automatically training modules'], ['automatically training modules', 'Part_of', 'natural language generator'], ['utterances', 'Evaluate_for', 'trainable components'], ['utterances', 'Evaluate_for', 'hand-crafted template-based or rule-based approaches'], ['trainable components', 'Compare', 'hand-crafted template-based or rule-based approaches']]
metrics_sample: [0.5, 0.2, 0.28571428571428575]
metrics_current: [0.20967741935483872, 0.1111111111111111, 0.1452513966480447]
text: Our extensive experimental results significantly improve over both uniform sampling and standard stratified sampling which are de-facto the industry standards .
result: triple_list: [["uniform sampling", "Compare", "stratified sampling"], ["uniform sampling", "Compare", "Our"]]
pred: [('uniform sampling', 'Compare', 'stratified sampling'), ('uniform sampling', 'Compare', 'Our')]
trues: [['uniform sampling', 'Conjunction', 'stratified sampling']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.20833333333333334, 0.11092150170648464, 0.14476614699331847]
text: In particular , we make extensive use of Pustejovsky 's principles concerning the predicative information associated with nominals .
result: triple_list: [["Pustejovsky's principles", "Used_for", "predicative information associated with nominals"]]
pred: [("Pustejovsky's principles", 'Used_for', 'predicative information associated with nominals')]
trues: [['nominals', 'Feature_of', 'predicative information']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.20766773162939298, 0.11073253833049404, 0.14444444444444443]
text: In both domains , we found that unsupervised methods can attain accuracies with 400 unlabeled examples comparable to those attained by supervised methods on 50 labeled examples , and that semi-supervised methods can make good use of small amounts of labeled data .
result: triple_list: [["unlabeled examples", "Compare", "labeled examples"], ["unlabeled examples", "Used_for", "supervised methods"], ["unlabeled examples", "Used_for", "semi-supervised methods"], ["labeled examples", "Used_for", "supervised methods"], ["labeled data", "Used_for", "semi-supervised methods"]]
pred: [('unlabeled examples', 'Compare', 'labeled examples'), ('unlabeled examples', 'Used_for', 'supervised methods'), ('unlabeled examples', 'Used_for', 'semi-supervised methods'), ('labeled examples', 'Used_for', 'supervised methods'), ('labeled data', 'Used_for', 'semi-supervised methods')]
trues: [['unsupervised methods', 'Compare', 'supervised methods'], ['accuracies', 'Evaluate_for', 'unsupervised methods'], ['accuracies', 'Evaluate_for', 'supervised methods'], ['unlabeled examples', 'Used_for', 'unsupervised methods'], ['labeled examples', 'Used_for', 'supervised methods'], ['labeled data', 'Used_for', 'semi-supervised methods']]
metrics_sample: [0.4, 0.3333333333333333, 0.3636363636363636]
metrics_current: [0.21069182389937108, 0.11298482293423272, 0.14709110867178926]
text: The objects can be complex in that they may be composed of multiple layers with different refractive indices .
result: The candidate relations for this text are:
Feature_of
The candidate entities for this text are:
layers
objects
pred: []
trues: [['multiple layers', 'Part_of', 'they'], ['refractive indices', 'Feature_of', 'multiple layers']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.21069182389937108, 0.11260504201680673, 0.14676889375684557]
text: To recover from these inevitable tracking failures , we consider object detection as a global optimization problem and solve it via Adaptive Simulated Annealing ( ASA ) , a method that avoids becoming trapped at local modes and is much faster than exhaustive search .
result: triple_list: [["object detection", "global optimization problem", "tracking failures"], ["Adaptive Simulated Annealing ( ASA )", "method", "exhaustive search"]]
pred: [('object detection', 'global optimization problem', 'tracking failures'), ('Adaptive Simulated Annealing ( ASA )', 'method', 'exhaustive search')]
trues: [['global optimization problem', 'Used_for', 'object detection'], ['Adaptive Simulated Annealing ( ASA )', 'Used_for', 'it'], ['method', 'Compare', 'exhaustive search']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.209375, 0.11204013377926421, 0.14596949891067537]
text: We examine the relationship between the two grammatical formalisms : Tree Adjoining Grammars and Head Grammars .
result: The candidate relations for this text are:
Hyponym_of
Conjunction
Hyponym_of
The candidate entities for this text are:
Tree Adjoining Grammars
grammatical formalisms
Tree Adjoining Grammars
Head Grammars
Head Grammars
grammatical formalisms
pred: []
trues: [['Tree Adjoining Grammars', 'Hyponym_of', 'grammatical formalisms'], ['Tree Adjoining Grammars', 'Compare', 'Head Grammars'], ['Head Grammars', 'Hyponym_of', 'grammatical formalisms']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.209375, 0.11148086522462562, 0.1454940282301846]
text: This has the advantages of efficiency on grammatical input , and robustness in the face of ungrammatical input .
result: triple_list: [["efficiency on grammatical input", "feature_of", "grammatical input"]]
pred: [('efficiency on grammatical input', 'feature_of', 'grammatical input')]
trues: [['ungrammatical input', 'Feature_of', 'robustness']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.2087227414330218, 0.11129568106312292, 0.14517876489707474]
text: Our system incorporates a linguistic parser/generator for LFG , a transfer component for parse reduction operating on packed parse forests , and a maximum-entropy model for stochastic output selection .
result: triple_list: [["linguistic parser/generator for LFG", "Conjunction", "transfer component"], ["transfer component", "Conjunction", "maximum-entropy model"], ["transfer component", "Used_for", "parse reduction"], ["maximum-entropy model", "Used_for", "stochastic output selection"]]
pred: [('linguistic parser/generator for LFG', 'Conjunction', 'transfer component'), ('transfer component', 'Conjunction', 'maximum-entropy model'), ('transfer component', 'Used_for', 'parse reduction'), ('maximum-entropy model', 'Used_for', 'stochastic output selection')]
trues: [['linguistic parser/generator', 'Part_of', 'system'], ['linguistic parser/generator', 'Used_for', 'LFG'], ['linguistic parser/generator', 'Conjunction', 'transfer component'], ['transfer component', 'Part_of', 'system'], ['transfer component', 'Used_for', 'parse reduction'], ['transfer component', 'Conjunction', 'maximum-entropy model'], ['packed parse forests', 'Used_for', 'parse reduction'], ['maximum-entropy model', 'Part_of', 'system'], ['maximum-entropy model', 'Used_for', 'stochastic output selection']]
metrics_sample: [0.75, 0.3333333333333333, 0.46153846153846156]
metrics_current: [0.2153846153846154, 0.11456628477905073, 0.14957264957264957]
text: Establishing a `` best '' correspondence between the '' UNL-tree + L0 '' and the '' MS-L0 structure '' , a lattice , may be done using the dictionary and trying to align the tree and the selected trajectory with as few crossing liaisons as possible .
result: triple_list: [["UNL-tree + L0", "correspondence", "MS-L0 structure"], ["dictionary", "Used_for", "UNL-tree + L0"], ["dictionary", "Used_for", "MS-L0 structure"], ["lattice", "Used_for", "crossing liaisons"]]
pred: [('UNL-tree + L0', 'correspondence', 'MS-L0 structure'), ('dictionary', 'Used_for', 'UNL-tree + L0'), ('dictionary', 'Used_for', 'MS-L0 structure'), ('lattice', 'Used_for', 'crossing liaisons')]
trues: [['UNL-tree + L0', 'Conjunction', 'MS-L0 structure'], ['dictionary', 'Used_for', 'lattice']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.2127659574468085, 0.11419249592169657, 0.14861995753715498]
text: This paper proposes to use a convolution kernel over parse trees to model syntactic structure information for relation extraction .
result: The candidate relations for this text are:
Used_for
Used_for
The candidate entities for this text are:
convolution kernel over parse trees
syntactic structure information
syntactic structure information
relation extraction
pred: []
trues: [['convolution kernel over parse trees', 'Used_for', 'syntactic structure information'], ['syntactic structure information', 'Used_for', 'relation extraction']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.2127659574468085, 0.11382113821138211, 0.1483050847457627]
text: We also address a more general problem of matrix rank degeneration & non-isolated minima in the low-rank matrix optimization by using new type of regularizer which approximately enforces the or-thonormality of the learned matrix very efficiently .
result: The candidate relations for this text are:
Used_for
Used_for
The candidate entities for this text are:
regularizer
matrix rank degeneration & non-isolated minima
or-thonormality
regularizer
pred: []
trues: [['matrix rank degeneration', 'Conjunction', 'non-isolated minima'], ['matrix rank degeneration', 'Feature_of', 'low-rank matrix optimization'], ['non-isolated minima', 'Feature_of', 'low-rank matrix optimization'], ['regularizer', 'Used_for', 'low-rank matrix optimization'], ['regularizer', 'Used_for', 'or-thonormality'], ['or-thonormality', 'Feature_of', 'learned matrix']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.2127659574468085, 0.11272141706924316, 0.14736842105263157]
text: We use novel priors , generate sparse and dense detection maps and our results show high detection rate with rejection to pathological motion and occlusion .
result: triple_list: [["detection maps", "Used_for", "detection rate with rejection to pathological motion and occlusion"]]
pred: [('detection maps', 'Used_for', 'detection rate with rejection to pathological motion and occlusion')]
trues: [['priors', 'Used_for', 'sparse and dense detection maps'], ['pathological motion', 'Conjunction', 'occlusion']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.21212121212121213, 0.11235955056179775, 0.14690451206715638]
text: The NCA is created statistically from a large corpus and recomposed under concept hierarchy constraints and frequency of occurrences .
result: triple_list: [["NCA", "used_for", "concept hierarchy constraints and frequency of occurrences"]]
pred: [('NCA', 'used_for', 'concept hierarchy constraints and frequency of occurrences')]
trues: [['concept hierarchy constraints', 'Used_for', 'NCA'], ['frequency of occurrences', 'Used_for', 'NCA']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.21148036253776434, 0.112, 0.14644351464435146]
text: This paper presents a critical discussion of the various approaches that have been used in the evaluation of Natural Language systems .
result: The candidate relations for this text are:
Used_for
The candidate entities for this text are:
evaluation
Natural Language systems
pred: []
trues: [['approaches', 'Used_for', 'evaluation of Natural Language systems']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.21148036253776434, 0.11182108626198083, 0.14629049111807732]
text: Our main result is a first-order upper bound on the distance between any approximate joint triangularizer of the matrices in M ' and any exact joint triangularizer of the matrices in M .
result: triple_list: [["distance", "Conjunction", "exact joint triangularizer"]]
pred: [('distance', 'Conjunction', 'exact joint triangularizer')]
trues: [['approximate joint triangularizer', 'Conjunction', 'exact joint triangularizer']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.21084337349397592, 0.11164274322169059, 0.14598540145985403]
text: OA improved phase locking in the auditory nerve ( AN ) and raised ASR accuracy for features derived from AN fibers ( ANFs ) .
result: triple_list: [["auditory nerve ( AN )", "Used_for", "OA"], ["ASR accuracy", "Used_for", "features derived from AN fibers ( ANFs )"]]
pred: [('auditory nerve ( AN )', 'Used_for', 'OA'), ('ASR accuracy', 'Used_for', 'features derived from AN fibers ( ANFs )')]
trues: [['OA', 'Used_for', 'phase locking in the auditory nerve ( AN )'], ['OA', 'Used_for', 'features'], ['ASR accuracy', 'Evaluate_for', 'features'], ['AN fibers ( ANFs )', 'Used_for', 'features']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.20958083832335328, 0.1109350237717908, 0.14507772020725387]
text: This paper describes a method for incorporating priming into an incremental probabilistic parser .
result: The candidate relations for this text are:
Used_for
The candidate entities for this text are:
method
incremental probabilistic parser
pred: []
trues: [['method', 'Used_for', 'priming'], ['priming', 'Used_for', 'incremental probabilistic parser']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.20958083832335328, 0.11058451816745656, 0.14477766287487073]
text: This paper describes FERRET , an interactive question-answering ( Q/A ) system designed to address the challenges of integrating automatic Q/A applications into real-world environments .
result: triple_list: [["FERRET", "Hyponym_of", "question-answering ( Q/A ) system"]]
pred: [('FERRET', 'Hyponym_of', 'question-answering ( Q/A ) system')]
trues: [['FERRET', 'Hyponym_of', 'interactive question-answering ( Q/A ) system'], ['FERRET', 'Used_for', 'integrating automatic Q/A applications into real-world environments']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.208955223880597, 0.11023622047244094, 0.1443298969072165]
text: Compared to the exhaustive procedure that thus far is the state-of-the-art for cascade evaluation , the proposed method requires fewer evaluations of the classifier functions , thereby speeding up the search .
result: triple_list: [["exhaustive procedure", "Hyponym_of", "cascade evaluation"], ["exhaustive procedure", "Used_for", "cascade evaluation"], ["classifier functions", "Evaluate_for", "search"]]
pred: [('exhaustive procedure', 'Hyponym_of', 'cascade evaluation'), ('exhaustive procedure', 'Used_for', 'cascade evaluation'), ('classifier functions', 'Evaluate_for', 'search')]
trues: [['exhaustive procedure', 'Used_for', 'cascade evaluation'], ['exhaustive procedure', 'Compare', 'method'], ['method', 'Used_for', 'search']]
metrics_sample: [0.3333333333333333, 0.3333333333333333, 0.3333333333333333]
metrics_current: [0.21005917159763313, 0.11128526645768025, 0.14549180327868852]
text: Extension to affine projection enables reconstruction without estimating cameras .
result: triple_list: [["affine projection", "Used_for", "reconstruction"]]
pred: [('affine projection', 'Used_for', 'reconstruction')]
trues: [['affine projection', 'Used_for', 'reconstruction']]
metrics_sample: [1.0, 1.0, 1.0]
metrics_current: [0.21238938053097345, 0.11267605633802817, 0.14723926380368096]
text: The applicability of many current information extraction techniques is severely limited by the need for supervised training data .
result: The candidate relations for this text are:
Feature_of
The candidate entities for this text are:
supervised training data
information extraction techniques
pred: []
trues: [['supervised training data', 'Used_for', 'information extraction techniques']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.21238938053097345, 0.1125, 0.1470888661899898]
text: Experiments show that these two strategies are effective in learning robust deep metrics for person re-identification , and accordingly our deep model significantly outperforms the state-of-the-art methods on several benchmarks of person re-identification .
result: triple_list: [["strategies", "Used_for", "learning robust deep metrics"], ["deep model", "Compare", "state-of-the-art methods"]]
pred: [('strategies', 'Used_for', 'learning robust deep metrics'), ('deep model', 'Compare', 'state-of-the-art methods')]
trues: [['robust deep metrics', 'Used_for', 'person re-identification'], ['deep model', 'Compare', 'state-of-the-art methods'], ['deep model', 'Used_for', 'person re-identification'], ['state-of-the-art methods', 'Used_for', 'person re-identification']]
metrics_sample: [0.5, 0.25, 0.3333333333333333]
metrics_current: [0.21407624633431085, 0.11335403726708075, 0.14822335025380712]
text: Second , based on the information resulting from the dictionary lookup stage , a set of rules is applied to the segmented strings in order to identify NE items .
result: triple_list: [["dictionary lookup stage", "Used_for", "NE items"], ["rules", "Used_for", "NE items"]]
pred: [('dictionary lookup stage', 'Used_for', 'NE items'), ('rules', 'Used_for', 'NE items')]
trues: [['dictionary lookup stage', 'Used_for', 'rules'], ['rules', 'Used_for', 'NE items']]
metrics_sample: [0.5, 0.5, 0.5]
metrics_current: [0.21574344023323616, 0.11455108359133127, 0.14964610717896867]
text: In this paper , we explore geometric structures of 3D lines in ray space for improving light field triangulation and stereo matching .
result: triple_list: [["3D lines", "feature_of", "ray space"]]
pred: [('3D lines', 'feature_of', 'ray space')]
trues: [['geometric structures of 3D lines', 'Used_for', 'light field triangulation'], ['geometric structures of 3D lines', 'Used_for', 'stereo matching'], ['ray space', 'Feature_of', 'geometric structures of 3D lines'], ['light field triangulation', 'Conjunction', 'stereo matching']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.21511627906976744, 0.11384615384615385, 0.1488933601609658]
text: Moreover , a cost zero solution always exists and can only be excluded by hard budget constraints .
result: triple_list: [["cost zero solution", "Evaluate_for", "hard budget constraints"]]
pred: [('cost zero solution', 'Evaluate_for', 'hard budget constraints')]
trues: [['hard budget constraints', 'Used_for', 'cost zero solution']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.2144927536231884, 0.11367127496159754, 0.14859437751004015]
text: The automated segmentation of images into semantically meaningful parts requires shape information since low-level feature analysis alone often fails to reach this goal .
result: triple_list: [["shape information", "Used_for", "images"]
pred: [('shape information', 'Used_for', 'images')]
trues: [['images', 'Used_for', 'automated segmentation']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.2138728323699422, 0.11349693251533742, 0.14829659318637275]
text: An important area of learning in autonomous agents is the ability to learn domain-speciic models of actions to be used by planning systems .
result: The candidate relations for this text are:
Used_for
Used_for
The candidate entities for this text are:
learning
autonomous agents
domain-speciic models of actions
planning systems
pred: []
trues: [['learning in autonomous agents', 'Used_for', 'domain-speciic models of actions'], ['planning systems', 'Used_for', 'domain-speciic models of actions']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.2138728323699422, 0.11314984709480122, 0.148]
text: Unlike other techniques that handle large outlier percentages , MINPRAN does not rely on a known error bound for the good data .
result: triple_list: [["MINPRAN", "used_for", "outlier percentages"]]
pred: [('MINPRAN', 'used_for', 'outlier percentages')]
trues: [['techniques', 'Used_for', 'large outlier percentages'], ['techniques', 'Compare', 'MINPRAN']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.2132564841498559, 0.11280487804878049, 0.14755732801595214]
text: A language learning experiment showed that assessors can differentiate native from non-native language essays in less than 100 words .
result: triple_list: [["assessors", "Used_for", "language essays"]]
pred: [('assessors', 'Used_for', 'language essays')]
trues: [['language learning', 'Evaluate_for', 'assessors']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.21264367816091953, 0.1126331811263318, 0.14726368159203979]
text: Many practical modeling problems involve discrete data that are best represented as draws from multinomial or categorical distributions .
result: The candidate relations for this text are:
Feature_of
The candidate entities for this text are:
multinomial or categorical distributions
discrete data
pred: []
trues: [['discrete data', 'Used_for', 'modeling problems'], ['multinomial or categorical distributions', 'Used_for', 'modeling problems']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.21264367816091953, 0.11229135053110774, 0.14697120158887786]
text: We introduce a method to accelerate the evaluation of object detection cascades with the help of a divide-and-conquer procedure in the space of candidate regions .
result: triple_list: [["method", "Used_for", "evaluation of object detection cascades"]]
pred: [('method', 'Used_for', 'evaluation of object detection cascades')]
trues: [['method', 'Used_for', 'evaluation of object detection cascades'], ['divide-and-conquer procedure', 'Used_for', 'method'], ['space of candidate regions', 'Feature_of', 'divide-and-conquer procedure']]
metrics_sample: [1.0, 0.3333333333333333, 0.5]
metrics_current: [0.2148997134670487, 0.11329305135951662, 0.14836795252225518]
text: We investigate the problem of learning to predict moves in the board game of Go from game records of expert players .
result: The candidate relations for this text are:
Used_for
The candidate entities for this text are:
game records of expert players
board game of Go
pred: []
trues: [['game records of expert players', 'Used_for', 'board game of Go']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.2148997134670487, 0.11312217194570136, 0.1482213438735178]
text: It is presented as a generalization of the recursive descent parser .
result: The candidate relations for this text are:
Used_for
The candidate entities for this text are:
generalization
recursive descent parser
pred: []
trues: [['recursive descent parser', 'Used_for', 'It']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.2148997134670487, 0.11295180722891567, 0.14807502467917077]
text: An extension of our method to space-time interest point detection for action classification is also presented .
result: triple_list: [["method", "Used_for", "space-time interest point detection for action classification"]]
pred: [('method', 'Used_for', 'space-time interest point detection for action classification')]
trues: [['method', 'Used_for', 'space-time interest point detection'], ['space-time interest point detection', 'Used_for', 'action classification']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.21428571428571427, 0.11261261261261261, 0.14763779527559057]
text: Translations are produced by means of a beam-search decoder .
result: triple_list: [["Translations", "Used_for", "beam-search decoder"]]
pred: [('Translations', 'Used_for', 'beam-search decoder')]
trues: [['beam-search decoder', 'Used_for', 'Translations']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.21367521367521367, 0.11244377811094453, 0.1473477406679764]
text: GLOSSER is designed to support reading and learning to read in a foreign language .
result: The candidate relations for this text are:
Used_for
Used_for
The candidate entities for this text are:
GLOSSER
reading
GLOSSER
learning to read in a foreign language
pred: []
trues: [['GLOSSER', 'Used_for', 'reading and learning']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.21367521367521367, 0.1122754491017964, 0.14720314033366044]
text: We explain this distinction and we show how this model may be applied to the interpretation of compounds in real texts , provided that complementary semantic information are retrieved .
result: triple_list: [["model", "Used_for", "interpretation of compounds in real texts"], ["semantic information", "Used_for", "model"]]
pred: [('model', 'Used_for', 'interpretation of compounds in real texts'), ('semantic information', 'Used_for', 'model')]
trues: [['model', 'Used_for', 'interpretation of compounds']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.21246458923512748, 0.11210762331838565, 0.14677103718199608]
text: In particular there are three areas of novelty : ( i ) we show how a photometric model of image formation can be combined with a statistical model of generic face appearance variation , learnt offline , to generalize in the presence of extreme illumination changes ; ( ii ) we use the smoothness of geodesically local appearance manifold structure and a robust same-identity likelihood to achieve invariance to unseen head poses ; and ( iii ) we introduce an accurate video sequence '' reillumination '' algorithm to achieve robustness to face motion patterns in video .
result: triple_list: [["photometric model of image formation", "Used_for", "extreme illumination changes"], ["photometric model of image formation", "Used_for", "generic face appearance variation"], ["smoothness of geodesically local appearance manifold structure", "Used_for", "invariance"], ["same-identity likelihood", "Used_for", "invariance"], ["video sequence '' reillumination '' algorithm", "Used_for", "robustness"], ["face motion patterns", "Used_for", "robustness"]]
pred: [('photometric model of image formation', 'Used_for', 'extreme illumination changes'), ('photometric model of image formation', 'Used_for', 'generic face appearance variation'), ('smoothness of geodesically local appearance manifold structure', 'Used_for', 'invariance'), ('same-identity likelihood', 'Used_for', 'invariance'), ("video sequence '' reillumination '' algorithm", 'Used_for', 'robustness'), ('face motion patterns', 'Used_for', 'robustness')]
trues: [['photometric model', 'Used_for', 'image formation'], ['photometric model', 'Conjunction', 'statistical model'], ['statistical model', 'Used_for', 'generic face appearance variation'], ['statistical model', 'Used_for', 'extreme illumination changes'], ['smoothness', 'Feature_of', 'geodesically local appearance manifold structure'], ['geodesically local appearance manifold structure', 'Conjunction', 'robust same-identity likelihood'], ['robustness', 'Evaluate_for', "video sequence '' reillumination '' algorithm"], ['face motion patterns', 'Feature_of', 'robustness'], ['face motion patterns', 'Part_of', 'video']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.20891364902506965, 0.11061946902654868, 0.14464802314368372]
text: Relaxations of these properties expose some of the interesting ( and unavoidable ) trade-offs at work in well-studied clustering techniques such as single-linkage , sum-of-pairs , k-means , and k-median .
result: triple_list: [["single-linkage", "Hyponym_of", "clustering techniques"], ["sum-of-pairs", "Hyponym_of", "clustering techniques"], ["k-means", "Hyponym_of", "clustering techniques"], ["k-median", "Hyponym_of", "clustering techniques"]]
pred: [('single-linkage', 'Hyponym_of', 'clustering techniques'), ('sum-of-pairs', 'Hyponym_of', 'clustering techniques'), ('k-means', 'Hyponym_of', 'clustering techniques'), ('k-median', 'Hyponym_of', 'clustering techniques')]
trues: [['single-linkage', 'Hyponym_of', 'well-studied clustering techniques'], ['single-linkage', 'Conjunction', 'sum-of-pairs'], ['sum-of-pairs', 'Hyponym_of', 'well-studied clustering techniques'], ['sum-of-pairs', 'Conjunction', 'k-means'], ['k-means', 'Hyponym_of', 'well-studied clustering techniques'], ['k-means', 'Conjunction', 'k-median'], ['k-median', 'Hyponym_of', 'well-studied clustering techniques']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.2066115702479339, 0.10948905109489052, 0.1431297709923664]
text: Finally , a novel feature weighting and selection function is presented , which yields superior feature vectors and better word similarity performance .
result: triple_list: [["feature weighting and selection function", "Used_for", "feature vectors"]]
pred: [('feature weighting and selection function', 'Used_for', 'feature vectors')]
trues: [['feature weighting and selection function', 'Used_for', 'feature vectors'], ['feature weighting and selection function', 'Used_for', 'word similarity'], ['feature vectors', 'Conjunction', 'word similarity']]
metrics_sample: [1.0, 0.3333333333333333, 0.5]
metrics_current: [0.2087912087912088, 0.11046511627906977, 0.14448669201520914]
text: This research is part of a larger study of anaphoric expressions , the results of which will be incorporated into a natural language generation system .
result: triple_list: [["anaphoric expressions", "part_of", "natural language generation system"]]
pred: [('anaphoric expressions', 'part_of', 'natural language generation system')]
trues: [['anaphoric expressions', 'Used_for', 'natural language generation system']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.20821917808219179, 0.11030478955007257, 0.14421252371916507]
text: To evaluate our proposed model , we build a large streaming video dataset with annotations .
result: triple_list: [["streaming video dataset", "Evaluate_for", "model"]]
pred: [('streaming video dataset', 'Evaluate_for', 'model')]
trues: [['streaming video dataset', 'Evaluate_for', 'model']]
metrics_sample: [1.0, 1.0, 1.0]
metrics_current: [0.2103825136612022, 0.11159420289855072, 0.14583333333333334]
text: It is based on a weakly supervised dependency parser that can model speech syntax without relying on any annotated training corpus .
result: The candidate relations for this text are:
Used_for
Used_for
The candidate entities for this text are:
weakly supervised dependency parser
It
annotated training corpus
weakly supervised dependency parser
pred: []
trues: [['weakly supervised dependency parser', 'Used_for', 'speech syntax']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.2103825136612022, 0.11143270622286541, 0.14569536423841062]
text: Although hidden Markov models ( HMMs ) provide a suitable generative model for field structured text , general unsupervised HMM learning fails to learn useful structure in either of our domains .
result: triple_list: [["hidden Markov models ( HMMs )", "generative model", "field structured text"], ["unsupervised HMM learning", "used_for", "structure"]]
pred: [('hidden Markov models ( HMMs )', 'generative model', 'field structured text'), ('unsupervised HMM learning', 'used_for', 'structure')]
trues: [['hidden Markov models ( HMMs )', 'Used_for', 'generative model'], ['generative model', 'Used_for', 'field structured text']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.20923913043478262, 0.1111111111111111, 0.14514608859566444]
text: We then turn to a discussion comparing the linguistic expressiveness of the two formalisms .
result: triple_list: [["linguistic expressiveness", "Compare", "formalisms"]]
pred: [('linguistic expressiveness', 'Compare', 'formalisms')]
trues: [['linguistic expressiveness', 'Feature_of', 'formalisms']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.2086720867208672, 0.11095100864553314, 0.14487300094073377]
text: We also show that a good-quality MT system can be built from scratch by starting with a very small parallel corpus ( 100,000 words ) and exploiting a large non-parallel corpus .
result: triple_list: [["MT system", "used_for", "parallel corpus"], ["non-parallel corpus", "used_for", "MT system"]]
pred: [('MT system', 'used_for', 'parallel corpus'), ('non-parallel corpus', 'used_for', 'MT system')]
trues: [['parallel corpus', 'Used_for', 'MT system'], ['parallel corpus', 'Conjunction', 'non-parallel corpus'], ['non-parallel corpus', 'Used_for', 'MT system']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.20754716981132076, 0.11047345767575323, 0.1441947565543071]
text: This paper presents an unsupervised learning approach to disambiguate various relations between named entities by use of various lexical and syntactic features from the contexts .
result: The candidate relations for this text are:
Used_for
Used_for
The candidate entities for this text are:
unsupervised learning approach
disambiguate
lexical and syntactic features
disambiguate
pred: []
trues: [['unsupervised learning approach', 'Used_for', 'relations between named entities'], ['lexical and syntactic features', 'Used_for', 'unsupervised learning approach']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.20754716981132076, 0.11015736766809728, 0.1439252336448598]
text: In general , our CRF model yields a lower error rate than the HMM and Max-ent models on the NIST sentence boundary detection task in speech , although it is interesting to note that the best results are achieved by three-way voting among the classifiers .
result: triple_list: [["CRF model", "Compare", "HMM and Max-ent models"], ["HMM and Max-ent models", "Used_for", "NIST sentence boundary detection task"], ["CRF model", "Used_for", "NIST sentence boundary detection task"]]
pred: [('CRF model', 'Compare', 'HMM and Max-ent models'), ('HMM and Max-ent models', 'Used_for', 'NIST sentence boundary detection task'), ('CRF model', 'Used_for', 'NIST sentence boundary detection task')]
trues: [['CRF model', 'Compare', 'HMM and Max-ent models'], ['error rate', 'Evaluate_for', 'CRF model'], ['error rate', 'Evaluate_for', 'HMM and Max-ent models'], ['NIST sentence boundary detection task', 'Evaluate_for', 'CRF model'], ['NIST sentence boundary detection task', 'Evaluate_for', 'HMM and Max-ent models'], ['speech', 'Feature_of', 'NIST sentence boundary detection task'], ['classifiers', 'Used_for', 'three-way voting']]
metrics_sample: [0.3333333333333333, 0.14285714285714285, 0.2]
metrics_current: [0.20855614973262032, 0.11048158640226628, 0.14444444444444443]
text: We present results on addressee identification in four-participants face-to-face meetings using Bayesian Network and Naive Bayes classifiers .
result: triple_list: [["Bayesian Network and Naive Bayes classifiers", "Used_for", "addressee identification"]]
pred: [('Bayesian Network and Naive Bayes classifiers', 'Used_for', 'addressee identification')]
trues: [['Bayesian Network', 'Used_for', 'addressee identification in four-participants face-to-face meetings'], ['Naive Bayes classifiers', 'Used_for', 'addressee identification in four-participants face-to-face meetings'], ['Naive Bayes classifiers', 'Conjunction', 'Bayesian Network']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.208, 0.11001410437235543, 0.1439114391143911]
text: Furthermore , we show how the recently developed efficient subwindow search ( ESS ) procedure [ 11 ] can be integrated into the last stage of our method .
result: triple_list: [["subwindow search ( ESS ) procedure", "integrate", "method"]]
pred: [('subwindow search ( ESS ) procedure', 'integrate', 'method')]
trues: [['subwindow search ( ESS ) procedure', 'Part_of', 'method']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.2074468085106383, 0.10985915492957747, 0.143646408839779]
text: A demonstration ( in UNIX ) for Applied Natural Language Processing emphasizes components put to novel technical uses in intelligent computer-assisted morphological analysis ( ICALL ) , including disambiguated morphological analysis and lemmatized indexing for an aligned bilingual corpus of word examples .
result: The candidate relations for this text are:
Used_for
Part_of
Used_for
Part_of
Conjunction
Part_of
The candidate entities for this text are:
UNIX
intelligent computer-assisted morphological analysis ( ICALL )
components
intelligent computer-assisted morphological analysis ( ICALL )
disambiguated morphological analysis
components
disambiguated morphological analysis
lemmatized indexing
lemmatized indexing
aligned bilingual corpus of word examples
pred: []
trues: [['components', 'Used_for', 'intelligent computer-assisted morphological analysis ( ICALL )'], ['disambiguated morphological analysis', 'Hyponym_of', 'components'], ['disambiguated morphological analysis', 'Conjunction', 'lemmatized indexing'], ['disambiguated morphological analysis', 'Used_for', 'aligned bilingual corpus'], ['lemmatized indexing', 'Hyponym_of', 'components'], ['lemmatized indexing', 'Used_for', 'aligned bilingual corpus']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.2074468085106383, 0.10893854748603352, 0.14285714285714285]
text: In this paper , we describe a search procedure for statistical machine translation ( MT ) based on dynamic programming ( DP ) .
result: The candidate relations for this text are:
Used_for
Used_for
The candidate entities for this text are:
search procedure
statistical machine translation ( MT )
dynamic programming ( DP )
search procedure
pred: []
trues: [['search procedure', 'Used_for', 'statistical machine translation ( MT )'], ['dynamic programming ( DP )', 'Used_for', 'statistical machine translation ( MT )']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.2074468085106383, 0.10863509749303621, 0.14259597806215724]
text: Hitherto , smooth motion has been encouraged using a trajectory basis , yielding a hard combinatorial problem with time complexity growing exponentially in the number of frames .
result: triple_list: [["smooth motion", "used_for", "trajectory basis"]]
pred: [('smooth motion', 'used_for', 'trajectory basis')]
trues: [['trajectory basis', 'Used_for', 'smooth motion'], ['time complexity', 'Evaluate_for', 'hard combinatorial problem']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.20689655172413793, 0.10833333333333334, 0.14220601640838648]
text: Examples are given that demonstrate the robustness of the new algorithm to spatial and temporal artefacts for long stereo video streams .
result: triple_list: [["spatial and temporal artefacts", "Conjunction", "stereo video streams"]]
pred: [('spatial and temporal artefacts', 'Conjunction', 'stereo video streams')]
trues: [['robustness', 'Evaluate_for', 'algorithm'], ['algorithm', 'Used_for', 'spatial and temporal artefacts'], ['spatial and temporal artefacts', 'Used_for', 'long stereo video streams']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.20634920634920634, 0.1078838174273859, 0.14168937329700274]
text: Our approach is based on the iterative deformation of a 3 -- D surface mesh to minimize an objective function .
result: triple_list: [["3 -- D surface mesh", "Used_for", "objective function"]]
pred: [('3 -- D surface mesh', 'Used_for', 'objective function')]
trues: [['iterative deformation of a 3 -- D surface mesh', 'Used_for', 'approach'], ['iterative deformation of a 3 -- D surface mesh', 'Used_for', 'objective function']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.20580474934036938, 0.10758620689655173, 0.14130434782608697]
text: We show promising results in both the detection and viewpoint classification tasks on these two challenging datasets .
result: triple_list: [["datasets", "Used_for", "detection and viewpoint classification tasks"]]
pred: [('datasets', 'Used_for', 'detection and viewpoint classification tasks')]
trues: [['datasets', 'Evaluate_for', 'detection and viewpoint classification tasks']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.20526315789473684, 0.10743801652892562, 0.1410488245931284]
text: The strong description and modeling properties of differential features make them useful tools that can be efficiently used as constraints for 3 -- D reconstruction .
result: triple_list: [["differential features", "used_for", "3 -- D reconstruction"]
pred: [('differential features', 'used_for', '3 -- D reconstruction')]
trues: [['them', 'Used_for', '3 -- D reconstruction']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.2047244094488189, 0.10729023383768914, 0.1407942238267148]
text: However , they provide no guarantee of being more efficient than exhaustive search .
result: The candidate relations for this text are:
Compare
The candidate entities for this text are:
they
exhaustive search
pred: []
trues: [['they', 'Compare', 'exhaustive search']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.2047244094488189, 0.10714285714285714, 0.1406672678088368]
text: Experimental results on our dataset and the public G3D dataset both demonstrate very promising performance of our scheme .
result: triple_list: [["dataset", "Evaluate_for", "scheme"], ["G3D dataset", "Evaluate_for", "scheme"]]
pred: [('dataset', 'Evaluate_for', 'scheme'), ('G3D dataset', 'Evaluate_for', 'scheme')]
trues: [['dataset', 'Conjunction', 'G3D dataset']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.20365535248041775, 0.10699588477366255, 0.14028776978417268]
text: We also found that OA is crucial for auditory processing by onset neurons ( ONs ) in the next neuronal stage , the auditory brainstem .
result: triple_list: [["OA", "used_for", "auditory processing by onset neurons ( ONs )"]]
pred: [('OA', 'used_for', 'auditory processing by onset neurons ( ONs )')]
trues: [['OA', 'Used_for', 'auditory processing'], ['onset neurons ( ONs )', 'Used_for', 'OA']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.203125, 0.106703146374829, 0.13991031390134528]
text: We evaluate the demands that task dialogues collected using this technique , place upon a prototype Natural Language system .
result: triple_list: [["task dialogues", "used_for", "Natural Language system"]]
pred: [('task dialogues', 'used_for', 'Natural Language system')]
trues: [['task dialogues', 'Used_for', 'prototype Natural Language system'], ['technique', 'Used_for', 'task dialogues']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.2025974025974026, 0.10641200545702592, 0.13953488372093023]
text: Given a new image , detection and classification are achieved by determining the position and viewpoint of the model that maximize recognition scores of the candidate objects .
result: The candidate relations for this text are:
Used_for
The candidate entities for this text are:
determining the position and viewpoint of the model
recognition scores of the candidate objects
pred: []
trues: [['image', 'Used_for', 'detection'], ['image', 'Used_for', 'classification'], ['detection', 'Conjunction', 'classification'], ['position', 'Used_for', 'detection'], ['position', 'Used_for', 'classification'], ['position', 'Conjunction', 'viewpoint'], ['viewpoint', 'Used_for', 'detection'], ['viewpoint', 'Used_for', 'classification']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.2025974025974026, 0.10526315789473684, 0.13854351687388985]
text: We propose a corpus-based method ( Biber ,1993 ; Nagao ,1993 ; Smadja ,1993 ) which generates Noun Classifier Associations ( NCA ) to overcome the problems in classifier assignment and semantic construction of noun phrase .
result: The candidate relations for this text are:
Used_for
Hyponym_of
Used_for
Conjunction
Used_for
Used_for
Used_for
The candidate entities for this text are:
corpus-based method
Noun Classifier Associations ( NCA )
Biber
corpus-based method
Biber
classifier assignment
Biber
semantic construction of noun phrase
Nagao
corpus-based method
Nagao
semantic construction of noun phrase
Nagao
smadja
corpus-based method
smadja
semantic construction of noun phrase

triple_list: [["corpus-based method", "Used_for", "Noun Classifier Associations ( NCA )"], ["Biber", "Hyponym_of", "corpus-based method"], ["Biber", "Used_for", "classifier assignment"], ["Biber", "Conjunction", "Nagao"], ["Nagao", "Used_for", "semantic construction of noun phrase"], ["Nagao", "Used_for", "semantic construction of noun phrase"], ["Nagao", "Used_for", "smadja"], ["smadja", "Used_for", "semantic construction of noun phrase"]]
pred: [('corpus-based method', 'Used_for', 'Noun Classifier Associations ( NCA )'), ('Biber', 'Hyponym_of', 'corpus-based method'), ('Biber', 'Used_for', 'classifier assignment'), ('Biber', 'Conjunction', 'Nagao'), ('Nagao', 'Used_for', 'semantic construction of noun phrase'), ('Nagao', 'Used_for', 'semantic construction of noun phrase'), ('Nagao', 'Used_for', 'smadja'), ('smadja', 'Used_for', 'semantic construction of noun phrase')]
trues: [['corpus-based method', 'Used_for', 'Noun Classifier Associations ( NCA )'], ['corpus-based method', 'Used_for', 'classifier assignment'], ['corpus-based method', 'Used_for', 'semantic construction of noun phrase'], ['Noun Classifier Associations ( NCA )', 'Used_for', 'classifier assignment'], ['Noun Classifier Associations ( NCA )', 'Used_for', 'semantic construction of noun phrase'], ['classifier assignment', 'Conjunction', 'semantic construction of noun phrase']]
metrics_sample: [0.14285714285714285, 0.16666666666666666, 0.15384615384615383]
metrics_current: [0.20153061224489796, 0.10575635876840696, 0.13871817383669885]
text: The experimental tests are carried out on the Verbmobil task ( German-English , 8000-word vocabulary ) , which is a limited-domain spoken-language task .
result: triple_list: [["Verbmobil task", "Hyponym_of", "spoken-language task"]]
pred: [('Verbmobil task', 'Hyponym_of', 'spoken-language task')]
trues: [['Verbmobil task', 'Hyponym_of', 'limited-domain spoken-language task']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.2010178117048346, 0.10561497326203209, 0.13847502191060473]
text: We rigorously establish the correctness of the methodology and show by experimentation using LSH that it is competitive in practice with available alternatives .
result: triple_list: [["it", "Used_for", "LSH"]]
pred: [('it', 'Used_for', 'LSH')]
trues: [['it', 'Compare', 'alternatives']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.20050761421319796, 0.1054739652870494, 0.13823272090988628]
text: Our technique is based on an improved , dynamic-programming , stereo algorithm for efficient novel-view generation .
result: The candidate relations for this text are:
Used_for
The candidate entities for this text are:
dynamic-programming, stereo algorithm
technique
pred: []
trues: [['technique', 'Used_for', 'novel-view generation'], ['dynamic-programming , stereo algorithm', 'Used_for', 'technique']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.20050761421319796, 0.1051930758988016, 0.13799126637554585]
text: There are four language pairs currently supported by GLOSSER : English-Bulgarian , English-Estonian , English-Hungarian and French-Dutch .
result: triple_list: [["English-Bulgarian", "Hyponym_of", "GLOSSER"], ["English-Estonian", "Hyponym_of", "GLOSSER"], ["English-Hungarian", "Hyponym_of", "GLOSSER"], ["French-Dutch", "Hyponym_of", "GLOSSER"]]
pred: [('English-Bulgarian', 'Hyponym_of', 'GLOSSER'), ('English-Estonian', 'Hyponym_of', 'GLOSSER'), ('English-Hungarian', 'Hyponym_of', 'GLOSSER'), ('French-Dutch', 'Hyponym_of', 'GLOSSER')]
trues: [['language pairs', 'Used_for', 'GLOSSER'], ['English-Bulgarian', 'Hyponym_of', 'language pairs'], ['English-Bulgarian', 'Conjunction', 'English-Estonian'], ['English-Estonian', 'Hyponym_of', 'language pairs'], ['English-Estonian', 'Conjunction', 'English-Hungarian'], ['English-Hungarian', 'Hyponym_of', 'language pairs'], ['English-Hungarian', 'Conjunction', 'French-Dutch'], ['French-Dutch', 'Hyponym_of', 'language pairs']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.1984924623115578, 0.10408432147562582, 0.13656006914433882]
text: Topical blog post retrieval is the task of ranking blog posts with respect to their relevance for a given topic .
result: The candidate relations for this text are:
Hyponym_of
The candidate entities for this text are:
blog posts
task
pred: []
trues: [['Topical blog post retrieval', 'Hyponym_of', 'ranking blog posts'], ['relevance', 'Feature_of', 'blog posts']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.1984924623115578, 0.1038107752956636, 0.1363244176013805]
text: We introduce a novel method of shape constrained image segmentation which is based on mixtures of feature distributions for color and texture as well as probabilistic shape knowledge .
result: triple_list: [["method", "Used_for", "shape constrained image segmentation"], ["mixtures of feature distributions for color and texture", "Used_for", "shape constrained image segmentation"], ["probabilistic shape knowledge", "Used_for", "shape constrained image segmentation"]]
pred: [('method', 'Used_for', 'shape constrained image segmentation'), ('mixtures of feature distributions for color and texture', 'Used_for', 'shape constrained image segmentation'), ('probabilistic shape knowledge', 'Used_for', 'shape constrained image segmentation')]
trues: [['method', 'Used_for', 'shape constrained image segmentation'], ['mixtures of feature distributions', 'Used_for', 'method'], ['mixtures of feature distributions', 'Used_for', 'color'], ['mixtures of feature distributions', 'Used_for', 'texture'], ['mixtures of feature distributions', 'Used_for', 'probabilistic shape knowledge'], ['color', 'Conjunction', 'texture'], ['texture', 'Conjunction', 'probabilistic shape knowledge']]
metrics_sample: [0.3333333333333333, 0.14285714285714285, 0.2]
metrics_current: [0.19950124688279303, 0.10416666666666667, 0.13686911890504705]
text: Amorph recognizes NE items in two stages : dictionary lookup and rule application .
result: triple_list: [["Amorph", "Used_for", "NE items"]]
pred: [('Amorph', 'Used_for', 'NE items')]
trues: [['Amorph', 'Used_for', 'NE items'], ['dictionary lookup', 'Part_of', 'Amorph'], ['dictionary lookup', 'Conjunction', 'rule application'], ['rule application', 'Part_of', 'Amorph']]
metrics_sample: [1.0, 0.25, 0.4]
metrics_current: [0.20149253731343283, 0.10492227979274611, 0.13798977853492334]
text: On the other hand , the manifold learning methods suggest to use the Euclidean distance in the local range , combining with the graphical relationship between samples , for approximating the geodesic distance .
result: triple_list: [["Euclidean distance", "used_for", "manifold learning methods"], ["Euclidean distance", "used_for", "geodesic distance"]]
pred: [('Euclidean distance', 'used_for', 'manifold learning methods'), ('Euclidean distance', 'used_for', 'geodesic distance')]
trues: [['Euclidean distance', 'Used_for', 'manifold learning methods'], ['Euclidean distance', 'Conjunction', 'graphical relationship'], ['Euclidean distance', 'Used_for', 'geodesic distance'], ['local range', 'Feature_of', 'Euclidean distance'], ['graphical relationship', 'Used_for', 'geodesic distance']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.2004950495049505, 0.10424710424710425, 0.1371718882303133]
text: Thus , our method can be applied with great benefit to language pairs for which only scarce resources are available .
result: triple_list: [["method", "Used_for", "language pairs"]]
pred: [('method', 'Used_for', 'language pairs')]
trues: [['scarce resources', 'Used_for', 'method']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.2, 0.10411311053984576, 0.13693998309382924]
text: These methods diier from previous work in the area in two ways : the use of an action model formalism which is better suited to the needs of a re-active agent , and successful implementation of noise-handling mechanisms .
result: triple_list: [["methods", "Used_for", "re-active agent"], ["action model formalism", "Used_for", "re-active agent"], ["noise-handling mechanisms", "Used_for", "methods"]]
pred: [('methods', 'Used_for', 're-active agent'), ('action model formalism', 'Used_for', 're-active agent'), ('noise-handling mechanisms', 'Used_for', 'methods')]
trues: [['action model formalism', 'Used_for', 'methods'], ['action model formalism', 'Used_for', 're-active agent'], ['noise-handling mechanisms', 'Used_for', 'methods']]
metrics_sample: [0.6666666666666666, 0.6666666666666666, 0.6666666666666666]
metrics_current: [0.2034313725490196, 0.10627400768245839, 0.13961312026913372]
text: We investigate the verbal and nonverbal means for grounding , and propose a design for embodied conversational agents that relies on both kinds of signals to establish common ground in human-computer interaction .
result: triple_list: [["verbal and nonverbal means", "Used_for", "grounding"], ["verbal and nonverbal means", "Used_for", "embodied conversational agents"], ["embodied conversational agents", "Used_for", "common ground in human-computer interaction"]]
pred: [('verbal and nonverbal means', 'Used_for', 'grounding'), ('verbal and nonverbal means', 'Used_for', 'embodied conversational agents'), ('embodied conversational agents', 'Used_for', 'common ground in human-computer interaction')]
trues: [['verbal and nonverbal means', 'Used_for', 'grounding'], ['design', 'Used_for', 'embodied conversational agents'], ['common ground', 'Used_for', 'human-computer interaction']]
metrics_sample: [0.3333333333333333, 0.3333333333333333, 0.3333333333333333]
metrics_current: [0.20437956204379562, 0.10714285714285714, 0.1405857740585774]
text: We present a new method for detecting interest points using histogram information .
result: triple_list: [["histogram information", "Used_for", "detecting interest points"]]
pred: [('histogram information', 'Used_for', 'detecting interest points')]
trues: [['method', 'Used_for', 'detecting interest points'], ['histogram information', 'Used_for', 'detecting interest points']]
metrics_sample: [1.0, 0.5, 0.6666666666666666]
metrics_current: [0.20631067961165048, 0.10814249363867684, 0.1419031719532554]
text: This statistical approach aims to minimize expected loss of translation errors under loss functions that measure translation performance .
result: The candidate relations for this text are:
Used_for
The candidate entities for this text are:
statistical approach
translation errors
pred: []
trues: [['loss functions', 'Evaluate_for', 'translation']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.20631067961165048, 0.10800508259212198, 0.14178482068390327]
text: Experiments on the TREC Blog track test set show that both groups of credibility indicators significantly improve retrieval effectiveness ; the best performance is achieved when combining them .
result: triple_list: [["TREC Blog track test set", "Evaluate_for", "retrieval effectiveness"]]
pred: [('TREC Blog track test set', 'Evaluate_for', 'retrieval effectiveness')]
trues: [['TREC Blog track test set', 'Evaluate_for', 'credibility indicators'], ['retrieval effectiveness', 'Evaluate_for', 'credibility indicators']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.20581113801452786, 0.10773130544993663, 0.14143094841930118]
text: We propose to incorporate a priori geometric constraints in a 3 -- D stereo reconstruction scheme to cope with the many cases where image information alone is not sufficient to accurately recover 3 -- D shape .
result: triple_list: [["3 -- D stereo reconstruction scheme", "Used_for", "3 -- D shape"]]
pred: [('3 -- D stereo reconstruction scheme', 'Used_for', '3 -- D shape')]
trues: [['priori geometric constraints', 'Part_of', '3 -- D stereo reconstruction scheme'], ['image information', 'Used_for', '3 -- D shape']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.20531400966183574, 0.10745891276864729, 0.14107883817427386]
text: In this paper , we study the problem of online action detection from the streaming skeleton data .
result: The candidate relations for this text are:
Used_for
The candidate entities for this text are:
streaming skeleton data
online action detection
pred: []
trues: [['streaming skeleton data', 'Used_for', 'online action detection']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.20531400966183574, 0.10732323232323232, 0.14096185737976782]
text: A domain independent model is proposed for the automated interpretation of nominal compounds in English .
result: The candidate relations for this text are:
Used_for
Feature_of
The candidate entities for this text are:
domain independent model
automated interpretation of nominal compounds
English
nominal compounds
pred: []
trues: [['domain independent model', 'Used_for', 'automated interpretation of nominal compounds'], ['English', 'Feature_of', 'nominal compounds']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.20531400966183574, 0.1070528967254408, 0.14072847682119205]
text: It uses a powerful pattern-matching language to classify grs into frames hierarchically in a way that mirrors inheritance-based lexica .
result: triple_list: [["It", "used_for", "pattern-matching language"], ["It", "used_for", "frames"], ["inheritance-based lexica", "used_for", "frames"]]
pred: [('It', 'used_for', 'pattern-matching language'), ('It', 'used_for', 'frames'), ('inheritance-based lexica', 'used_for', 'frames')]
trues: [['pattern-matching language', 'Used_for', 'It'], ['pattern-matching language', 'Used_for', 'grs']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.2038369304556355, 0.10678391959798995, 0.14014839241549876]
text: The distinction among these components is essential to provide an adequate explanation of such discourse phenomena as cue phrases , referring expressions , and interruptions .
result: triple_list: [["components", "Hyponym_of", "discourse phenomena"]]
pred: [('components', 'Hyponym_of', 'discourse phenomena')]
trues: [['cue phrases', 'Hyponym_of', 'discourse phenomena'], ['cue phrases', 'Conjunction', 'referring expressions'], ['referring expressions', 'Hyponym_of', 'discourse phenomena'], ['referring expressions', 'Conjunction', 'interruptions'], ['interruptions', 'Hyponym_of', 'discourse phenomena']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.20334928229665072, 0.10611735330836454, 0.13945857260049221]
text: This posterior encodes sparse se-lectional preferences between a head word and its dependents .
result: triple_list: [["posterior", "Conjunction", "selectional preferences"]]
pred: [('posterior', 'Conjunction', 'selectional preferences')]
trues: [['posterior', 'Used_for', 'sparse se-lectional preferences']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.20286396181384247, 0.1059850374064838, 0.13923013923013924]
text: Thus , in this paper , we study the problem of robust PCA with side information , where both prior structure and features of entities are exploited for recovery .
result: triple_list: [["prior structure", "used_for", "recovery"], ["features of entities", "used_for", "recovery"]]
pred: [('prior structure', 'used_for', 'recovery'), ('features of entities', 'used_for', 'recovery')]
trues: [['side information', 'Used_for', 'robust PCA'], ['prior structure', 'Conjunction', 'features of entities'], ['prior structure', 'Used_for', 'recovery'], ['features of entities', 'Used_for', 'recovery']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.20190023752969122, 0.1054590570719603, 0.13854930725346373]
text: We report the performance of the MBR decoders on a Chinese-to-English translation task .
result: triple_list: [["MBR decoders", "Used_for", "Chinese-to-English translation task"]]
pred: [('MBR decoders', 'Used_for', 'Chinese-to-English translation task')]
trues: [['MBR decoders', 'Used_for', 'Chinese-to-English translation task']]
metrics_sample: [1.0, 1.0, 1.0]
metrics_current: [0.2037914691943128, 0.10656753407682776, 0.1399511798209927]
text: This paper gives an overall account of a prototype natural language question answering system , called Chat-80 .
result: The candidate relations for this text are:
Hyponym_of
The candidate entities for this text are:
Chat-80
natural language question answering system
pred: []
trues: [['Chat-80', 'Hyponym_of', 'natural language question answering system']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.2037914691943128, 0.10643564356435643, 0.13983739837398373]
text: We evaluate across two corpora ( conversational telephone speech and broadcast news speech ) on both human transcriptions and speech recognition output .
result: triple_list: [["corpora", "Used_for", "conversational telephone speech and broadcast news speech"], ["human transcriptions", "Used_for", "speech recognition output"]]
pred: [('corpora', 'Used_for', 'conversational telephone speech and broadcast news speech'), ('human transcriptions', 'Used_for', 'speech recognition output')]
trues: [['corpora', 'Evaluate_for', 'human transcriptions'], ['corpora', 'Evaluate_for', 'speech recognition output'], ['conversational telephone speech', 'Hyponym_of', 'corpora'], ['conversational telephone speech', 'Conjunction', 'broadcast news speech'], ['broadcast news speech', 'Hyponym_of', 'corpora'], ['human transcriptions', 'Conjunction', 'speech recognition output']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.2028301886792453, 0.10565110565110565, 0.13893376413570274]
text: In this paper , we present our work on the detection of question-answer pairs in an email conversation for the task of email summarization .
result: triple_list: [["question-answer pairs", "Used_for", "email summarization"]]
pred: [('question-answer pairs', 'Used_for', 'email summarization')]
trues: [['detection of question-answer pairs', 'Used_for', 'email summarization'], ['email conversation', 'Used_for', 'detection of question-answer pairs']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.2023529411764706, 0.1053921568627451, 0.13859790491539084]
text: We propose a multi-task end-to-end Joint Classification-Regression Recurrent Neural Network to better explore the action type and temporal localiza-tion information .
result: The candidate relations for this text are:
Used_for
Used_for
The candidate entities for this text are:
multi-task end-to-end Joint Classification-Regression Recurrent Neural Network
action type and temporal localiza-tion information
action type and temporal localiza-tion information
multi-task end-to-end Joint Classification-Regression Recurrent Neural Network
pred: []
trues: [['multi-task end-to-end Joint Classification-Regression Recurrent Neural Network', 'Used_for', 'action type'], ['multi-task end-to-end Joint Classification-Regression Recurrent Neural Network', 'Used_for', 'temporal localiza-tion information'], ['action type', 'Conjunction', 'temporal localiza-tion information']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.2023529411764706, 0.10500610500610501, 0.1382636655948553]
text: A mixed-signal paradigm is presented for high-resolution parallel inner-product computation in very high dimensions , suitable for efficient implementation of kernels in image processing .
result: triple_list: [["mixed-signal paradigm", "Used_for", "high-resolution parallel inner-product computation"]]
pred: [('mixed-signal paradigm', 'Used_for', 'high-resolution parallel inner-product computation')]
trues: [['mixed-signal paradigm', 'Used_for', 'high-resolution parallel inner-product computation'], ['mixed-signal paradigm', 'Used_for', 'kernels'], ['kernels', 'Used_for', 'image processing']]
metrics_sample: [1.0, 0.3333333333333333, 0.5]
metrics_current: [0.20422535211267606, 0.10583941605839416, 0.13942307692307693]
text: Multi-view constraints associated with groups of patches are combined with a normalized representation of their appearance to guide matching and reconstruction , allowing the acquisition of true three-dimensional affine and Euclidean models from multiple images and their recognition in a single photograph taken from an arbitrary viewpoint .
result: triple_list: [["Multi-view constraints", "Used_for", "matching and reconstruction"], ["Multi-view constraints", "Used_for", "three-dimensional affine and Euclidean models"], ["normalized representation of their appearance", "Used_for", "matching and reconstruction"], ["normalized representation of their appearance", "Used_for", "three-dimensional affine and Euclidean models"]]
pred: [('Multi-view constraints', 'Used_for', 'matching and reconstruction'), ('Multi-view constraints', 'Used_for', 'three-dimensional affine and Euclidean models'), ('normalized representation of their appearance', 'Used_for', 'matching and reconstruction'), ('normalized representation of their appearance', 'Used_for', 'three-dimensional affine and Euclidean models')]
trues: [['Multi-view constraints', 'Conjunction', 'normalized representation'], ['Multi-view constraints', 'Used_for', 'matching'], ['Multi-view constraints', 'Used_for', 'reconstruction'], ['normalized representation', 'Used_for', 'matching'], ['normalized representation', 'Used_for', 'reconstruction'], ['matching', 'Conjunction', 'reconstruction'], ['images', 'Used_for', 'acquisition of true three-dimensional affine and Euclidean models']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.20232558139534884, 0.10494571773220748, 0.1382049245432883]
text: Background modeling is an important component of many vision systems .
result: The candidate relations for this text are:
Part_of
The candidate entities for this text are:
Background modeling
vision systems
pred: []
trues: [['Background modeling', 'Part_of', 'vision systems']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.20232558139534884, 0.10481927710843374, 0.1380952380952381]
text: In this paper , we present our approach for using information extraction annotations to augment document retrieval for distillation .
result: The candidate relations for this text are:
Used_for
Used_for
The candidate entities for this text are:
information extraction annotations
document retrieval
document retrieval
distillation
pred: []
trues: [['information extraction annotations', 'Used_for', 'document retrieval for distillation']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.20232558139534884, 0.10469314079422383, 0.1379857256145916]
text: With the rise of deep archi-tectures , the prime focus has been on object category recognition .
result: The candidate relations for this text are:
Used_for
The candidate entities for this text are:
deep archi-tectures
object category recognition
pred: []
trues: [['deep archi-tectures', 'Used_for', 'object category recognition']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.20232558139534884, 0.1045673076923077, 0.13787638668779714]
text: To our knowledge , this is the first a posteriori bound for joint matrix decomposition .
result: triple_list: [["a posteriori bound", "Feature_of", "joint matrix decomposition"]]
pred: [('a posteriori bound', 'Feature_of', 'joint matrix decomposition')]
trues: [['posteriori bound', 'Used_for', 'joint matrix decomposition']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.20185614849187936, 0.10444177671068428, 0.13765822784810128]
text: The formalism 's intended usage is to relate expressions of natural languages to their associated semantics represented in a logical form language , or to their translates in another natural language ; in summary , we intend it to allow TAGs to be used beyond their role in syntax proper .
result: triple_list: [["expressions of natural languages", "used_for", "logical form language"], ["expressions of natural languages", "used_for", "natural language"], ["it", "used_for", "TAGs"], ["TAGs", "used_for", "syntax"]]
pred: [('expressions of natural languages', 'used_for', 'logical form language'), ('expressions of natural languages', 'used_for', 'natural language'), ('it', 'used_for', 'TAGs'), ('TAGs', 'used_for', 'syntax')]
trues: [['logical form language', 'Used_for', 'semantics'], ['TAGs', 'Used_for', 'syntax proper']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.2, 0.10419161676646707, 0.13700787401574802]
text: Contrary to most of the existing mixture of viewpoints models , our model establishes explicit correspondences of parts across different viewpoints of the object class .
result: triple_list: [["model", "used_for", "mixture of viewpoints models"]]
pred: [('model', 'used_for', 'mixture of viewpoints models')]
trues: [['model', 'Compare', 'mixture of viewpoints models']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.19954128440366972, 0.10406698564593302, 0.13679245283018868]
text: A central goal of this research is to merge approaches from pivot MT , interactive MT , and multilingual text authoring .
result: The candidate relations for this text are:
Used_for
Conjunction
Used_for
Conjunction
Used_for
The candidate entities for this text are:
approaches
research
pivot MT
approaches
pivot MT
interactive MT
interactive MT
approaches
interactive MT
multilingual text authoring
pred: []
trues: [['pivot MT', 'Conjunction', 'interactive MT'], ['interactive MT', 'Conjunction', 'multilingual text authoring']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.19954128440366972, 0.10381861575178998, 0.13657770800627944]
text: It models reflection as regions containing two different layers moving over each other .
result: The candidate relations for this text are:
Used_for
Feature_of
The candidate entities for this text are:
It
reflection
layers
reflection
pred: []
trues: [['It', 'Used_for', 'reflection']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.19954128440366972, 0.10369487485101311, 0.13647058823529412]
text: We evaluate the quality of the extracted data by showing that it improves the performance of a state-of-the-art statistical machine translation system .
result: triple_list: [["it", "Evaluate_for", "statistical machine translation system"]]
pred: [('it', 'Evaluate_for', 'statistical machine translation system')]
trues: [['it', 'Used_for', 'statistical machine translation system']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.19908466819221968, 0.10357142857142858, 0.13625685199686766]
text: Starting from a DP-based solution to the traveling salesman problem , we present a novel technique to restrict the possible word reordering between source and target language in order to achieve an efficient search algorithm .
result: triple_list: [["DP-based solution", "Used_for", "traveling salesman problem"], ["DP-based solution", "Used_for", "search algorithm"]]
pred: [('DP-based solution', 'Used_for', 'traveling salesman problem'), ('DP-based solution', 'Used_for', 'search algorithm')]
trues: [['technique', 'Used_for', 'search algorithm']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.19817767653758542, 0.10344827586206896, 0.1359375]
text: First , we investigate how well the addressee of a dialogue act can be predicted based on gaze , utterance and conversational context features .
result: The candidate relations for this text are:
Used_for
Used_for
Conjunction
The candidate entities for this text are:
gaze
addressee of a dialogue act
utterance and conversational context features
addressee of a dialogue act
gaze
utterance and conversational context features
pred: []
trues: [['gaze', 'Used_for', 'addressee of a dialogue act'], ['gaze', 'Conjunction', 'utterance'], ['utterance', 'Used_for', 'addressee of a dialogue act'], ['utterance', 'Conjunction', 'conversational context features'], ['conversational context features', 'Used_for', 'addressee of a dialogue act']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.19817767653758542, 0.10283687943262411, 0.13540856031128404]
text: In practice , the current deep embedding methods use the Euclidean distance for the training and test .
result: The candidate relations for this text are:
Used_for
The candidate entities for this text are:
Euclidean distance
deep embedding methods
pred: []
trues: [['Euclidean distance', 'Used_for', 'deep embedding methods']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.19817767653758542, 0.10271546635182999, 0.13530326594090203]
text: Towards the modeling of the dynamic characteristics , optical flow is computed and utilized as a feature in a higher dimensional space .
result: triple_list: [["optical flow", "used_for", "higher dimensional space"]]
pred: [('optical flow', 'used_for', 'higher dimensional space')]
trues: [['optical flow', 'Used_for', 'modeling of the dynamic characteristics'], ['optical flow', 'Used_for', 'feature'], ['feature', 'Used_for', 'modeling of the dynamic characteristics'], ['higher dimensional space', 'Feature_of', 'feature']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.19772727272727272, 0.10223266745005875, 0.13477924089852827]
text: MINPRAN , a new robust operator , nds good ts in data sets where more than 50 % of the points are outliers .
result: triple_list: [["MINPRAN", "used_for", "data sets"]]
pred: [('MINPRAN', 'used_for', 'data sets')]
trues: [['MINPRAN', 'Hyponym_of', 'robust operator']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.19727891156462585, 0.10211267605633803, 0.1345707656612529]
text: Recent pool models of the inner hair cell synapse do not reproduce the dead time period after an intense stimulus , so we used visual inspection and automatic speech recognition ( ASR ) to investigate an offset adaptation ( OA ) model proposed by Zhang et al. [ 1 ] .
result: triple_list: [["pool models", "used_for", "inner hair cell synapse"], ["visual inspection", "Conjunction", "automatic speech recognition ( ASR )"], ["visual inspection", "Used_for", "offset adaptation ( OA ) model"], ["automatic speech recognition ( ASR )", "Conjunction", "offset adaptation ( OA ) model"], ["automatic speech recognition ( ASR )", "Used_for", "offset adaptation ( OA ) model"]]
pred: [('pool models', 'used_for', 'inner hair cell synapse'), ('visual inspection', 'Conjunction', 'automatic speech recognition ( ASR )'), ('visual inspection', 'Used_for', 'offset adaptation ( OA ) model'), ('automatic speech recognition ( ASR )', 'Conjunction', 'offset adaptation ( OA ) model'), ('automatic speech recognition ( ASR )', 'Used_for', 'offset adaptation ( OA ) model')]
trues: [['pool models', 'Used_for', 'inner hair cell synapse'], ['visual inspection', 'Conjunction', 'automatic speech recognition ( ASR )'], ['visual inspection', 'Used_for', 'offset adaptation ( OA ) model'], ['automatic speech recognition ( ASR )', 'Used_for', 'offset adaptation ( OA ) model']]
metrics_sample: [0.6, 0.75, 0.6666666666666665]
metrics_current: [0.20179372197309417, 0.10514018691588785, 0.13824884792626727]
text: We have previously introduced a statistical model describing the generating process of speech F0 contours , based on the discrete-time version of the Fujisaki model .
result: triple_list: [["statistical model", "used_for", "generating process of speech F0 contours"]]
pred: [('statistical model', 'used_for', 'generating process of speech F0 contours')]
trues: [['statistical model', 'Used_for', 'speech F0 contours'], ['Fujisaki model', 'Used_for', 'statistical model']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.20134228187919462, 0.1048951048951049, 0.13793103448275862]
text: These models simulate the reading time advantage for parallel structures found in human data , and also yield a small increase in overall parsing accuracy .
result: triple_list: [["models", "simulate", "reading time advantage"], ["parallel structures", "conjunction", "human data"], ["models", "yield", "parsing accuracy"]]
pred: [('models', 'simulate', 'reading time advantage'), ('parallel structures', 'conjunction', 'human data'), ('models', 'yield', 'parsing accuracy')]
trues: [['parallel structures', 'Part_of', 'human data']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.2, 0.10477299185098952, 0.13750954927425516]
text: We present an application of ambiguity packing and stochastic disambiguation techniques for Lexical-Functional Grammars ( LFG ) to the domain of sentence condensation .
result: triple_list: [["ambiguity packing and stochastic disambiguation techniques", "Used_for", "Lexical-Functional Grammars ( LFG )"]]
pred: [('ambiguity packing and stochastic disambiguation techniques', 'Used_for', 'Lexical-Functional Grammars ( LFG )')]
trues: [['ambiguity packing and stochastic disambiguation techniques', 'Used_for', 'Lexical-Functional Grammars ( LFG )'], ['ambiguity packing and stochastic disambiguation techniques', 'Used_for', 'sentence condensation']]
metrics_sample: [1.0, 0.5, 0.6666666666666666]
metrics_current: [0.2017738359201774, 0.10569105691056911, 0.13871951219512194]
text: Inherent ambiguities in the computation of features are addressed by using a data-dependent bandwidth for density estimation using kernels .
result: triple_list: [["data-dependent bandwidth", "Used_for", "density estimation using kernels"]]
pred: [('data-dependent bandwidth', 'Used_for', 'density estimation using kernels')]
trues: [['ambiguities', 'Feature_of', 'computation of features'], ['data-dependent bandwidth', 'Used_for', 'ambiguities'], ['data-dependent bandwidth', 'Used_for', 'density estimation'], ['kernels', 'Used_for', 'density estimation']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.2013274336283186, 0.10520231213872833, 0.13819286256643887]
text: Here we develop an approach for 1 distance that begins with an explicit and exactly distance-preserving embedding of the points into 2 2 .
result: triple_list: [["approach", "Used_for", "distance"], ["approach", "Used_for", "points"]]
pred: [('approach', 'Used_for', 'distance'), ('approach', 'Used_for', 'points')]
trues: [['approach', 'Used_for', '1 distance']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.20044052863436124, 0.10508083140877598, 0.13787878787878788]
text: The unique properties of tree-adjoining grammars ( TAG ) present a challenge for the application of TAGs beyond the limited confines of syntax , for instance , to the task of semantic interpretation or automatic translation of natural language .
result: triple_list: [["tree-adjoining grammars ( TAG )", "Used_for", "syntax"], ["tree-adjoining grammars ( TAG )", "Used_for", "semantic interpretation"], ["tree-adjoining grammars ( TAG )", "Used_for", "automatic translation of natural language"]]
pred: [('tree-adjoining grammars ( TAG )', 'Used_for', 'syntax'), ('tree-adjoining grammars ( TAG )', 'Used_for', 'semantic interpretation'), ('tree-adjoining grammars ( TAG )', 'Used_for', 'automatic translation of natural language')]
trues: [['TAGs', 'Used_for', 'semantic interpretation'], ['TAGs', 'Used_for', 'automatic translation of natural language'], ['semantic interpretation', 'Conjunction', 'automatic translation of natural language']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.19912472647702406, 0.1047180667433832, 0.13725490196078433]
text: Criteria for anaphora resolution within sentence boundaries rephrase major concepts from GB 's binding theory , while those for text-level anaphora incorporate an adapted version of a Grosz-Sidner-style focus model .
result: triple_list: [["GB's binding theory", "Used_for", "anaphora resolution"], ["GB's binding theory", "Used_for", "those for text-level anaphora"], ["Grosz-Sidner-style focus model", "Used_for", "those for text-level anaphora"]]
pred: [("GB's binding theory", 'Used_for', 'anaphora resolution'), ("GB's binding theory", 'Used_for', 'those for text-level anaphora'), ('Grosz-Sidner-style focus model', 'Used_for', 'those for text-level anaphora')]
trues: [['Criteria', 'Used_for', 'anaphora resolution within sentence boundaries'], ["GB 's binding theory", 'Used_for', 'Criteria'], ['those', 'Used_for', 'text-level anaphora'], ['Grosz-Sidner-style focus model', 'Part_of', 'those']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.19782608695652174, 0.10423825887743414, 0.13653413353338337]
text: Overall summarization quality of the proposed system is state-of-the-art , with guaranteed grammaticality of the system output due to the use of a constraint-based parser/generator .
result: triple_list: [["system", "Used_for", "summarization"]]
pred: [('system', 'Used_for', 'summarization')]
trues: [['summarization quality', 'Evaluate_for', 'system'], ['grammaticality', 'Evaluate_for', 'system'], ['constraint-based parser/generator', 'Used_for', 'system']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.19739696312364424, 0.10388127853881278, 0.13612565445026178]
text: Given the video streams acquired by two cameras placed on either side of a computer monitor , the proposed algorithm synthesises images from a virtual camera in arbitrary position ( typically located within the monitor ) to facilitate eye contact .
result: triple_list: [["video streams", "Used_for", "algorithm"], ["virtual camera", "Used_for", "images"], ["virtual camera", "Used_for", "eye contact"]]
pred: [('video streams', 'Used_for', 'algorithm'), ('virtual camera', 'Used_for', 'images'), ('virtual camera', 'Used_for', 'eye contact')]
trues: [['cameras', 'Used_for', 'video streams'], ['algorithm', 'Used_for', 'eye contact'], ['virtual camera', 'Used_for', 'images'], ['arbitrary position', 'Feature_of', 'virtual camera']]
metrics_sample: [0.3333333333333333, 0.25, 0.28571428571428575]
metrics_current: [0.19827586206896552, 0.10454545454545454, 0.1369047619047619]
text: Metagrammatical formalisms that combine context-free phrase structure rules and metarules ( MPS grammars ) allow concise statement of generalizations about the syntax of natural languages .
result: triple_list: [["Metagrammatical formalisms", "Conjunction", "context-free phrase structure rules"], ["Metagrammatical formalisms", "Conjunction", "metarules ( MPS grammars )"], ["context-free phrase structure rules", "Conjunction", "metarules ( MPS grammars )"]]
pred: [('Metagrammatical formalisms', 'Conjunction', 'context-free phrase structure rules'), ('Metagrammatical formalisms', 'Conjunction', 'metarules ( MPS grammars )'), ('context-free phrase structure rules', 'Conjunction', 'metarules ( MPS grammars )')]
trues: [['context-free phrase structure rules', 'Part_of', 'Metagrammatical formalisms'], ['context-free phrase structure rules', 'Conjunction', 'metarules ( MPS grammars )'], ['metarules ( MPS grammars )', 'Part_of', 'Metagrammatical formalisms']]
metrics_sample: [0.3333333333333333, 0.3333333333333333, 0.3333333333333333]
metrics_current: [0.19914346895074947, 0.10532276330690826, 0.13777777777777778]
text: Our results show that MT evaluation techniques are able to produce useful features for paraphrase classification and to a lesser extent entailment .
result: triple_list: [["MT evaluation techniques", "Used_for", "paraphrase classification"], ["MT evaluation techniques", "Used_for", "entailment"]]
pred: [('MT evaluation techniques', 'Used_for', 'paraphrase classification'), ('MT evaluation techniques', 'Used_for', 'entailment')]
trues: [['MT evaluation techniques', 'Used_for', 'features'], ['MT evaluation techniques', 'Used_for', 'paraphrase classification'], ['MT evaluation techniques', 'Used_for', 'entailment'], ['paraphrase classification', 'Conjunction', 'entailment']]
metrics_sample: [1.0, 0.5, 0.6666666666666666]
metrics_current: [0.2025586353944563, 0.10710259301014656, 0.140117994100295]
text: This motor control representation enables successful word spotting and matching of cursive scripts .
result: triple_list: [["motor control representation", "Used_for", "word spotting and matching of cursive scripts"]]
pred: [('motor control representation', 'Used_for', 'word spotting and matching of cursive scripts')]
trues: [['motor control representation', 'Used_for', 'word spotting'], ['motor control representation', 'Used_for', 'matching of cursive scripts'], ['word spotting', 'Conjunction', 'matching of cursive scripts']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.20212765957446807, 0.10674157303370786, 0.13970588235294118]
text: They improve the reconstruction results and enforce their consistency with a priori knowledge about object shape .
result: triple_list: [["They", "feature_of", "reconstruction results"]]
pred: [('They', 'feature_of', 'reconstruction results')]
trues: [['They', 'Used_for', 'reconstruction'], ['object shape', 'Feature_of', 'priori knowledge']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.20169851380042464, 0.10650224215246637, 0.13939838591342626]
text: We have implemented a restricted domain parser called Plume .
result: triple_list: [["Plume", "Hyponym_of", "restricted domain parser"]]
pred: [('Plume', 'Hyponym_of', 'restricted domain parser')]
trues: [['Plume', 'Hyponym_of', 'restricted domain parser']]
metrics_sample: [1.0, 1.0, 1.0]
metrics_current: [0.2033898305084746, 0.10750279955207166, 0.14065934065934066]
text: Towards this goal , we also propose a novel Multiple Instance Learning ( MIL ) formulation for the problem based on the logistic softmax function of covariance-based region features within a MAP estimation framework .
result: triple_list: [["Multiple Instance Learning ( MIL )", "Used_for", "problem"], ["logistic softmax function of covariance-based region features", "Used_for", "Multiple Instance Learning ( MIL )"]]
pred: [('Multiple Instance Learning ( MIL )', 'Used_for', 'problem'), ('logistic softmax function of covariance-based region features', 'Used_for', 'Multiple Instance Learning ( MIL )')]
trues: [['logistic softmax function of covariance-based region features', 'Used_for', 'Multiple Instance Learning ( MIL ) formulation'], ['MAP estimation framework', 'Used_for', 'Multiple Instance Learning ( MIL ) formulation']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.20253164556962025, 0.10726256983240223, 0.1402483564645727]
text: For LR ( 0 ) grammars , our algorithm is closely related to the recursive ascent parsers recently discovered by Kruse-man Aretz [ 1 ] and Roberts [ 2 ] .
result: triple_list: [["LR ( 0 ) grammars", "feature_of", "recursive ascent parsers"]]
pred: [('LR ( 0 ) grammars', 'feature_of', 'recursive ascent parsers')]
trues: [['algorithm', 'Used_for', 'LR ( 0 ) grammars'], ['algorithm', 'Conjunction', 'recursive ascent parsers']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.20210526315789473, 0.10702341137123746, 0.13994169096209913]
text: The objective of this work is to recognize faces using video sequences both for training and recognition input , in a realistic , unconstrained setup in which lighting , pose and user motion pattern have a wide variability and face images are of low resolution .
result: The candidate relations for this text are:
Used_for
Used_for
Used_for
Feature_of
The candidate entities for this text are:
video sequences
faces
video sequences
recognition input
video sequences
training
lighting
face images
pred: []
trues: [['lighting', 'Conjunction', 'pose'], ['pose', 'Conjunction', 'user motion pattern'], ['resolution', 'Feature_of', 'face images']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.20210526315789473, 0.10666666666666667, 0.13963636363636364]
text: In this paper We experimentally evaluate a trainable sentence planner for a spoken dialogue system by eliciting subjective human judgments .
result: The candidate relations for this text are:
Evaluate_for
Evaluate_for
The candidate entities for this text are:
trainable sentence planner
spoken dialogue system
subjective human judgments
trainable sentence planner
pred: []
trues: [['trainable sentence planner', 'Used_for', 'spoken dialogue system'], ['subjective human judgments', 'Evaluate_for', 'trainable sentence planner']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.20210526315789473, 0.10643015521064302, 0.13943355119825707]
text: On this challenging data set our system consistently demonstrated a nearly perfect recognition rate ( over 99.7 % on all three databases ) , significantly out-performing state-of-the-art commercial software and methods from the literature .
result: triple_list: [["system", "recognition rate", "%"], ["system", "compare", "commercial software and methods"], ["commercial software and methods", "compare", "system"]]
pred: [('system', 'recognition rate', '%'), ('system', 'compare', 'commercial software and methods'), ('commercial software and methods', 'compare', 'system')]
trues: [['data set', 'Evaluate_for', 'system'], ['system', 'Compare', 'commercial software'], ['system', 'Compare', 'methods'], ['recognition rate', 'Evaluate_for', 'system'], ['commercial software', 'Conjunction', 'methods']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.200836820083682, 0.10584343991179714, 0.13862815884476534]
text: We also introduce a novel classification method based on PER which leverages part of speech information of the words contributing to the word matches and non-matches in the sentence .
result: The candidate relations for this text are:
Used_for
Used_for
Part_of
The candidate entities for this text are:
classification method
PER
part of speech information
classification method
part of speech information
words
pred: []
trues: [['PER', 'Used_for', 'classification method'], ['PER', 'Used_for', 'part of speech information'], ['part of speech information', 'Used_for', 'word matches and non-matches']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.200836820083682, 0.1054945054945055, 0.138328530259366]
text: Our approach outperforms state-of-the-art trackers on the VIVID benchmark datasets .
result: triple_list: [["approach", "Compare", "trackers"]]
pred: [('approach', 'Compare', 'trackers')]
trues: [['state-of-the-art trackers', 'Compare', 'approach'], ['VIVID benchmark datasets', 'Evaluate_for', 'approach'], ['VIVID benchmark datasets', 'Evaluate_for', 'state-of-the-art trackers']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.20041753653444677, 0.10514786418400876, 0.13793103448275865]
text: We extract a set of heuristic principles from a corpus-based sample and formulate them as probabilistic Horn clauses .
result: The candidate relations for this text are:
Used_for
The candidate entities for this text are:
corpus-based sample
probabilistic Horn clauses
pred: []
trues: [['corpus-based sample', 'Used_for', 'heuristic principles'], ['probabilistic Horn clauses', 'Feature_of', 'heuristic principles']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.20041753653444677, 0.10491803278688525, 0.13773314203730275]
text: This work presents an automated technique for detecting reflections in image sequences by analyzing motion trajectories of feature points .
result: triple_list: [["image sequences", "Used_for", "detecting reflections"]]
pred: [('image sequences', 'Used_for', 'detecting reflections')]
trues: [['technique', 'Used_for', 'detecting reflections in image sequences'], ['motion trajectories', 'Used_for', 'technique'], ['feature points', 'Feature_of', 'motion trajectories']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.2, 0.10457516339869281, 0.13733905579399142]
text: In the experiments , we used a variety of methods for preparing a segmented corpus and compared the language models by their speech recognition accuracies .
result: triple_list: [["segmented corpus", "used_for", "speech recognition accuracies"]]
pred: [('segmented corpus', 'used_for', 'speech recognition accuracies')]
trues: [['methods', 'Used_for', 'preparing a segmented corpus'], ['speech recognition accuracies', 'Evaluate_for', 'language models']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.1995841995841996, 0.10434782608695652, 0.13704496788008563]
text: The robust principal component analysis ( robust PCA ) problem has been considered in many machine learning applications , where the goal is to decompose the data matrix to a low rank part plus a sparse residual .
result: triple_list: [["robust PCA", "used_for", "machine learning applications"]]
pred: [('robust PCA', 'used_for', 'machine learning applications')]
trues: [['robust principal component analysis ( robust PCA ) problem', 'Used_for', 'machine learning applications'], ['low rank part', 'Part_of', 'data matrix'], ['low rank part', 'Conjunction', 'sparse residual'], ['sparse residual', 'Part_of', 'data matrix']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.1991701244813278, 0.1038961038961039, 0.13655761024182078]
text: Given an object model and a black-box measure of similarity between the model and candidate targets , we consider visual object tracking as a numerical optimization problem .
result: The candidate relations for this text are:
Used_for
Used_for
The candidate entities for this text are:
object model
visual object tracking
black-box measure of similarity
visual object tracking
pred: []
trues: [['numerical optimization problem', 'Used_for', 'visual object tracking']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.1991701244813278, 0.10378378378378378, 0.13646055437100213]
text: Experiments on synthetic and real data show that both our triangulation and LAGC algorithms outperform state-of-the-art solutions in accuracy and visual quality .
result: triple_list: [["synthetic and real data", "Evaluate_for", "triangulation and LAGC algorithms"], ["triangulation and LAGC algorithms", "Compare", "state-of-the-art solutions"]]
pred: [('synthetic and real data', 'Evaluate_for', 'triangulation and LAGC algorithms'), ('triangulation and LAGC algorithms', 'Compare', 'state-of-the-art solutions')]
trues: [['synthetic and real data', 'Evaluate_for', 'triangulation and LAGC algorithms'], ['synthetic and real data', 'Evaluate_for', 'state-of-the-art solutions'], ['triangulation and LAGC algorithms', 'Compare', 'state-of-the-art solutions'], ['accuracy', 'Evaluate_for', 'triangulation and LAGC algorithms'], ['accuracy', 'Evaluate_for', 'state-of-the-art solutions'], ['visual quality', 'Evaluate_for', 'triangulation and LAGC algorithms'], ['visual quality', 'Evaluate_for', 'state-of-the-art solutions']]
metrics_sample: [1.0, 0.2857142857142857, 0.4444444444444445]
metrics_current: [0.2024793388429752, 0.10515021459227468, 0.13841807909604517]
text: For non-LR grammars the time-complexity of our parser is cubic if the functions that constitute the parser are implemented as memo-functions , i.e. functions that memorize the results of previous invocations .
result: triple_list: [["functions", "used_for", "parser"]]
pred: [('functions', 'used_for', 'parser')]
trues: [['time-complexity', 'Evaluate_for', 'parser'], ['parser', 'Used_for', 'non-LR grammars'], ['memo-functions', 'Used_for', 'parser']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.2020618556701031, 0.10481283422459893, 0.13802816901408452]
text: In order to perform an exhaustive comparison , we also evaluate a hand-crafted template-based generation component , two rule-based sentence planners , and two baseline sentence planners .
result: The candidate relations for this text are:
Conjunction
Hyponym_of
Hyponym_of
Conjunction
Hyponym_of
Conjunction
Hyponym_of
The candidate entities for this text are:
hand-crafted template-based generation component
rule-based sentence planners
hand-crafted template-based generation component
baseline sentence planners
rule-based sentence planners
baseline sentence planners
rule-based sentence planners
sentence planners
baseline sentence planners
sentence planners
pred: []
trues: [['hand-crafted template-based generation component', 'Conjunction', 'rule-based sentence planners'], ['rule-based sentence planners', 'Conjunction', 'baseline sentence planners']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.2020618556701031, 0.10458911419423693, 0.13783403656821377]
text: SVMs are known to be robust to overfitting ; however , a few training examples usually do not represent well the structure of the class .
result: triple_list: [["SVMs", "robust to", "overfitting"]]
pred: [('SVMs', 'robust to', 'overfitting')]
trues: [['SVMs', 'Used_for', 'overfitting']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.20164609053497942, 0.1044776119402985, 0.13764044943820222]
text: This model is meant to account for productive rules of interpretation which are inferred from the morpho-syntactic and semantic characteristics of the nominal constituents .
result: The candidate relations for this text are:
Used_for
The candidate entities for this text are:
morpho-syntactic and semantic characteristics of the nominal constituents
model
pred: []
trues: [['model', 'Used_for', 'productive rules of interpretation'], ['morpho-syntactic and semantic characteristics', 'Used_for', 'productive rules of interpretation'], ['morpho-syntactic and semantic characteristics', 'Feature_of', 'nominal constituents']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.20164609053497942, 0.10414452709883103, 0.1373510861948143]
text: Topic signatures can be useful in a number of Natural Language Processing ( NLP ) applications , such as Word Sense Disambiguation ( WSD ) and Text Summarisation .
result: triple_list: [["Topic signatures", "Used_for", "Natural Language Processing ( NLP ) applications"], ["Topic signatures", "Used_for", "Word Sense Disambiguation ( WSD )"], ["Topic signatures", "Used_for", "Text Summarisation"]]
pred: [('Topic signatures', 'Used_for', 'Natural Language Processing ( NLP ) applications'), ('Topic signatures', 'Used_for', 'Word Sense Disambiguation ( WSD )'), ('Topic signatures', 'Used_for', 'Text Summarisation')]
trues: [['Topic signatures', 'Used_for', 'Natural Language Processing ( NLP ) applications'], ['Topic signatures', 'Used_for', 'Word Sense Disambiguation ( WSD )'], ['Topic signatures', 'Used_for', 'Text Summarisation'], ['Word Sense Disambiguation ( WSD )', 'Hyponym_of', 'Natural Language Processing ( NLP ) applications'], ['Word Sense Disambiguation ( WSD )', 'Conjunction', 'Text Summarisation'], ['Text Summarisation', 'Hyponym_of', 'Natural Language Processing ( NLP ) applications']]
metrics_sample: [1.0, 0.5, 0.6666666666666666]
metrics_current: [0.2065439672801636, 0.10665258711721225, 0.1406685236768802]
text: Some of the extracts were expert human translations , others were machine translation outputs .
result: The candidate relations for this text are:
Hyponym_of
Conjunction
Hyponym_of
The candidate entities for this text are:
expert human translations
extracts
expert human translations
machine translation outputs
machine translation outputs
extracts
pred: []
trues: [['machine translation outputs', 'Conjunction', 'expert human translations']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.2065439672801636, 0.10654008438818566, 0.14057063326374392]
text: This paper describes the impact of using different-quality references on evaluation .
result: The candidate relations for this text are:
Evaluate_for
The candidate entities for this text are:
evaluation
references
pred: []
trues: [['different-quality references', 'Used_for', 'evaluation']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.2065439672801636, 0.10642781875658588, 0.1404728789986092]
text: The result theoretically justifies the effectiveness of features in robust PCA .
result: triple_list: [["features", "Used_for", "robust PCA"]]
pred: [('features', 'Used_for', 'robust PCA')]
trues: [['features', 'Feature_of', 'robust PCA']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.20612244897959184, 0.10631578947368421, 0.14027777777777778]
text: The task of machine translation ( MT ) evaluation is closely related to the task of sentence-level semantic equivalence classification .
result: The candidate relations for this text are:
Conjunction
The candidate entities for this text are:
machine translation ( MT ) evaluation
sentence-level semantic equivalence classification
pred: []
trues: [['machine translation ( MT ) evaluation', 'Conjunction', 'sentence-level semantic equivalence classification']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.20612244897959184, 0.10620399579390116, 0.14018043025676613]
text: Such a triangulation provides a piecewise-linear interpolant useful for light field super-resolution .
result: triple_list: [["triangulation", "Used_for", "piecewise-linear interpolant"]]
pred: [('triangulation', 'Used_for', 'piecewise-linear interpolant')]
trues: [['triangulation', 'Used_for', 'piecewise-linear interpolant'], ['piecewise-linear interpolant', 'Used_for', 'light field super-resolution']]
metrics_sample: [1.0, 0.5, 0.6666666666666666]
metrics_current: [0.20773930753564154, 0.10703043022035677, 0.1412742382271468]
text: However , when the object becomes partially or totally occluded , such local tracking is prone to failure , especially when common prediction techniques like the Kalman filter do not provide a good estimate of object parameters in future frames .
result: triple_list: [["object", "feature_of", "local tracking"]]
pred: [('object', 'feature_of', 'local tracking')]
trues: [['Kalman filter', 'Part_of', 'prediction techniques']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.2073170731707317, 0.1069182389937107, 0.14107883817427386]
text: In this paper , we introduce an annotation scheme for scientific articles which can be used to build such a resource in a consistent way .
result: triple_list: [["annotation scheme", "Used_for", "scientific articles"]]
pred: [('annotation scheme', 'Used_for', 'scientific articles')]
trues: [['annotation scheme', 'Used_for', 'scientific articles'], ['annotation scheme', 'Used_for', 'resource']]
metrics_sample: [1.0, 0.5, 0.6666666666666666]
metrics_current: [0.20892494929006086, 0.10774058577405858, 0.14216701173222915]
text: We present Minimum Bayes-Risk ( MBR ) decoding for statistical machine translation .
result: triple_list: [["Minimum Bayes-Risk ( MBR ) decoding", "Used_for", "statistical machine translation"]]
pred: [('Minimum Bayes-Risk ( MBR ) decoding', 'Used_for', 'statistical machine translation')]
trues: [['Minimum Bayes-Risk ( MBR ) decoding', 'Used_for', 'statistical machine translation']]
metrics_sample: [1.0, 1.0, 1.0]
metrics_current: [0.21052631578947367, 0.10867293625914315, 0.14334941419710542]
text: A purely functional implementation of LR-parsers is given , together with a simple correctness proof .
result: triple_list: [["LR-parsers", "feature_of", "correctness proof"]]
pred: [('LR-parsers', 'feature_of', 'correctness proof')]
trues: [['correctness proof', 'Conjunction', 'LR-parsers']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.2101010101010101, 0.10855949895615867, 0.14315209910529939]
text: Simulated and experimental results show that our method recovers scene geometry with high subpixel precision , and that it can handle many challenges of active reconstruction systems .
result: triple_list: [["method", "Used_for", "scene geometry"], ["it", "Used_for", "active reconstruction systems"]]
pred: [('method', 'Used_for', 'scene geometry'), ('it', 'Used_for', 'active reconstruction systems')]
trues: [['method', 'Used_for', 'scene geometry'], ['subpixel precision', 'Feature_of', 'scene geometry'], ['it', 'Used_for', 'active reconstruction systems']]
metrics_sample: [1.0, 0.6666666666666666, 0.8]
metrics_current: [0.21327967806841047, 0.11030176899063475, 0.14540466392318244]
text: A generative framework is used for learning a model that captures the relative position of parts within each of the discretized viewpoints .
result: The candidate relations for this text are:
Used_for
Used_for
The candidate entities for this text are:
generative framework
model
model
relative position of parts
pred: []
trues: [['generative framework', 'Used_for', 'model']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.21327967806841047, 0.1101871101871102, 0.1453050034270048]
text: In this paper , we propose a novel moderate positive sample mining method to train robust CNN for person re-identification , dealing with the problem of large variation .
result: The candidate relations for this text are:
Used_for
Used_for
The candidate entities for this text are:
moderate positive sample mining method
CNN
CNN
person re-identification
pred: []
trues: [['moderate positive sample mining method', 'Used_for', 'robust CNN'], ['robust CNN', 'Used_for', 'person re-identification']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.21327967806841047, 0.10995850622406639, 0.14510609171800137]
text: We suggest a new goal and evaluation criterion for word similarity measures .
result: The candidate relations for this text are:
Used_for
The candidate entities for this text are:
goal
word similarity measures
pred: []
trues: [['evaluation criterion', 'Used_for', 'word similarity measures']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.21327967806841047, 0.10984455958549223, 0.14500683994528046]
text: In addition , we conduct synthetic experiments as well as a real application on noisy image classification to show that our method also improves the performance in practice by exploiting side information .
result: triple_list: [["synthetic experiments", "Evaluate_for", "method"], ["noisy image classification", "Evaluate_for", "method"]]
pred: [('synthetic experiments', 'Evaluate_for', 'method'), ('noisy image classification', 'Evaluate_for', 'method')]
trues: [['noisy image classification', 'Evaluate_for', 'method'], ['side information', 'Used_for', 'method']]
metrics_sample: [0.5, 0.5, 0.5]
metrics_current: [0.21442885771543085, 0.11065149948293691, 0.14597544338335608]
text: It has also been studied in the framework of Japanese information extraction ( [ 3 ] ) in recent years .
result: The candidate relations for this text are:
Part_of
The candidate entities for this text are:
Japanese information extraction
It
pred: []
trues: [['Japanese information extraction', 'Used_for', 'It']]
metrics_sample: [0, 0.0, 0]
metrics_current: [0.21442885771543085, 0.11053719008264463, 0.14587593728698026]
text: A bio-inspired model for an analog programmable array processor ( APAP ) , based on studies on the vertebrate retina , has permitted the realization of complex programmable spatio-temporal dynamics in VLSI .
result: triple_list: [["bio-inspired model", "Used_for", "analog programmable array processor ( APAP )"], ["vertebrate retina", "Used_for", "bio-inspired model"]]
pred: [('bio-inspired model', 'Used_for', 'analog programmable array processor ( APAP )'), ('vertebrate retina', 'Used_for', 'bio-inspired model')]
trues: [['bio-inspired model', 'Used_for', 'analog programmable array processor ( APAP )'], ['bio-inspired model', 'Used_for', 'complex programmable spatio-temporal dynamics'], ['vertebrate retina', 'Used_for', 'bio-inspired model'], ['complex programmable spatio-temporal dynamics', 'Feature_of', 'VLSI']]
metrics_sample: [1.0, 0.5, 0.6666666666666666]
metrics_current: [0.21756487025948104, 0.11213991769547325, 0.14799728445349628]
text: It is demonstrated qualitatively and quantitatively on a dataset of scenes and is suitable for current work in unsupervised object discovery without top-down knowledge .
result: triple_list: [["It", "Used_for", "unsupervised object discovery without top-down knowledge."], ["It", "Used_for", "scenes"]]
pred: [('It', 'Used_for', 'unsupervised object discovery without top-down knowledge.'), ('It', 'Used_for', 'scenes')]
trues: [['It', 'Used_for', 'unsupervised object discovery'], ['dataset of scenes', 'Evaluate_for', 'It']]
metrics_sample: [0.0, 0.0, 0]
metrics_current: [0.21669980119284293, 0.11190965092402463, 0.14759647935003387]